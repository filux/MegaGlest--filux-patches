Index: CMakeLists.txt
===================================================================
--- CMakeLists.txt	(wersja 4583)
+++ CMakeLists.txt	(kopia robocza)
@@ -82,13 +82,13 @@
                 #MESSAGE(STATUS "******* TEST2 MegaGlest Version #3 is [${VER_RELEASE}] ")
 
                 MESSAGE(STATUS "MegaGlest Version is [${VER_MAJOR}.${VER_MINOR}] ")
         endif()
 # parse the version string
 else()
-        MESSAGE(STATUS "** Trying 3 part versioning] ")
+        MESSAGE(STATUS "** Trying 3 part versioning")
         if (_threePartMatch)
                 # parse the parts of the version string
                 STRING(REGEX REPLACE "\"v([0-9])\\.[0-9]\\.[0-9].*" "\\1" VER_MAJOR   "${_threePartMatch}")
                 STRING(REGEX REPLACE "\"v[0-9]\\.([0-9])\\.[0-9].*" "\\1" VER_MINOR   "${_threePartMatch}")
                 STRING(REGEX REPLACE "\"v[0-9]\\.[0-9]\\.([0-9]).*" "\\1" VER_RELEASE "${_threePartMatch}")
 
Index: build-mg.sh
===================================================================
--- build-mg.sh	(wersja 4583)
+++ build-mg.sh	(kopia robocza)
@@ -1,13 +1,15 @@
 #!/bin/bash
 # Use this script to build MegaGlest using cmake
 # ----------------------------------------------------------------------------
 # Written by Mark Vejvoda <mark_vejvoda@hotmail.com>
 # Copyright (c) 2011 Mark Vejvoda under GNU GPL v3.0+
-
 LANG=C
+
+if [ `id -u`'x' = '0x' ]; then echo " This script can't be run as root (UID 0)." >&2; exit 9; fi
+
 NUMCORES=`lscpu -p | grep -cv '^#'`
 if [ "$NUMCORES" = '' ]; then NUMCORES=1; fi
 
 mkdir -p build
 cd build
 
@@ -16,27 +18,28 @@
 # This is for regular developers and used by our installer
 # For more cmake/build options refer to 
 # http://wiki.megaglest.org/Linux_Compiling#Building_using_CMake_by_Hand
 # this script looks for google-breakpad in the main root folder, you may link to the real path using:
 # ln -s ../../google-breakpad/ google-breakpad
 
-LANG=C
-svnversion=`readlink -f $0 | xargs dirname | xargs svnversion`
 architecture=`uname -m`
 
 # Is the lsb_release command supported?
-if [ `which lsb_release`'x' = 'x' ]
-then
-	lsb=0
-	if [ -e /etc/debian_version ];   then distribution='Debian';   release='unknown release version'; codename=`cat /etc/debian_version`;   fi
-	if [ -e /etc/SuSE-release ];     then distribution='SuSE';     release='unknown release version'; codename=`cat /etc/SuSE-release`;     fi
-	if [ -e /etc/fedora-release ];   then distribution='Fedora';   release='unknown release version'; codename=`cat /etc/fedora-release`;   fi
-	if [ -e /etc/redhat-release ];   then distribution='Redhat';   release='unknown release version'; codename=`cat /etc/redhat-release`;   fi
-	if [ -e /etc/mandrake-release ]; then distribution='Mandrake'; release='unknown release version'; codename=`cat /etc/mandrake-release`; fi
+if [ `which lsb_release`'x' = 'x' ]; then
+	lsb='false'
+	
+	if [ -e "/etc/os-release" ]; then
+		distribution=`awk -F "=" '/^ID/ {print $2}' /etc/os-release | awk '{ gsub("\"|\t",""); print }' | awk '{ gsub(" |\t","_"); print }'`
+		codename=`awk -F "=" '/PRETTY_NAME/ {print $2}' /etc/os-release | awk '{ gsub("\"|\t",""); print }'`
+		release_ver=`awk -F "=" '/VERSION_ID/ {print $2}' /etc/os-release | awk '{ gsub("\"|\t",""); print }'`
+		if [ "$release_ver" != "" ]; then release="$release_ver"; else release="unknown"; fi
+	else
+		distribution="unknown"; codename="unknown"; release="unknown"
+	fi
 else
-	lsb=1
+	lsb='true'
 
 	# lsb_release output by example:
         #
 	# $ lsb_release -i
 	# Distributor ID:       Ubuntu
 	#
@@ -46,31 +49,30 @@
 	# $ lsb_release -r
 	# Release:      12.04
 	#
 	# $ lsb_release -c
 	# Codename:     precise
 
-	distribution=`lsb_release -i | awk -F':' '{ gsub(/^[ \t]*/,"",$2); print $2 }'`
+	distribution=`lsb_release -i | awk -F':' '{ gsub(/^[ \t]*/,"",$2); print $2 }' | awk '{ gsub(" |\t","_"); print }'`
 	release=`lsb_release -r | awk -F':' '{ gsub(/^[  \t]*/,"",$2); print $2 }'`
 	codename=`lsb_release -c | awk -F':' '{ gsub(/^[ \t]*/,"",$2); print $2 }'`
 
 	# Some distribution examples:
 	#
-	# OpenSuSE 11.4
-	#LSB Version:    n/a
-	#Distributor ID: SUSE LINUX
-	#Description:    openSUSE 11.4 (x86_64)
-	#Release:        11.4
-	#Codename:       Celadon
-	#
 	# OpenSuSE 12.1
 	#LSB support:  1
 	#Distribution: SUSE LINUX
 	#Release:      12.1
 	#Codename:     Asparagus
 	#
+	# OpenSuSE 12.3
+	#LSB support:  1
+	#Distribution: openSUSE project
+	#Release:      12.3
+	#Codename:     Dartmouth
+	#
 	# Arch
 	#LSB Version:    n/a
 	#Distributor ID: archlinux
 	#Description:    Arch Linux
 	#Release:        rolling
 	#Codename:       n/a
@@ -79,47 +81,41 @@
 	#Distributor ID: Ubuntu
 	#Description:	 Ubuntu 12.04 LTS
 	#Release:	 12.04
 	#Codename:	 precise
 fi
 
-echo 'We have detected the following system:'
-echo ' [ '"$distribution"' ] [ '"$release"' ] [ '"$codename"' ] [ '"$architecture"' ]'
+echo ''
+echo " LSB support:  $lsb"
+echo ' We have detected the following system:'
+echo " [ $distribution ] [ $release ] [ $codename ] [ $architecture ]"
+
 
 EXTRA_CMAKE_OPTIONS=
 
 case $distribution in
-	SuSE|SUSE?LINUX|Opensuse) 
+	SuSE|SUSE_LINUX|Opensuse|openSUSE_project|opensuse|Fedora|fedora|PCLinuxOS|pclinuxos|Mageia|mageia)
 		case $release in
 			*)
-				echo 'Turning ON dynamic CURL ...'
-				EXTRA_CMAKE_OPTIONS="${EXTRA_CMAKE_OPTIONS} -DFORCE_CURL_DYNAMIC_LIBS=ON"
-				;;
-		esac
-		;;
-
-	Fedora) 
-		case $release in
-			*)
-				echo 'Turning ON dynamic CURL ...'
-				EXTRA_CMAKE_OPTIONS="${EXTRA_CMAKE_OPTIONS} -DFORCE_CURL_DYNAMIC_LIBS=ON"
+				echo ' Turning ON dynamic CURL and IRCClient and MiniUPnPc ...'
+				EXTRA_CMAKE_OPTIONS="${EXTRA_CMAKE_OPTIONS} -DFORCE_CURL_DYNAMIC_LIBS=ON -DFORCE_IRCCLIENT_DYNAMIC_LIBS=ON -DFORCE_MINIUPNPC_DYNAMIC_LIBS=ON"
 				;;
 		esac
 		;;
+	*) ;;
 esac
 
-#exit 1;
 
 CURRENTDIR="$(dirname $(readlink -f $0))"
 cmake -DCMAKE_INSTALL_PREFIX='' -DWANT_DEV_OUTPATH=ON -DWANT_STATIC_LIBS=ON -DBUILD_MEGAGLEST_TESTS=ON -DBREAKPAD_ROOT=${CURRENTDIR}/../google-breakpad/ ${EXTRA_CMAKE_OPTIONS} ..
-if [ $? -ne 0 ]; then 
+if [ "$?" -ne "0" ]; then 
   echo 'ERROR: CMAKE failed.' >&2; exit 1
 fi
 
 make -j$NUMCORES
-if [ $? -ne 0 ]; then
+if [ "$?" -ne "0" ]; then
   echo 'ERROR: MAKE failed.' >&2; exit 2
 fi
 
 cd ..
 echo ''
 echo 'BUILD COMPLETE.'
@@ -127,6 +123,9 @@
 echo 'To build with google-breakpad support pass the path to the library as follows:'
 echo 'cmake -DBREAKPAD_ROOT=/home/softcoder/Code/google-breakpad/'
 echo 'To launch MegaGlest from the current directory, use:'
 echo '  mk/linux/megaglest --ini-path=mk/linux/ --data-path=mk/linux/'
 echo 'Or change into mk/linux and run it from there:'
 echo '  ./megaglest --ini-path=./ --data-path=./'
+echo ''
+
+exit 0
Index: data/glest_game/data/lang/english.lng
===================================================================
--- data/glest_game/data/lang/english.lng	(wersja 4583)
+++ data/glest_game/data/lang/english.lng	(kopia robocza)
@@ -1,66 +1,67 @@
 ; This is the main MegaGlest localization file (INI format)
 ;
 ; Your contributions are welcome. Please ensure you agree to the terms of the
 ; contributors license (CC-BY-SA 3.0 Unported). Please also read this page in
 ; its entirety before contributing: http://translate.megaglest.org
 
-3dArt=3D art
-3dAnd2dArt=3D and 2D art
-2dArtAndWeb=2D art
+3dArt=3D art:
+3dAnd2dArt=3D and 2D art:
+2dArtAndWeb=2D art:
 Abort=Abort
 About=About
 Address=Address
 AdvancedGameOptions=Advanced Options
 AffectedUnits=Affected Units
-AffectedUnitsFromAll=Affected units From All
-AffectedUnitsFromFoe=Affected units from Foe
-AffectedUnitsFromTeam=Affected units from Team
+AffectedUnitsFromAll=Affected all units
+AffectedUnitsFromFoe=Affected enemy units
+AffectedUnitsFromTeam=Affected units from your Team
 AffectedUnitsFromYourFaction=Affected units from your Faction
 AI=AI
 AISwitchTeamAcceptPercent=AI accept percent
 AlreadyUpgraded=Already Upgraded
 All=All
 allowMultiBoost=Allow Multiple Boosts
 AllowNativeLanguageTechtree=Allow Translated Techtrees
 AllowObservers=Allow Observers
 AllowPlayerJoinTeam=Allow player [%s] to join your team (changing from team# %d to team# %d)?
 AllowInGameJoinPlayer=Players can join in game
 AmbientVolume=Ambient Volume:
 Amount=Amount
-AnimatedTilesetObjects=Animated tileset objects
-Animation=Animation
+AnimatedTilesetObjects=Animated tileset objects:
+Animation=Animation:
 Armor=Armor
 Attack=Attack
 AttackDistance=Range
 AttackSpeed=Attack Speed
 AttackStopped=Attack stopped
 AttackStrenght=Damage
 Audio=Audio
 AutoConfig=Auto config
 AutoRefreshRate=Automatic Refresh Rate
 AvailableServers=Available Servers
 BattleOver=Battle is over
+BattleNotOver=Battle perhaps isn't over
 BlockPlayer=Block Player
 BlockPlayerClear=Clear Blocked Players
-BlockPlayerServerMsg=The server has temporarily blocked IP Address [%s] from this game.
+BlockPlayerServerMsg=The server has temporarily blocked IP Address [%s] for this game.
 Build=Build
 BuildSpeed=Build speed
 BuildingNoPlace=Building can't be placed there
-BuildingNoReqs=Building doesn't satisfy requirements
-BuildingNoRes=Not enough resources to produce building
+BuildingNoReqs=Requirements aren't met to build
+BuildingNoRes=Not enough resources to build
 Built=Built
 CameraModeSet=Camera mode set to
-CanRepair=Can repair
+CanRepair=Can repair/ heal
 Cancel=Cancel
 CancelDownloads=Cancel download(s)
-CancelDownloadsMsg=Player: %s cancelled all file downloads.
+CancelDownloadsMsg=Player: %s has cancelled all files downloads.
 Canceled=Canceled
 Chat=Chat
 ChatMode=Chat mode
-ChatStaysActive=Chat remains active
+ChatStaysActive=Chat remains active:
 CheckSumGameLoadError=Checksum error, you don't have the same data as the server
 CheckSumGameLoadPlayer=Player with error is:
 CheckSumGameLoadClient=Client Checksum:
 CheckSumGameLoadServer=Server Checksum:
 ClientLagDropping=DROPPING %s, exceeded max allowed LAG count of %f [time = %f], clientLag = %f [%f], disconnecting client.
 ClientLagPausing=PAUSING GAME TEMPORARILY for %s, exceeded max allowed LAG count of %f [time = %f], clientLag = %f [%f], waiting for client to catch up...
@@ -73,14 +74,15 @@
 Connected=Connected
 ConnectedToServer=Connected to server
 ConnectionFailed=Connection failed
 ConnectionTimedOut=Connection timed out communicating with server.
 Consume=Consume
 Control=Control
+Control2=Control:
 CouldNotConnect=Connection failed. Choose another Server.
-Cpu=CPU
+Cpu=CPU (Normal)
 CpuEasy=CPU (Easy)
 CpuMega=CPU (Mega)
 CpuUltra=CPU (Ultra)
 CreateNewTeam=Create New Team
 CustomGame=Custom Game
 DataNotSynchedTitle=The following game data is different:
@@ -99,72 +101,78 @@
 DataMissingMapSuccessDownload=Player: %s SUCCESSFULLY downloaded the map: %s
 DataMissingMapFailDownload=Player: %s FAILED to download the map: [%s] using CURL version [%s]
 DataMissingTilesetSuccessDownload=Player: %s SUCCESSFULLY downloaded the tileset: %s
 DataMissingTilesetFailDownload=Player: %s FAILED to download the tileset: [%s] using CURL version [%s]
 DataMissingTechtreeSuccessDownload=Player: %s SUCCESSFULLY downloaded the techtree: %s
 DataMissingTechtreeFailDownload=Player: %s FAILED to download the techtree: [%s] using CURL version [%s]
-Deaths=Deaths
+Deaths=Own units died:
 Defaults=Defaults
 Defeat=Defeat
 Deleting=Deleting
 Description=Description
-Difficulty=Difficulty
+Difficulty=Difficulty:
 Difficulty0=Very Easy
 Difficulty1=Easy
 Difficulty2=Medium
 Difficulty3=Hard
 Difficulty4=Very Hard
 Difficulty5=Insane
 Disabled=Disabled
+Disabled2=Disabled
 Disable=Disable
 Disconnect=Disconnect
 DisconnectNetorkPlayer=Disconnect a player
 DisconnectNetorkPlayerIndex=Disconnect player #%d - %s
-DisconnectNetorkPlayerIndexConfirm=Confirm disconnection for player #%d - %s?
-DisconnectNetorkPlayerIndexConfirmed=Notice - Admin is warning to disconnect player #%d - %s!
+DisconnectNetorkPlayerIndexConfirm=Do you confirm order to disconnection for player #%d - %s?
+DisconnectNetorkPlayerIndexConfirmed=Notice - Admin warns a player #%d - %s about the possibility of disconnection!
 Discount=Discount
 DisplaySettingsChanged=Display Settings Changed
-DownloadMissingMapQuestion=Download the map:
-DownloadMissingTilesetQuestion=Download the tileset:
-DownloadMissingTechtreeQuestion=Download the techtree:
-effectRadius=Boost effect Radius
+DownloadMissingMapQuestion=Do you want to download the missing map:
+DownloadMissingTilesetQuestion=Do you want to download the missing tileset:
+DownloadMissingTechtreeQuestion=Do you want to download the missing techtree:
+effectRadius=Radius of boost effect
 Effects=Boost Effects:
-EnableFTP=Enable FTP file transfers
-EnableFTPServer=Enable FTP Server
-EnableFTPServerInternetTilesetXfer=Transfer tilesets over Internet
-EnableFTPServerInternetTechtreeXfer=Transfer techtrees over Internet
+EnableFTP=Enable FTP file transfers:
+EnableFTPServer=Enable FTP Server:
+EnableFTPServerInternetTilesetXfer=Transfer tilesets over Internet:
+EnableFTPServerInternetTechtreeXfer=Transfer techtrees over Internet:
 EnableObserverMode=View Map at End Game
 Enabled=Enabled
 EnableServerControlledAI=Server Controlled AI
 EnableSwitchTeamMode=Switch teams
-EnableVideos=Enable Video Playback
-EnableTextureCompression=Texture Compression
-EnemyKills=Enemies Killed
+EnableVideos=Enable Video Playback:
+EnableTextureCompression=Texture Compression:
+EnemyKills=Enemies Killed:
 Ep=EP
 EpCost=EP cost
 ErrorBindingPort=Error, cannot bind to network port
+ErrorDetected=Error detected
 ErrorFromMasterserver=Error from Master Server
 Exit=Exit
-ExitGame?=Would you like to close the game?
-ExitGameMenu?=Exit current game?
-ExitGameServer?=Exit current game? (this will end the game for all other connected players)
+Exit2=Exit
+Exit2GameMenuQ=Exit to the main menu?
+ExitGameQ=Would you like to close the game?
+ExitCurrentGameQ=Are you sure you want to exit the current game?
+ExitCurrentGameQ2=Do you want to exit the current game?
+ExitCurrentGameSQ=WARNING: This will stop the game also for the other human players. Please don't do this ever when the other players still want to play!
 Explored=Explored
 Faction=Faction
+Faction2=Faction:
 FallbackCpuMultiplier=AI replacement multiplier
 Fast=fast
 FieldAir=Air
 FieldLand=Land
 Fields=Fields
 FileDownloadProgress=Player: %s download progress for [%s] is %d %%
 Filter=Filter:
 FindLANGames=Find LAN Games
 FogOfWar=Fog of War
-FontSizeAdjustment=Font Adjustment
+FontSizeAdjustment=Font Adjustment:
 FontSizeAdjustmentChanged=Font Adjustment Changed
-FTPServerPort=FTP Server Port
-FTPServerDataPort=FTP Server Data Ports
+FTPServerPort=FTP Server Port:
+FTPServerDataPort=FTP Server Data Ports:
 FreeCamera=Free Camera
 FxVolume=Fx Volume:
 GameCamera=Game camera
 GameCancelledByUser=Game cancelled by server user.
 GameDurationTime=Game duration
 GameMaxConcurrentUnitCount=Maximum Concurrent Units
@@ -175,73 +183,77 @@
 GameOver=Game finished
 GamePaused=Game paused
 GameResumed=Game resumed
 GameSpeedSet=Game speed set to
 GameSwitchPlayerToAI=Player #%d [%s] has disconnected, switching player to AI mode!
 GameSwitchPlayerObserverToAI=Player #%d [%s] has disconnected, but player was only an observer!
-GameTime=Game:
-GammaCorrection=Brightness
+GameTime=Game time:
+GammaCorrection=Brightness:
 GettingModlistFromMasterserver=Getting mod list from masterserver
 Harvest=Harvest
 HarvestSpeed=Harvest speed
 HeadlessAdminRequiresMorePlayers=You must have at least %d player(s) connected to start this game!
+HelloIRC1=Hello
+HelloIRC2=Your current nick on IRC chat is:
 Hint=Hint:\n%s
-CellHint=Cell hint
+CellHint=Flag's description
 HostGame=Host Game
 HostNotAcceptingDataConnections=Warning: The host is not accepting game data connections.
 Hp=HP
 Human=Human
 IncompatibleVersion=Incompatible Version
 Initializing=Initializing
 Install=Install
 InvalidOrder=Order is Invalid
 InvalidPosition=Position is Invalid
 IRCPeopleOnline=IRC People Online:
 Keyboardsetup=Keyboard Setup
-KeyboardsetupTest=Keyboard test display
+KeyboardsetupTest=Keyboard test display:
 Kills=Kills
+Kills2=Total killed:
+JoinedAt=Joined to the game at:
 JoinGame=LAN Game
 JoinInternetGame=Internet Game
 JoinOtherTeam=Join another Team
 JoinPlayerTeam=Join player #%d - %s on Team: %d
 JoinPlayerToCurrentGameWelcome=Player: %s has connected to the game lobby to select a player position.
 JoinPlayerToCurrentGameSuccessDownload=Player: %s SUCCESSFULLY downloaded the saved game: %s
 JoinPlayerToCurrentGameLaunch=Player: %s is about to join the game, please wait...
 JoinPlayerToCurrentGameFailDownload=Player: %s FAILED to download the saved game: [%s] using CURL version [%s]
 JoinPlayerToCurrentGameLaunchDone=Player: %s is joining the game now.
 Language=Language:
 LanIP=LAN IP Address(es):
-LinuxPort=Linux port
+LinuxPort=Linux port:
 Load=Load
 LoadGame=Load Saved Game
-LoadGameMenu=Load Saved Games
-LuaDisableSecuritySandbox=Disable Lua script Security Sandbox
+LoadGameMenu=Load Saved Game
+LuaDisableSecuritySandbox=Disable Lua script Security Sandbox:
 LuaDisableSecuritySandboxWarning=Enabling this setting will allow lua scripts that potentially contain dangerous behavior are you sure that you want to allow this?
 MaxMarkerCount=You cannot add more markers, the maximum allowed is:
-ModCenter=Mod Center
+ModCenter=Mods' center
 GameHost=Host Server
-NoDownload=No Download
+NoDownload=No
 NoSavedGames=No saved games found.
 Save=Save
 SavedGames=Saved Games
 SaveGame=Save Current Game
 SavegameInfo=Information about selected game
 SelectionType=Unit selection type:
 SettingsSaved=Settings Saved
 ShadowIntensity=Shadow Intensity
 Delete=Delete
 NothingSelected=Nothing has been selected.
-LeftAt=Player left at:
+LeftAt=Left the game at:
 Limits=Limits:
 LoadGameDeletingFile=Trying to delete file: '%s'
 LoadGameLoadingFile=Trying to load file: '%s'
-SavedGameBadVersion=Saved game version does not match your application version: [%s] --> [%s]
-LoadSavedGameInfo=Map: %s\nTileset: %s\nTech: %s\nScenario: %s\n# players: %d\nFaction: %s
+SavedGameBadVersion=Saved game version does not match your application version:\n[%s] --> [%s]
+LoadSavedGameInfo=Map: %s\nTileset: %s\nTech: %s\nScenario: %s\nNumber of Players: %d\nFaction: %s
 LoadedSpeed=Loaded speed
 Loading=Loading
-LocalTime=Local:
+LocalTime=Local time:
 LogScreenCoreDataLoading=Core data
 LogScreenGameLoading=Game
 LogScreenGameLoadingCreatingAIFaction=Creating AI for faction %d
 LogScreenGameLoadingCreatingRainParticles=Creating rain particle system
 LogScreenGameLoadingCreatingSnowParticles=Creating snow particle system
 LogScreenGameLoadingInitRenderer=Initializing renderer
@@ -265,31 +277,33 @@
 LogScreenGameUnLoadingTileset=Tileset
 LogScreenGameUnLoadingWorld=Unloading World
 LogScreenGameLoadingStateCells=State cells
 LogScreenGameLoadingFactionTypes=Faction types
 LogScreenGameLoadingMinimapSurface=Compute minimap surface
 LogScreenGameLoadingGenerateGameElements=Generate elements
-Map=Map
-MapFilter=Map Filter
-MapTitle1=Map
+Map=Map:
+Map2=Map
+MapFilter=Map Filter:
+MapTitle1=Maps
 MapTitle2=Players
 MarkCell=Bookmark Map Position
 UnMarkCell=Remove Bookmark
 MasterServerMissing=Your configuration is missing a masterserver entry.
 MaxFilterAnisotropy=Max Filter Anisotropy
 MaxLights=Max lights:
 MaxLoad=Max load
 MaxPlayers=Max players
 MaxUnitCount=Max Unit Count
 MeetingPoint=Meeting Point
-Megaglest3d2dProgramming=MegaGlest 3D/2D+Programming
-MegaglestProgramming=MegaGlest Programming
+Megaglest3d2dProgramming=MegaGlest 3D/2D+Programming:
+MegaglestProgramming=MegaGlest Programming:
 MGBuildDateTime=Build Date/Time
-MGGameCountry=country
+MGGameCountry=Country
 MGGameStatus=Status
-MGGameTitle=Title
+MGGameTitle=Title:
+MGGameTitle2=Title
 MGGameSlots=Slots
 MGGameSlotsFull=Game Full
 MGGameIP=Server IP Address
 MGGameStatus0=Accepting players
 MGGameStatus1=Game full, game start pending
 MGGameStatus2=Game in progress
@@ -300,61 +314,61 @@
 Misc=Misc
 
 MismatchedFactions=The following factions are mismatched:
 MismatchedFactionsMissing=(missing)
 MismatchedFactionsExtra=(extra)
 
-ModLocalRemoteMismatch=The local mod [%s] is not the same as the\nversion on the server, replace local mod with server version?
+ModLocalRemoteMismatch=The local mod [%s] is not the same as the version on the server. Do you want to replace local mod with server version?
 ModErrorGettingServerData=Error retrieving data from the master server: %s
 ModRequires7z=** Warning ** - You need to have the free 7z program installed in order to download and install mod add-ons.
-ModDownloadInProgressCancelQuestion=You currently have: %d files downloading, exit and abort these download(s)?
+ModDownloadInProgressCancelQuestion=You currently have: %d files downloading. Do you want to exit and abort these download(s)?
 ModDownloading=Downloading
 
 ModTechAlreadyInstalled=You already have the tech: %s installed.
 ModSelectTechToInstall=You must first select a tech to install.
 ModRemoveTechConfirm=Are you sure you want to remove the tech: %s ?
-ModCannotRemoveTechNotInstalled=You do not have the tech: %s installed, remove cancelled.
+ModCannotRemoveTechNotInstalled=Removing isn't possible, because you don't have the tech: %s installed yet.
 ModSelectTechToRemove=You must first select a tech to remove.
 ModDownloadTechSuccess=SUCCESSFULLY downloaded the tech: %s
 ModDownloadTechFail=FAILED to download the tech: [%s] using CURL version [%s] [%s]
 
 ModTilesetAlreadyInstalled=You already have the tileset: %s installed.
 ModSelectTilesetToInstall=You must first select a tileset to install.
 ModRemoveTilesetConfirm=Are you sure you want to remove the tileset: %s ?
-ModCannotRemoveTilesetNotInstalled=You do not have the tileset: %s installed, remove cancelled.
+ModCannotRemoveTilesetNotInstalled=Removing isn't possible, because you don't have the tileset: %s installed yet.
 ModSelectTilesetToRemove=You must first select a tileset to remove.
 ModDownloadTilesetSuccess=SUCCESSFULLY downloaded the tileset: %s
 ModDownloadTilesetFail=FAILED to download the tileset: [%s] using CURL version [%s] [%s]
 
 ModMapAlreadyInstalled=You already have the map: %s installed.
 ModSelectMapToInstall=You must first select a map to install.
 ModRemoveMapConfirm=Are you sure you want to remove the map: %s ?
-ModCannotRemoveMapNotInstalled=You do not have the map: %s installed, remove cancelled.
+ModCannotRemoveMapNotInstalled=Removing isn't possible, because you don't have the map: %s installed yet.
 ModSelectMapToRemove=You must first select a map to remove.
 ModDownloadMapSuccess=SUCCESSFULLY downloaded the map: %s
 ModDownloadMapFail=FAILED to download the map: [%s] using CURL version [%s] [%s]
 
 ModScenarioAlreadyInstalled=You already have the scenario: %s installed.
 ModSelectScenarioToInstall=You must first select a scenario to install.
 ModRemoveScenarioConfirm=Are you sure you want to remove the scenario: %s ?
-ModCannotRemoveScenarioNotInstalled=You do not have the scenario: %s installed, remove cancelled.
+ModCannotRemoveScenarioNotInstalled=Removing isn't possible, because you don't have the scenario: %s installed yet.
 ModSelectScenarioToRemove=You must first select a scenario to remove.
 ModDownloadScenarioSuccess=SUCCESSFULLY downloaded the scenario: %s
 ModDownloadScenarioFail=FAILED to download the scenario: [%s] using CURL version [%s] [%s]
 
 ModInstalled=Installed
 ModAvailable=Available
 ModOnlyLocal=Not on server
 ModHasConflict=Different on server
 
 Mods=Game Mods
 Morph=Morph
-MorphNoReqs=requirements to morph are not satisfied
+MorphNoReqs=Requirements aren't met to morph unit
 MorphNoRes=Not enough resources to morph unit
 MorphSpeed=Morph Speed
-MouseScrollsWorld=Mouse moves camera
+MouseScrollsWorld=Mouse moves camera:
 Move=Move
 MultiPlayer=Multiplayer:
 MusicVolume=Music Volume:
 Network=Network
 NetworkCpuEasy=Network CPU Easy
 NetworkCpu=Network CPU
@@ -376,12 +390,13 @@
 NotConnected=Not connected
 Notice=Notice
 None=None
 NonStandardPort=Non Standard Port
 Normal=normal
 Off=Off
+Off2=Off
 Ok=Ok
 OpenGlInfo=OpenGL Info
 OpenGlVersion=OpenGL Version
 OpenGlRenderer=OpenGL Renderer
 OpenGlVendor=OpenGL Vendor
 OpenGlMaxLights=OpenGL Max Lights
@@ -390,157 +405,169 @@
 OpenGlModelviewStack=OpenGL Modelview Stack
 OpenGlProjectionStack=OpenGL Projection Stack
 OpenGlExtensions=OpenGL Extensions
 OpenGlPlatformExtensions=OpenGL Platform Extensions
 Options=Options
 OrdersOnQueue=Orders on queue
+OtherUnits=Other units:
 PathFinderType=Path Finder Type
 PathFinderTypeRegular=Regular
 PathFinderTypeRoutePlanner=RP-beta
 PauseResumeGame=Pause/Resume Game
 Play=Play
 PlayNow=Play now!
 Player=Player
-PlayerDisconnected=Player %s, disconnected from the game.
-PlayerFaction=Faction of Player
+PlayerDisconnected=Player %s, is disconnected from the game.
+PlayerFaction=Faction of Player:
 PlayerLeftGame=has chosen to leave the game!
-Playername=Playername:
+Playername=Player name:
 PlayerNameNotSetTitle=Warning: Player name not set
 PlayerNameNotSetPrompt=You have not set a player name, yet!\n\nSet your player name now at:\nMain menu -> Options.
 PlayerStatusSetup=Not Ready
 PlayerStatusBeRightBack=Be Right Back
 PlayerStatusReady=Ready
 PlayerSwitchedTeam=Player %s switched from team# %d to team# %d.
 PlayerSwitchedTeamDenied=Player %s was denied the request to switch from team# %d to team# %d.
 PleaseWaitCalculatingCRC=Please wait while Calculating CRCs!
 PleaseWait=Please wait...
 Port=Port
 PressEnterToChat=Press enter to chat
-PrivacyPlease=Enable Privacy\n(hide country, etc)
+PrivacyPlease=Enable Privacy (hide country, etc):
 Produce=Produce
 Producing=Producing
 ProductionSpeed=Production speed
-Programming=Programming
+Programming=Programming:
 Projected=Projected
 PublishServer=Publish on Masterserver?
-PublishServerExternalPort=External Port #
+PublishServerExternalPort=External Port #:
 PublishDisabled=(disabling publish)
 Question=Question
-QuitGame=Chose to leave the game!
-RainEffectMenuGame=Rain Effect (Menu/Game)
+QuitGame=<<< Chose to leave the server!
+RainEffectMenuGame=Rain Effect (Menu/Game):
 ReactionSpeed=Reaction speed
 RefreshList=Refresh List
 Regeneration=Regeneration
 ReloadLastGameSettings=Reload Last Settings
 Remove=Remove
 Repair=Repair
 RepairSpeed=Repair speed
 Reqs=Reqs
 RestartNeeded=Restart is needed to take effect.
 Resolution=Resolution:
 ResolutionChanged=Resolution changed!
 Resources=Resources
-ResourcesHarvested=Resources harvested
-Result=Result
+ResourcesHarvested=Resources harvested:
+Result=Result:
 Return=Return
 Scenario=Scenario
 ScenarioTitle1=Scenarios
-Score=Score
-ScreenShotFileType=Screenshot file format
+Score=Score:
+ScreenShotFileType=Screenshot file format:
 ScreenshotSavedTo=Screenshot will be saved to: %s
-ScreenShotConsoleText=Show 'Screenshot saved'
+ScreenShotConsoleText=Show 'Screenshot saved':
 Server=Server
-ServerPort=Server Port #
-ServerType=Server type
+ServerPort=Server Port #:
+ServerType=Server type:
 ServerTypeFound=Found Games
 ServerTypeNew=New
 ServerTypePrevious=Previous
 ShadowMapping=Shadow Mapping
 Shadows=Shadows:
 ShadowTextureSize=Shadow Texture Size:
-ShowMapPreview=Map Preview
+ShowMapPreview=Map Preview:
 ShowNextHint=Next hint
 ShowUnitParticles=Unit Particles:
 ShowTilesetParticles=Tileset Particles:
 Sight=Sight
 SinglePlayer=Singleplayer:
 Size=Size
 Slow=slow
 SomeOrdersFailed=Some orders could not be given
-SoundAndMusic=Sound and music
+SoundAndMusic=Sound and music:
 SplashRadius=Splash radius
 StandardPort=Default Port
 StartingToUpgrade=Starting to upgrade
 Stop=Stop
 Store=Store
 SystemUser=System Message
 SwitchTeams=Switch Teams
 Team=Team
-TechTree=Tech tree
-TechTitle1=Tech Tree
+Team2=Team:
+TechTree=Tech tree:
+TechTree2=Tech tree
+TechTitle1=Tech Trees
 TechTitle2=Factions
 Textures3D=3D Textures:
-Tileset=Tileset
+Tileset=Tileset:
+Tileset2=Tileset
 TilesetTitle1=Tilesets
-TimeDisplay=Display real and game time
+TimeDisplay=Display real and game time:
 TimeoutWaitingForClients=Timeout waiting for clients.
 TimeoutWaitingForServer=Timeout waiting for server.
 TimeoutWaitingForMessage=Timeout waiting for message.
 Tip=Tip
+ToAll=To all
 ToSwitchOffMusicPress=To switch off music while waiting for players press
+ToTeam=To team
 
-CustomTranslation=Advanced Translation
-TransifexGetLanguageFiles=Download from transifex
+CustomTranslation=Advanced Translation - Transifex:
+TransifexGetLanguageFiles=Download language files
 TransifexDeleteLanguageFiles=Delete downloaded files
-TransifexUserName=Transifex Username:
-TransifexPwd=Transifex Password:
-TransifexI18N=Transifex Language Code:
+TransifexUserName=Username:
+TransifexPwd=Password:
+TransifexI18N=Language Code:
 TransifexDownloadSuccess=Successfully downloaded the language files.
 TransifexDeleteSuccess=Successfully removed the language files.
 
 Tutorial=Tutorial
 UnitAddedToProductionQueue=Unit added to production queue
 UnitNoPlace=Unit can't be placed
-UnitNoReqs=Unit doesn't satisfy requirements
+UnitNoReqs=Requirements aren't met to produce unit
 UnitNoRes=Not enough resources to produce unit
 UnitReady=Unit ready
-UnitsProduced=Units produced
+UnitsProduced=Units produced:
 UnitType=Unit type:
 Upgrade=Upgrade
-UpgradeNoReqs=Upgrade doesn't satisfy requirements
-UpgradeNoRes=Not enough resources to produce upgrade
+UpgradeNoReqs=Requirements aren't met to perform upgrade
+UpgradeNoRes=Not enough resources to perform upgrade
 UpgradeSpeed=Upgrade speed
 Upgrades=Upgrades
 Upgrading=Upgrading
+VersionDevIsIncom=You are running a DEVELOPMENT version, which is likely unstable and incompatible with any releases.
+VersionInfo=Version info:
+VersionIsOutdated=YOUR VERSION IS OUTDATED. Please UPDATE it to the latest version from the
+VersionLatestPrelease=You are running the latest available PRE-RELEASE version.
+VersionLatestStable=You are running the latest stable version.
+VersionNewerAvailable=However also a newer/ later pre-release version is available.
 Victory=Victory
 Video=Video
 VideoInfo=Video Info
-VisibleHUD=Visible HUD
-WalkSpeed=Walk speed
+VisibleHUD=Visible HUD:
+WalkSpeed=Move speed
 WaitingHost=Waiting for server to launch game
-Windowed=Windowed
+Windowed=Windowed:
 WrongRouterSetup=Your firewall or router is not properly configured to host games.
 Yes=Yes
-YouLose=You lose!
-YouWin=You win
+YouLose=You lost!
+YouWin=You won!
 
 ;-------------------------------- Intro Text Start
 IntroText1=Based on award-winning classic Glest
 IntroStartMilliseconds1=1000
 IntroText2=the MegaGlest Team presents
 IntroStartMilliseconds2=4400
 IntroText3=a libre software real-time strategy game
 IntroStartMilliseconds3=8400
 IntroTexture4=$APPLICATIONDATAPATH/data/core/menu/textures/logo.tga
-IntroTextureWidth4=256
-IntroTextureHeight4=128
+IntroTextureWidth4=600
+IntroTextureHeight4=300
 IntroStartMilliseconds4=12000
 IntroText5=$GAMEVERSION
-IntroTextX5=+5
-IntroTextY5=-45
-IntroTextFontType5=menunormal
+IntroTextX5=+50
+IntroTextY5=-100
+IntroTextFontType5=menubig
 IntroStartMilliseconds5=12000
 IntroText6=http://megaglest.org
 IntroStartMilliseconds6=16000
 IntroModelStartMilliseconds=24000
 IntroTextureStartMilliseconds=26000
 ;-------------------------------- Intro Text End
@@ -550,13 +577,13 @@
 ISO639-1=en
 NativeLanguageName=English
 MEGAGLEST_FONT=$APPLICATIONDATAPATH/data/core/fonts/LinBiolinum_RB.ttf
 MEGAGLEST_FONT_FAMILY=Linux Biolinum O:style=Bold
 FONT_SCALE_SIZE=0.8
 FONT_SCALE_CENTERH_FACTOR=4.0
-FONT_BASE_SIZE=3
+FONT_BASE_SIZE=4
 FONT_CHARCOUNT=256
 FONT_CHARSET=1
 FONT_HEIGHT_TEXT=yW
 FONT_MULTIBYTE=0
 FONT_RIGHTTOLEFT=0
 FONT_TYPENAME=Times New Roman
Index: data/glest_game/data/lang/hint/hint_english.lng
===================================================================
--- data/glest_game/data/lang/hint/hint_english.lng	(wersja 4583)
+++ data/glest_game/data/lang/hint/hint_english.lng	(kopia robocza)
@@ -1,29 +1,30 @@
-hint1=You can set/edit your player name in the 'options' menu,\naccessible from the main menu.
+hint1=You can set/edit your player name in the 'options' menu, accessible from the main menu.
 hint2=To select idle workers, press the '#HotKeySelectIdleHarvesterUnit#' key, then press '#HotKeyCenterCameraOnSelection#' to focus them.
 hint3=To toggle team chat on/off, press '#ChatTeamMode#' (while not in chat mode).
 hint4=To see more chat history, hold down the '#ShowFullConsole#' key.
-hint5=You can group units by selecting them and pressing Ctrl + #GroupUnitsKey1#..#GroupUnitsKey10#.\nTo recall a group press the number of the group (0-9).\nDouble-tap the number to position the camera above this group.
-hint6=To defend from incoming enemies, use long-range combat units\nand fight behind your buildings and send your workers to repair them.
-hint7=To take a screenshot, press the '#Screenshot#' key.\nPressing the '#TogglePhotoMode#' key toggles the HUD on/off.
-hint8=Ranged weapon units often have weak armor\nand are particularly vulnerable to meele attacks.\nAccompany them with your own melee units so they stay alive.
+hint5=You can group units by selecting them and pressing Ctrl + #GroupUnitsKey1#..#GroupUnitsKey10#. To recall a group press\nthe number of the group (0-9). Double-tap the number to position the camera above\nthis group.
+hint6=To defend from incoming enemies, use long-range combat units and fight behind your\nbuildings and send your workers to repair them.
+hint7=To take a screenshot, press the '#Screenshot#' key. Pressing the '#TogglePhotoMode#' key toggles the HUD on/off.
+hint8=Ranged weapon units often have weak armor and are particularly vulnerable to meele attacks.\nAccompany them with your own melee units so they stay alive.
 hint9=Some buildings can be rotated during placement using the '#HotKeyRotateUnitDuringPlacement#' key.
-hint10=You may change the way team color is shown\nby pressing the '#ExtraTeamColorMarker#' key.
-hint11=Left-click on the mini map to move the camera more quickly.\nRight-click on it to instruct your units to move/attack there.
-hint12=Before you join a multi player game, be sure\nyou can defeat a standard CPU foe in single player.
-hint13=The game mods menu, which is accessible from the main menu, allows you\nto download new techtrees, scenarios, maps and tilesets.\nLinux users need to install p7zip-full to use it.
+hint10=You may change the way team color is shown by pressing the '#ExtraTeamColorMarker#' key.
+hint11=Left-click on the mini map to move the camera more quickly. Right-click on it to instruct\nyour units to move/attack there.
+hint12=Before you join a multi player game, be sure you can defeat a standard CPU foe in single player.
+hint13=The game mods menu, which is accessible from the main menu, allows you to download\nnew techtrees, scenarios, maps and tilesets. Linux users need to install p7zip-full to use it.
+hint14=You can quickly send somewhere selected units with the attack command by pressing '#HotKeySelectedUnitsAttack#' and\nthen click the target somewhere on the map or the minimap. (At longer distances it works\nsimilarly to one-way patrol mode.)
 hint16=Upgrades are important, make sure you do not forget about them.
-hint17=If you are hosting a game on your own computer,\npress the '#RenderNetworkStatus#' key to see network statistics.
-hint18=Server admins can warn or disconnect\nmisbehaving players using the in-game menu.\nPlease do not abuse this feature.
-hint19=In single player games, press the '#GameSpeedIncrease#' key to speed up or '#GameSpeedDecrease#'\nto slow down the game if desired.
-hint21=If your screen is full of text, press the '#HotKeyShowDebug#' key.\nYou likely entered the debug view accidentially.
-hint22=To select a damaged unit, press the '#HotKeySelectDamagedUnit#' key. Press '#HotKeyCenterCameraOnSelection#'\nto focus it. Press '#HotKeySelectDamagedUnit#' again\nto select the next damaged unit.
-hint23=To select a worker unit, press the '#HotKeySelectIdleHarvesterUnit#' key. Press '#HotKeyCenterCameraOnSelection#'\nto focus it. Press '#HotKeySelectIdleHarvesterUnit#' again\nto select the next worker unit.
-hint24=To enable/disable background music, press the '#ToggleMusic#' key\nin-game or while waiting for the game to start.
-hint28=You can now point your team members to a location on the map.\nHold down the #SetMarker# key and click on the mini map.
-hint34=To learn how to host your own games check\nhttp://FAQ.megaglest.org
-hint36=To permanently mark a position on the map\npress the '#BookmarkAdd#' key, then click on the map. To remove it,\npress '#BookmarkRemove#' and click again.
-hint38=On Linux and OS X, you can press Alt-Enter at any time\nto switch between windowed and full screen modes.
-hint42=To follow a unit in third person mode,\nselect the unit and press the '#CameraFollowSelectedUnit#' key.\nTo return to normal camera mode press #ResetCameraMode#.
-hint43=Linux is the best operating system.. ever.. period :)
-hint44=Free software made this game possible, consider how you can help\nsocieties like fsf.org and sourceforge.net
+hint17=If you are hosting a game on your own computer, press the '#RenderNetworkStatus#' key to see network statistics.
+hint18=Server admins can warn or disconnect misbehaving players using the in-game menu. Please\ndo not abuse this feature.
+hint19=In single player games, press the '#GameSpeedIncrease#' key to speed up or '#GameSpeedDecrease#' to slow down the game if desired.
+hint21=If your screen is full of text, press the '#HotKeyShowDebug#' key. You likely entered the debug view accidentially.
+hint22=To select a damaged unit, press the '#HotKeySelectDamagedUnit#' key. Press '#HotKeyCenterCameraOnSelection#' to focus it. Press '#HotKeySelectDamagedUnit#' again to select\nthe next damaged unit.
+hint23=To select a worker unit, press the '#HotKeySelectIdleHarvesterUnit#' key. Press '#HotKeyCenterCameraOnSelection#' to focus it. Press '#HotKeySelectIdleHarvesterUnit#' again to select the next\nworker unit.
+hint24=To enable/disable background music, press the '#ToggleMusic#' key in-game or while waiting for the game\nto start.
+hint28=You can now point your team members to a location on the map. Hold down the #SetMarker# key\nand click on the mini map.
+hint34=To learn how to host your own games check http://FAQ.megaglest.org
+hint36=To permanently mark a position on the map press the '#BookmarkAdd#' key, then click on the map.\nTo remove it, press '#BookmarkRemove#' and click again.
+hint38=On Linux and OS X, you can press Alt-Enter at any time to switch between windowed and full\nscreen modes.
+hint42=To follow a unit in third person mode, select the unit and press the '#CameraFollowSelectedUnit#' key. To return to normal\ncamera mode press #ResetCameraMode#.
+hint43=This game was created largely thanks to Linux and Free Software communities, so:\nLinux is the best operating system .. ever .. period :)
+hint44=Free software made this game possible, consider how you can help societies like\nfsf.org and sourceforge.net
 hint45=Is a translation missing or bad? Please help translate MegaGlest! http://translate.megaglest.org
Index: data/glest_game/tutorials/1_very_basic_tutorial/1_very_basic_tutorial_english.lng
===================================================================
--- data/glest_game/tutorials/1_very_basic_tutorial/1_very_basic_tutorial_english.lng	(wersja 4583)
+++ data/glest_game/tutorials/1_very_basic_tutorial/1_very_basic_tutorial_english.lng	(kopia robocza)
@@ -1,7 +1,9 @@
-TUTORIAL_NAME=#1 Basic Tutorial
+TUTORIAL_NAME=#1 Very Basic Tutorial
+DESCRIPTION=This is the very basic tutorial. Here you will learn the basics of the game based on the\nIndians' faction.
+
 ;message headers
 GlestBasicTutorial=MegaGlest Basic Tutorial
 WellDone=Well done!
 Resources=Resources
 Combat=Combat
 Buildings=Buildings
@@ -70,8 +72,7 @@
 MoveWorker=Objective: Move your newly produced worker to the other worker who is waiting outside of your camp.
 HarvestGoldandStoneobjective=Objective: Harvest gold and stone until you have a total of 600 gold and 550 stone.
 GetWoodob=Objective: Harvest wood until you have 550.
 UseThirdCommand=Objective: Build a tent. Hint: If the tent turns red, this means that this spot is currently (or generally) taken (such as by another unit or a tree).
 
 ;end
-
 WellDoneNextTutorial=Good job! You can now proceed to the next tutorial.
Index: data/glest_game/tutorials/2_basic_tutorial/2_basic_tutorial_english.lng
===================================================================
--- data/glest_game/tutorials/2_basic_tutorial/2_basic_tutorial_english.lng	(wersja 4583)
+++ data/glest_game/tutorials/2_basic_tutorial/2_basic_tutorial_english.lng	(kopia robocza)
@@ -1,7 +1,9 @@
 TUTORIAL_NAME=#2 Basic Tutorial
+DESCRIPTION=This is the basic tutorial. Here you will learn more basics of the game based on the\nTechnicians' faction.
+
 ;message headers
 GlestBasicTutorial=MegaGlest Basic Tutorial
 WellDone=Well Done!
 Resources=Resources
 Combat=Combat
 Buildings=Buildings
@@ -33,6 +35,9 @@
 ProduceCow=Objective: Produce a Cow.
 MineGold=Objective: Mine 100 Gold units.
 BuildBarracks=Objective: Build Barracks.
 ProduceSwordman=Objective: Produce a Swordman.
 ProduceArcher=Objective: Produce an Archer.
 ProduceMoreWarriors=Objective: Produce more warriors to deal with the upcoming attack.
+
+;end
+WellDoneNextTutorial=Good job! You can now proceed to the next tutorial.
Index: data/glest_game/tutorials/3_advanced_tutorial/3_advanced_tutorial_english.lng
===================================================================
--- data/glest_game/tutorials/3_advanced_tutorial/3_advanced_tutorial_english.lng	(wersja 4583)
+++ data/glest_game/tutorials/3_advanced_tutorial/3_advanced_tutorial_english.lng	(kopia robocza)
@@ -1,7 +1,9 @@
-TUTORIAL_NAME=Advanced Tutorial
+TUTORIAL_NAME=#3 Advanced Tutorial
+DESCRIPTION=This is the advanced tutorial. Here you will learn the some of the more advanced features of\nthe game based on the Mages' faction.
+
 ;message headers
 GlestAdvancedTutorial=Advanced MegaGlest Tutorial
 Promoting=Promoting Units
 WellDone=Well Done!
 Summoning=Summoning
 Energy=Energy
@@ -34,6 +36,9 @@
 ProduceSummoner=Objective: Build a Summoners Guild, then produce a Summoner.
 ProduceDaemon=Objective: Summon a Daemon.
 ProduceGhostArmor=Objective: Research Ancient Summoning, then summon a Ghost Armor.
 BuildEnergySource=Objective: Build an Energy Source.
 ProduceGolem=Objective: Build Library and then use an Initiate to perform a ritual to build a Golem.
 DefeatEnemy=Objective: Build an army, locate and defeat your enemy.
+
+;end
+WellDoneNextTutorial=Good job! Now you can without having to worry proceed to scenarios with low difficulty. Have fun.
Index: mk/cmake/Modules/FindIrcclient.cmake
===================================================================
--- mk/cmake/Modules/FindIrcclient.cmake	(wersja 4583)
+++ mk/cmake/Modules/FindIrcclient.cmake	(kopia robocza)
@@ -36,20 +36,24 @@
   /sw # Fink
   /opt/local # DarwinPorts
   /opt/csw # Blastwave
   /opt
 )
 
-SET(IRCCLIENT_FIND_LIBRARIES ircclient)
+#SET(IRCCLIENT_FIND_LIBRARIES ircclient)
 
 OPTION(WANT_STATIC_LIBS "builds as many static libs as possible" OFF)
 OPTION(FORCE_IRCCLIENT_DYNAMIC_LIBS "force the use of dynamic libs for IRCCLIENT" OFF)
-MESSAGE(STATUS "Force IRCCLient dynamic: ${FORCE_IRCCLIENT_DYNAMIC_LIBS}")
+IF(FORCE_IRCCLIENT_DYNAMIC_LIBS)
+	MESSAGE(STATUS "Force IRCCLient dynamic: ${FORCE_IRCCLIENT_DYNAMIC_LIBS}")
+ENDIF()	
 
 IF(WANT_STATIC_LIBS AND NOT FORCE_IRCCLIENT_DYNAMIC_LIBS)
         SET(IRCCLIENT_FIND_LIBRARIES libircclient.a)
+ELSE()
+	SET(IRCCLIENT_FIND_LIBRARIES libircclient.so libircclient ircclient)
 ENDIF()
 
 FIND_LIBRARY(IRCCLIENT_LIBRARY 
   NAMES ${IRCCLIENT_FIND_LIBRARIES}
   HINTS
   $ENV{IRCCLIENTDIR}
@@ -72,13 +76,13 @@
 FIND_PACKAGE_HANDLE_STANDARD_ARGS(IRCCLIENT DEFAULT_MSG IRCCLIENT_LIBRARY IRCCLIENT_INCLUDE_DIR)
 
 IF(IRCCLIENT_FOUND)
 
         MESSAGE(STATUS "Found IRCClient include path: ${IRCCLIENT_INCLUDE_DIR} libs: ${IRCCLIENT_LIBRARY}")
 
-ELSE()
+#ELSE()
 
-        MESSAGE(STATUS "**** WARNING: IRCClient NOT FOUND include path: ${IRCCLIENT_INCLUDE_DIR} libs: ${IRCCLIENT_LIBRARY}")
+        #MESSAGE(STATUS "**** WARNING: IRCClient NOT FOUND include path: ${IRCCLIENT_INCLUDE_DIR} libs: ${IRCCLIENT_LIBRARY}")
 
 ENDIF()
 
 MARK_AS_ADVANCED(IRCCLIENT_LIBRARY IRCCLIENT_INCLUDE_DIR)
Index: mk/cmake/Modules/FindMiniupnpc.cmake
===================================================================
--- mk/cmake/Modules/FindMiniupnpc.cmake	(wersja 4583)
+++ mk/cmake/Modules/FindMiniupnpc.cmake	(kopia robocza)
@@ -46,45 +46,56 @@
   /usr/local/include/miniupnpc) 
 
 message(STATUS "Finding miniupnpc.h result: ${MINIUPNP_INCLUDE_DIR}")
 
 #find_library(MINIUPNP_LIBRARY miniupnpc)
 
-IF(WANT_STATIC_LIBS)
+OPTION(WANT_STATIC_LIBS "builds as many static libs as possible" OFF)
+OPTION(FORCE_MINIUPNPC_DYNAMIC_LIBS "force the use of dynamic libs for MiniUPnPc" OFF)
+IF(FORCE_MINIUPNPC_DYNAMIC_LIBS)
+	MESSAGE(STATUS "Force MiniUPnPc dynamic: ${FORCE_MINIUPNPC_DYNAMIC_LIBS}")
+ENDIF()
+
+IF(WANT_STATIC_LIBS AND NOT FORCE_MINIUPNPC_DYNAMIC_LIBS)
   set(MINIUPNPC_LIBRARY_NAMES ${MINIUPNPC_LIBRARY_STATIC_NAME} libminiupnpc.a)
 ELSE()
-  set(MINIUPNPC_LIBRARY_NAMES ${MINIUPNPC_LIBRARY_DYNAMIC_NAME} libminiupnpc.so miniupnpc)
+  set(MINIUPNPC_LIBRARY_NAMES ${MINIUPNPC_LIBRARY_DYNAMIC_NAME} libminiupnpc.so libminiupnpc miniupnpc)
 ENDIF()
 
 FIND_LIBRARY(MINIUPNP_LIBRARY NAMES ${MINIUPNPC_LIBRARY_NAMES})
 
 message(STATUS "Finding miniupnpc lib result: ${MINIUPNP_LIBRARY}")
 
 if (MINIUPNP_INCLUDE_DIR AND MINIUPNP_LIBRARY)
     set (MINIUPNP_FOUND TRUE)
+ELSE()
+    set (MINIUPNP_FOUND FALSE)
 endif ()
 
 if (MINIUPNP_FOUND)
   if (NOT MINIUPNP_FIND_QUIETLY)
     message (STATUS "Found the miniupnpc libraries at ${MINIUPNP_LIBRARY}")
     message (STATUS "Found the miniupnpc headers at ${MINIUPNP_INCLUDE_DIR}")
   endif (NOT MINIUPNP_FIND_QUIETLY)
 
   message(STATUS "Detecting version of miniupnpc in path: ${MINIUPNP_INCLUDE_DIR}")
 
   set(CMAKE_REQUIRED_INCLUDES ${MINIUPNP_INCLUDE_DIR})
   set(CMAKE_REQUIRED_LIBRARIES ${MINIUPNP_LIBRARY})
+  include(CheckCXXSourceRuns)
+  
   check_cxx_source_runs("
     #include <miniwget.h>
     #include <miniupnpc.h>
     #include <upnpcommands.h>
     #include <stdio.h>
     int main()
     {
         static struct UPNPUrls urls;
         static struct IGDdatas data;
+		# this part doesn't work with dynamic 1.7-2.1.1 in OpenSuse 12.3 and with 1.8-1 PCLinuxOS 2013.09, with static libs working well, bug?
 
         GetUPNPUrls (&urls, &data, \"myurl\",0);
 
         return 0;
     }"
    MINIUPNPC_VERSION_1_7_OR_HIGHER)
@@ -97,13 +108,13 @@
             #include <miniupnpc.h>
             #include <upnpcommands.h>
             #include <stdio.h>
             int main()
             {
                 struct UPNPDev *devlist = NULL;
-	        int upnp_delay = 5000;
+	        int upnp_delay = 0;
 	        const char *upnp_multicastif = NULL;
 	        const char *upnp_minissdpdsock = NULL;
 	        int upnp_sameport = 0;
 	        int upnp_ipv6 = 0;
 	        int upnp_error = 0;
 	        devlist = upnpDiscover(upnp_delay, upnp_multicastif, upnp_minissdpdsock, upnp_sameport, upnp_ipv6, &upnp_error);
@@ -121,45 +132,44 @@
             #include <miniupnpc.h>
             #include <upnpcommands.h>
             #include <stdio.h>
             int main()
             {
                 struct UPNPDev *devlist = NULL;
-	        int upnp_delay = 5000;
+	        int upnp_delay = 0;
 	        const char *upnp_multicastif = NULL;
 	        const char *upnp_minissdpdsock = NULL;
 	        int upnp_sameport = 0;
 	        int upnp_ipv6 = 0;
 	        int upnp_error = 0;
 	        devlist = upnpDiscover(upnp_delay, upnp_multicastif, upnp_minissdpdsock, upnp_sameport);
 
                 return 0;
             }"
             MINIUPNPC_VERSION_PRE1_6)
-
    ENDIF()
 
-   IF (NOT MINIUPNPC_VERSION_PRE1_6 AND NOT MINIUPNPC_VERSION_PRE1_7 AND NOT MINIUPNPC_VERSION_1_7_OR_HIGHER)
-           set(CMAKE_REQUIRED_INCLUDES ${MINIUPNP_INCLUDE_DIR})
-           set(CMAKE_REQUIRED_LIBRARIES ${MINIUPNP_LIBRARY})
-           check_cxx_source_runs("
-            #include <miniwget.h>
-            #include <miniupnpc.h>
-            #include <upnpcommands.h>
-            #include <stdio.h>
-            static struct UPNPUrls urls;
-            static struct IGDdatas data;
-            int main()
-            {
-                char externalIP[16]     = "";
-	        UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIP);
-
-                return 0;
-            }"
-            MINIUPNPC_VERSION_1_5_OR_HIGHER)
-    ENDIF()
+   #IF (NOT MINIUPNPC_VERSION_PRE1_6 AND NOT MINIUPNPC_VERSION_PRE1_7 AND NOT MINIUPNPC_VERSION_1_7_OR_HIGHER)
+   #        set(CMAKE_REQUIRED_INCLUDES ${MINIUPNP_INCLUDE_DIR})
+   #        set(CMAKE_REQUIRED_LIBRARIES ${MINIUPNP_LIBRARY})
+   #        check_cxx_source_runs("
+   #         #include <miniwget.h>
+   #         #include <miniupnpc.h>
+   #         #include <upnpcommands.h>
+   #         #include <stdio.h>
+   #         static struct UPNPUrls urls;
+   #         static struct IGDdatas data;
+   #         int main()
+   #         {
+   #             char externalIP[16]     = "";
+   #	         UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIP);
+   #
+   #             return 0;
+   #         }"
+   #         MINIUPNPC_VERSION_1_5_OR_HIGHER)
+   #ENDIF()
 
     IF (NOT MINIUPNPC_VERSION_1_5_OR_HIGHER AND NOT MINIUPNPC_VERSION_PRE1_6 AND NOT MINIUPNPC_VERSION_PRE1_7 AND NOT MINIUPNPC_VERSION_1_7_OR_HIGHER)
          set(CMAKE_REQUIRED_INCLUDES ${MINIUPNP_INCLUDE_DIR})
          set(CMAKE_REQUIRED_LIBRARIES ${MINIUPNP_LIBRARY})
          check_cxx_source_runs("
             #include <miniwget.h>
@@ -173,27 +183,24 @@
                 char externalIP[16]     = "";
 	        UPNP_GetExternalIPAddress(urls.controlURL, data.servicetype, externalIP);
 
                 return 0;
             }"
             MINIUPNPC_VERSION_PRE1_5)
-
-    ENDIF()
-
-    IF(MINIUPNPC_VERSION_PRE1_5)
-	message(STATUS "Found miniupnpc version is pre v1.5")
-    ENDIF()
-    IF(MINIUPNPC_VERSION_PRE1_6)
-	message(STATUS "Found miniupnpc version is pre v1.6")
-    ENDIF()
-    IF(MINIUPNPC_VERSION_PRE1_7)
-	message(STATUS "Found miniupnpc version is pre v1.7")
     ENDIF()
 
-    IF(NOT MINIUPNPC_VERSION_PRE1_5 AND NOT MINIUPNPC_VERSION_PRE1_6 AND NOT MINIUPNPC_VERSION_PRE1_7)
+    IF(MINIUPNPC_VERSION_1_7_OR_HIGHER)
 	message(STATUS "Found miniupnpc version is v1.7 or higher")
+    ELSEIF(MINIUPNPC_VERSION_PRE1_7)
+	message(STATUS "Found miniupnpc version is pre v1.7")
+    ELSEIF(MINIUPNPC_VERSION_PRE1_6)
+	message(STATUS "Found miniupnpc version is pre v1.6")
+    ELSEIF(MINIUPNPC_VERSION_PRE1_5)
+	message(STATUS "Found miniupnpc version is pre v1.5")
+    ELSE()
+	message(STATUS "Found miniupnpc version is unknown")
     ENDIF()
 
 else ()
     message (STATUS "Could not find miniupnp")
 endif ()
 
Index: mk/fedora/buildRPMs.sh
===================================================================
--- mk/fedora/buildRPMs.sh	(wersja 4583)
+++ mk/fedora/buildRPMs.sh	(kopia robocza)
@@ -63,13 +63,13 @@
 echo "installing fedora build tools..."
 sudo yum install @development-tools
 sudo yum install fedora-packager
 
 # Install dependencies for Megaglest
 echo "installing MegaGlest dependencies..."
-sudo yum install cmake libX11-devel SDL-devel openal-soft-devel xerces-c-devel freeglut-devel krb5-devel libdrm-devel libidn-devel libjpeg-devel libpng-devel libssh2-devel openldap-devel libxml2-devel subversion mesa-libGL-devel mesa-libGLU-devel openal-soft-devel SDL-devel libcurl-devel c-ares-devel wxGTK-devel glew-devel libogg-devel libvorbis-devel lua-devel wxGTK-devel openssl-devel wxBase desktop-file-utils recode gcc gcc-c++ ftgl-devel ftgl autogen autogen-libopts
+sudo yum install cmake libX11-devel SDL-devel openal-soft-devel xerces-c-devel freeglut-devel krb5-devel libdrm-devel libidn-devel libjpeg-devel libpng-devel libssh2-devel openldap-devel libxml2-devel subversion mesa-libGL-devel mesa-libGLU-devel openal-soft-devel SDL-devel libcurl-devel c-ares-devel glew-devel libogg-devel libvorbis-devel lua-devel wxGTK-devel openssl-devel wxBase desktop-file-utils recode gcc gcc-c++ ftgl-devel ftgl autogen autogen-libopts automake autoconf libircclient-devel fribidi-devel cppunit-devel
 
 # create an rpm user
 echo "creating rpm user (please enter the password: makerpm)"
 sudo /usr/sbin/useradd makerpm
 echo makerpm | sudo /usr/bin/passwd makerpm --stdin
 
Index: mk/linux/setupBuildDeps.sh
===================================================================
--- mk/linux/setupBuildDeps.sh	(wersja 4583)
+++ mk/linux/setupBuildDeps.sh	(kopia robocza)
@@ -1,56 +1,55 @@
-#!/bin/sh
+#!/bin/bash
 #
 # Use this script to install build dependencies on a number of Linux platforms
 # ----------------------------------------------------------------------------
 # Originally written by Mark Vejvoda <mark_vejvoda@hotmail.com>
 # Rewritten by Tom Reynolds <tomreyn@megaglest.org>
+# ...and then little rewritten by filux <heross(@@)o2.pl>
 # Copyright (c) 2012 Mark Vejvoda, Tom Reynolds under GNU GPL v3.0
-
-
 LANG=C
 
 # Got root?
-if [ `id -u`'x' != '0x' ]
-then 
-	echo 'This script must be run as root (UID 0).' >&2
-	exit 1
-fi
+if [ `id -u`'x' != '0x' ]; then echo 'This script must be run as root (UID 0).' >&2; exit 9; fi
 
-# Do you have the 'svnversion' command?
-if [ `which svnversion`'x' = 'x' ] 
-then
-	echo 'Could not find "svnversion", please make sure it is installed.' >&2
-	exit 1
-fi
+# install parameter with a view to facilitate the installation of all libraries (with svn) for newbies
+if [ "$1" == "--finstall" ]; then 
+	svncheck='false'
+else 	svncheck='true'; fi
+
+if [ "$svncheck" == "true" ]; then
+	# Do you have the 'svnversion' command?
+	if [ `which svnversion`'x' = 'x' ]; then
+		echo ''; echo 'Could not find "svnversion", please make sure it is installed.' >&2
+		echo 'For this purpose you can simply try to run this script again with the parameter "--finstall".' >&2
+		exit 8
+	fi
 
+	svnversion=`readlink -f $0 | xargs dirname | xargs svnversion`
+fi
 
-svnversion=`readlink -f $0 | xargs dirname | xargs svnversion`
 architecture=`uname -m`
+if [ "$architecture" == "x86_64" ]; then
+# ArchLN1 > "PCLinuxOS/Mageia/(Mandrake)" style, ArchLN2 > "Chakra/(Arch)" style
+	ArchLN1="64"; ArchLN2="";
+else 	ArchLN1=""; ArchLN2="lib32-"; fi
 
 # Is the lsb_release command supported?
-if [ `which lsb_release`'x' = 'x' ]
-then
-	lsb=0
-	if [ -e /etc/debian_version ]
-	then distribution='Debian';   release='unknown release version'; codename=`cat /etc/debian_version`
-	elif [ -e /etc/SuSE-release ]
-	then distribution='SuSE';     release='unknown release version'; codename=`cat /etc/SuSE-release`
-	elif [ -e /etc/redhat-release ]
-	then 
-		if [ -e /etc/fedora-release ]
-		then distribution='Fedora';   release='unknown release version'; codename=`cat /etc/fedora-release`
-		else distribution='Redhat';   release='unknown release version'; codename=`cat /etc/redhat-release`
-		fi
-	elif [ -e /etc/fedora-release ]
-	then distribution='Fedora';   release='unknown release version'; codename=`cat /etc/fedora-release`
-	elif [ -e /etc/mandrake-release ]
-	then distribution='Mandrake'; release='unknown release version'; codename=`cat /etc/mandrake-release`
+if [ `which lsb_release`'x' = 'x' ]; then
+	lsb='false'
+	
+	if [ -e "/etc/os-release" ]; then
+		distribution=`awk -F "=" '/^ID/ {print $2}' /etc/os-release | awk '{ gsub("\"|\t",""); print }' | awk '{ gsub(" |\t","_"); print }'`
+		codename=`awk -F "=" '/PRETTY_NAME/ {print $2}' /etc/os-release | awk '{ gsub("\"|\t",""); print }'`
+		release_ver=`awk -F "=" '/VERSION_ID/ {print $2}' /etc/os-release | awk '{ gsub("\"|\t",""); print }'`
+		if [ "$release_ver" != "" ]; then release="$release_ver"; else release="unknown"; fi
+	else
+		distribution='unknown'; codename='unknown'; release='unknown'
 	fi
 else
-	lsb=1
+	lsb='true'
 
 	# lsb_release output by example:
         #
 	# $ lsb_release -i
 	# Distributor ID:       Ubuntu
 	#
@@ -60,31 +59,30 @@
 	# $ lsb_release -r
 	# Release:      12.04
 	#
 	# $ lsb_release -c
 	# Codename:     precise
 
-	distribution=`lsb_release -i | awk -F':' '{ gsub(/^[ \t]*/,"",$2); print $2 }'`
+	distribution=`lsb_release -i | awk -F':' '{ gsub(/^[ \t]*/,"",$2); print $2 }' | awk '{ gsub(" |\t","_"); print }'`
 	release=`lsb_release -r | awk -F':' '{ gsub(/^[  \t]*/,"",$2); print $2 }'`
 	codename=`lsb_release -c | awk -F':' '{ gsub(/^[ \t]*/,"",$2); print $2 }'`
 
 	# Some distribution examples:
 	#
-	# OpenSuSE 11.4
-	#LSB Version:    n/a
-	#Distributor ID: SUSE LINUX
-	#Description:    openSUSE 11.4 (x86_64)
-	#Release:        11.4
-	#Codename:       Celadon
-	#
 	# OpenSuSE 12.1
 	#LSB support:  1
 	#Distribution: SUSE LINUX
 	#Release:      12.1
 	#Codename:     Asparagus
 	#
+	# OpenSuSE 12.3
+	#LSB support:  1
+	#Distribution: openSUSE project
+	#Release:      12.3
+	#Codename:     Dartmouth
+	#
 	# Arch
 	#LSB Version:    n/a
 	#Distributor ID: archlinux
 	#Description:    Arch Linux
 	#Release:        rolling
 	#Codename:       n/a
@@ -93,199 +91,246 @@
 	#Distributor ID: Ubuntu
 	#Description:	 Ubuntu 12.04 LTS
 	#Release:	 12.04
 	#Codename:	 precise
 fi
 
-echo 'We have detected the following system:'
-echo ' [ '"$distribution"' ] [ '"$release"' ] [ '"$codename"' ] [ '"$architecture"' ]'
+echo ' We have detected the following system:'
+echo " [ $distribution ] [ $release ] [ $codename ] [ $architecture ]"
 echo ''
-echo 'On supported systems, we will now install build dependencies.'
+echo ' On supported systems, we will now install build dependencies.'
 echo ''
 
-# Until this point you may cancel without any modifications applied 
-#exit 0
-
-
-unsupported_distribution () {
-	echo 'Unsupported Linux distribution.' >&2
+unsupported_error_common () {
 	echo ''
 	echo 'Please report a bug at http://bugs.megaglest.org providing the following information:'
 	echo '--- snip ---'
-	echo 'SVN version:  '"$svnversion"
+	if [ "$svncheck" == "true" ]; then
+		echo 'SVN version:  '"$svnversion"
+	else    echo 'SVN version:  unknown'
+	fi
 	echo 'LSB support:  '"$lsb"
 	echo 'Distribution: '"$distribution"
 	echo 'Release:      '"$release"
 	echo 'Codename:     '"$codename"
 	echo 'Architecture: '"$architecture"
 	echo '--- snip ---'
 	echo ''
+}
+
+unsupported_distribution () {
+	echo 'Unsupported Linux distribution.' >&2
+	unsupported_error_common
 	echo 'For now, you may want to take a look at the build hints on the MegaGlest wiki at http://wiki.megaglest.org/'
-	echo 'If you can come up with something which works for you, please report back to us, too. Thanks!'
+	echo 'If you can come up with something which works for you, please report back to us, on the forum https://forum.megaglest.org as a bug report. Thanks!'
+	
+	exit 1
 }
 
 unsupported_release () {
 	echo 'Unsupported '"$distribution"' release.' >&2
-	echo ''
-	echo 'Please report a bug at http://bugs.megaglest.org providing the following information:'
-	echo '--- snip ---'
-	echo 'SVN version:  '"$svnversion"
-	echo 'LSB support:  '"$lsb"
-	echo 'Distribution: '"$distribution"
-	echo 'Release:      '"$release"
-	echo 'Codename:     '"$codename"
-	echo 'Architecture: '"$architecture"
-	echo '--- snip ---'
-	echo ''
-	if [ "$installcommand" != '' ]
-	then
-		echo 'For now, please try this (which works with other '"$distribution"' releases) and report back how it works for you:'
-		echo $installcommand
-		echo 'Thanks!'
+	unsupported_error_common
+	if [ "$installcommand" != '' ]; then
+		echo 'For now, please try this (which works with other '"$distribution"' releases):'
+		echo -e "$installcommand"
+		echo '...and please report back to us, how it works for you, on the forum https://forum.megaglest.org as a bug report. Thanks!'
 	fi
+	
+	exit 2
 }
 
 error_during_installation () {
 	echo 'An error occurred while installing build dependencies.' >&2
-	echo ''
-	echo 'Please report a bugs at http://bugs.megaglest.org providing the following information:'
-	echo '--- snip ---'
-	echo 'SVN version:  '"$svnversion"
-	echo 'LSB support:  '"$lsb"
-	echo 'Distribution: '"$distribution"
-	echo 'Release:      '"$release"
-	echo 'Codename:     '"$codename"
-	echo 'Architecture: '"$architecture"
-	echo '--- snip ---'
-	echo ''
+	unsupported_error_common
 	echo 'For now, you may want to take a look at the build hints on the MegaGlest wiki at http://wiki.megaglest.org/'
-	echo 'If you can come up with something which works for you, please report back to us, too. Thanks!'
+	echo 'If you can come up with something which works for you, please report back to us, on the forum https://forum.megaglest.org as a bug report. Thanks!'
+	
+	exit 3
 }
 
 
-
 case $distribution in
-	Debian) 
+#	lsb_release|os-release)
+	
+	Debian|debian)
+		apt-get update; echo ""
+		LatestInstallCommand='apt-get install build-essential subversion automake autoconf autogen cmake libsdl1.2-dev libxerces-c2-dev libalut-dev libgl1-mesa-dev libglu1-mesa-dev libvorbis-dev libwxbase2.8-dev libwxgtk2.8-dev libx11-dev liblua5.1-0-dev libjpeg-dev libpng12-dev libcurl4-gnutls-dev libxml2-dev libircclient-dev libglew-dev libftgl-dev libfribidi-dev libminiupnpc-dev librtmp-dev libgtk2.0-dev libcppunit-dev libvlc-dev'
+		
 		case $release in
-			6.0*|unstable)
+			6.*)
+			# end of life 2014-05-04 (4_May)
 				# No libvlc-dev since version (1.1.3) in Debian 6.0/Squeeze is incompatible, no libluajit-5.1-dev because it is not available on Debian 6.0/Squeeze, cf. http://glest.org/glest_board/?topic=8460
+				echo ''
+				echo 'Highly recommended is upgrade Debian at least to the latest stable version.'
+				echo ''
+				
 				installcommand='apt-get install build-essential subversion automake autoconf autogen cmake libsdl1.2-dev libxerces-c2-dev libalut-dev libgl1-mesa-dev libglu1-mesa-dev libvorbis-dev libwxbase2.8-dev libwxgtk2.8-dev libx11-dev liblua5.1-0-dev libjpeg-dev libpng12-dev libcurl4-gnutls-dev libxml2-dev libircclient-dev libglew-dev libftgl-dev libfribidi-dev libminiupnpc-dev librtmp-dev libgtk2.0-dev libcppunit-dev'
 				$installcommand
-				if [ $? != 0 ]; then
-					error_during_installation; 
+				if [ "$?" != "0" ]; then 
+					error_during_installation
 					echo ''
 					echo 'Be sure to have the squeeze-backports repository installed, it is required for libminiupnpc-dev.'
-					exit 1; 
 				fi
 				;;
+			7.*)
+				# echo ''
+				# echo 'Highly recommended is upgrade Debian at least to the latest stable version.'
+				# echo ''
+				
+				# installcommand="apt-get install ..."
+				installcommand='apt-get install build-essential subversion automake autoconf autogen cmake libsdl1.2-dev libxerces-c2-dev libalut-dev libgl1-mesa-dev libglu1-mesa-dev libvorbis-dev libwxbase2.8-dev libwxgtk2.8-dev libx11-dev liblua5.1-0-dev libjpeg-dev libpng12-dev libcurl4-gnutls-dev libxml2-dev libircclient-dev libglew-dev libftgl-dev libfribidi-dev libminiupnpc-dev librtmp-dev libgtk2.0-dev libcppunit-dev libvlc-dev'
+				$installcommand
+				if [ "$?" != "0" ]; then 
+					error_during_installation
+					echo ''
+					echo 'If you are using a stable release frozen e.g. a six months ago or more, then perhaps you should use also the backports repository.'
+				fi
+				;;
+			testing|unstable)
+				installcommand="$LatestInstallCommand"
+				$installcommand
+				if [ "$?" != "0" ]; then error_during_installation; fi 
+				;;
 			*)
-				installcommand='apt-get install build-essential subversion automake autoconf autogen cmake libsdl1.2-dev libxerces-c2-dev libalut-dev libgl1-mesa-dev libglu1-mesa-dev libvorbis-dev libwxbase2.8-dev libwxgtk2.8-dev libx11-dev liblua5.1-0-dev libjpeg-dev libpng12-dev libcurl4-gnutls-dev libxml2-dev libircclient-dev libglew-dev libftgl-dev libfribidi-dev libvlc-dev libminiupnpc-dev librtmp-dev libgtk2.0-dev libcppunit-dev'
+				installcommand="$LatestInstallCommand"
 				unsupported_release
-				exit 1
 				;;
 		esac
 		;;
 
-	Ubuntu) 
+	Ubuntu|ubuntu)
+		apt-get update; echo ""
+		LatestInstallCommand='apt-get install build-essential subversion automake autoconf autogen cmake libsdl1.2-dev libxerces-c2-dev libalut-dev libgl1-mesa-dev libglu1-mesa-dev libvorbis-dev libwxbase2.8-dev libwxgtk2.8-dev libx11-dev liblua5.1-0-dev libjpeg-dev libpng12-dev libcurl4-gnutls-dev libxml2-dev libircclient-dev libglew-dev libftgl-dev libfribidi-dev libvlc-dev libcppunit-dev'
+		
 		case $release in
-			8.04)
-				installcommand='apt-get install build-essential subversion automake autoconf autogen cmake libsdl1.2-dev libxerces-c2-dev libalut-dev libgl1-mesa-dev libglu1-mesa-dev libvorbis-dev libwxbase2.8-dev libwxgtk2.8-dev libx11-dev liblua5.1-0-dev libjpeg-dev libpng12-dev libcurl4-gnutls-dev libxml2-dev libircclient-dev libglew-dev libftgl-dev libfribidi-dev libcppunit-dev'
-				$installcommand
-				if [ $? != 0 ]; then error_during_installation; exit 1; fi 
-				;;
 			10.04)
+			# LTS
 				installcommand='apt-get install build-essential subversion automake autoconf autogen cmake libsdl1.2-dev libxerces-c2-dev libalut-dev libgl1-mesa-dev libglu1-mesa-dev libvorbis-dev libwxbase2.8-dev libwxgtk2.8-dev libx11-dev liblua5.1-0-dev libjpeg-dev libpng12-dev libcurl4-gnutls-dev libxml2-dev libircclient-dev libglew1.5-dev libftgl-dev libfribidi-dev libcppunit-dev'
 				$installcommand
-				if [ $? != 0 ]; then error_during_installation; exit 1; fi 
+				if [ "$?" != "0" ]; then error_during_installation; fi 
 				;;
-			11.10|12.04|12.10|13.04)
-				installcommand='apt-get install build-essential subversion automake autoconf autogen cmake libsdl1.2-dev libxerces-c2-dev libalut-dev libgl1-mesa-dev libglu1-mesa-dev libvorbis-dev libwxbase2.8-dev libwxgtk2.8-dev libx11-dev liblua5.1-0-dev libjpeg-dev libpng12-dev libcurl4-gnutls-dev libxml2-dev libircclient-dev libglew-dev libftgl-dev libfribidi-dev libvlc-dev libcppunit-dev'
+			12.04|12.10|13.04)
+				# installcommand="apt-get install ..."
+				installcommand="$LatestInstallCommand"
 				$installcommand
-				if [ $? != 0 ]; then error_during_installation; exit 1; fi 
+				if [ "$?" != "0" ]; then error_during_installation; fi 
 				;;
 			*)
-				installcommand='apt-get install build-essential subversion automake autoconf autogen cmake libsdl1.2-dev libxerces-c2-dev libalut-dev libgl1-mesa-dev libglu1-mesa-dev libvorbis-dev libwxbase2.8-dev libwxgtk2.8-dev libx11-dev liblua5.1-0-dev libjpeg-dev libpng12-dev libcurl4-gnutls-dev libxml2-dev libircclient-dev libglew-dev libftgl-dev libfribidi-dev libvlc-dev libcppunit-dev'
+				installcommand="$LatestInstallCommand"
 				unsupported_release
-				exit 1
 				;;
 		esac
 		;;
 
-	LinuxMint) 
+	LinuxMint|linuxmint)
+		apt-get update; echo ""
+		LICbasedonubuntu='apt-get install build-essential subversion automake autoconf autogen cmake libsdl1.2-dev libxerces-c2-dev libalut-dev libgl1-mesa-dev libglu1-mesa-dev libvorbis-dev libwxbase2.8-dev libwxgtk2.8-dev libx11-dev liblua5.1-0-dev libjpeg-dev libpng12-dev libcurl4-gnutls-dev libxml2-dev libircclient-dev libglew-dev libftgl-dev libfribidi-dev libvlc-dev libcppunit-dev'
+		
+		# latest debian testing/unstable libs
+		LICbesedondebian='apt-get install build-essential subversion automake autoconf autogen cmake libsdl1.2-dev libxerces-c2-dev libalut-dev libgl1-mesa-dev libglu1-mesa-dev libvorbis-dev libwxbase2.8-dev libwxgtk2.8-dev libx11-dev liblua5.1-0-dev libjpeg-dev libpng12-dev libcurl4-gnutls-dev libxml2-dev libircclient-dev libglew-dev libftgl-dev libfribidi-dev libminiupnpc-dev librtmp-dev libgtk2.0-dev libcppunit-dev libvlc-dev'
+				
 		case $release in
-
+			1)
+			# LMDE -> Linux Mint Debian Edition
+				# installcommand="apt-get install ... based on Debian testing"
+				installcommand="$LICbesedondebian"
+				$installcommand
+				if [ "$?" != "0" ]; then error_during_installation; fi 
+				;;
+			
 			13|14|15)
-				installcommand='apt-get install build-essential subversion automake autoconf autogen cmake libsdl1.2-dev libxerces-c2-dev libalut-dev libgl1-mesa-dev libglu1-mesa-dev libvorbis-dev libwxbase2.8-dev libwxgtk2.8-dev libx11-dev liblua5.1-0-dev libjpeg-dev libpng12-dev libcurl4-gnutls-dev libxml2-dev libircclient-dev libglew-dev libftgl-dev libfribidi-dev libvlc-dev libcppunit-dev'
+				# installcommand="apt-get install ... based on ubuntu"
+				installcommand="$LICbasedonubuntu"
 				$installcommand
-				if [ $? != 0 ]; then error_during_installation; exit 1; fi 
+				if [ "$?" != "0" ]; then error_during_installation; fi 
 				;;
 			*)
-				installcommand='apt-get install build-essential subversion automake autoconf autogen cmake libsdl1.2-dev libxerces-c2-dev libalut-dev libgl1-mesa-dev libglu1-mesa-dev libvorbis-dev libwxbase2.8-dev libwxgtk2.8-dev libx11-dev liblua5.1-0-dev libjpeg-dev libpng12-dev libcurl4-gnutls-dev libxml2-dev libircclient-dev libglew-dev libftgl-dev libfribidi-dev libvlc-dev libcppunit-dev'
+				
+				installcommand="If you are using a distribution based on Ubuntu try:\n$LICbasedonubuntu\n\n...or if you are using a distribution based on Debian try:\n$LICbesedondebian"
 				unsupported_release
-				exit 1
 				;;
 		esac
 		;;
 
-	SuSE|SUSE?LINUX|Opensuse) 
+	SuSE|SUSE_LINUX|Opensuse|openSUSE_project|opensuse)
+		zypper refresh; echo ""
+		LatestInstallCommand='zypper install subversion gcc gcc-c++ automake cmake libSDL-devel libxerces-c-devel Mesa-libGL-devel freeglut-devel libvorbis-devel wxWidgets-devel lua-devel libjpeg-devel libpng-devel libcurl-devel openal-soft-devel libX11-devel libxml2-devel libircclient-devel glew-devel ftgl-devel fribidi-devel libcppunit-devel libminiupnpc-devel libjpeg-turbo vlc-devel help2man'
+
 		case $release in
-			11.2|11.3|11.4|12.1)
+			11.2|11.4)
+			# LTS
 				installcommand='zypper install subversion gcc gcc-c++ automake cmake libSDL-devel libxerces-c-devel MesaGLw-devel freeglut-devel libvorbis-devel wxGTK-devel lua-devel libjpeg-devel libpng14-devel libcurl-devel openal-soft-devel xorg-x11-libX11-devel libxml2-devel libircclient-devel glew-devel ftgl-devel fribidi-devel cppunit-devel'
 				$installcommand
-				if [ $? != 0 ]; then error_during_installation; exit 1; fi 
+				if [ "$?" != "0" ]; then error_during_installation; fi 
 				;;
-			12.2)
-				installcommand='zypper install subversion gcc gcc-c++ automake cmake libSDL-devel libxerces-c-devel Mesa-libGL-devel freeglut-devel libvorbis-devel wxGTK-devel lua-devel libjpeg-devel libpng14-devel libcurl-devel openal-soft-devel xorg-x11-libX11-devel libxml2-devel libircclient-devel glew-devel ftgl-devel fribidi-devel cppunit-devel'
+			12.2|12.3)
+				# installcommand="zypper install ..."
+				installcommand="$LatestInstallCommand"
 				$installcommand
-				if [ $? != 0 ]; then error_during_installation; exit 1; fi
+				if [ "$?" != "0" ]; then error_during_installation; fi
 				;;
 			*)
-				installcommand='zypper install subversion gcc gcc-c++ automake cmake libSDL-devel libxerces-c-devel Mesa-libGL-devel freeglut-devel libvorbis-devel wxGTK-devel lua-devel libjpeg-devel libpng14-devel libcurl-devel openal-soft-devel xorg-x11-libX11-devel libxml2-devel libircclient-devel glew-devel ftgl-devel fribidi-devel cppunit-devel'
+				installcommand="$LatestInstallCommand"
 				unsupported_release
-				exit 1
 				;;
 		esac
 		;;
 
-	Fedora) 
+	Fedora|fedora)
+		yum check-update; echo ""
+		LatestInstallCommand1='yum groupinstall development-tools'
+		LatestInstallCommand2='yum install subversion automake autoconf autogen cmake SDL-devel xerces-c-devel mesa-libGL-devel mesa-libGLU-devel libvorbis-devel wxBase wxGTK-devel lua-devel libjpeg-devel libpng-devel libcurl-devel openal-soft-devel libX11-devel libxml2-devel libircclient-devel glew-devel ftgl-devel fribidi-devel cppunit-devel'
+		
 		case $release in
-			13|14|15|16|17|18)
-				installcommand='yum groupinstall development-tools'
+			18|19)
+				# installcommand="yum groupinstall ..."
+				installcommand="$LatestInstallCommand1"
 				$installcommand
-				if [ $? != 0 ]; then error_during_installation; exit 1; fi
-
-				installcommand='yum install subversion automake autoconf autogen cmake SDL-devel xerces-c-devel mesa-libGL-devel mesa-libGLU-devel libvorbis-devel wxBase wxGTK-devel lua-devel libjpeg-devel libpng-devel libcurl-devel openal-soft-devel libX11-devel libxml2-devel libircclient-devel glew-devel ftgl-devel fribidi-devel cppunit-devel'
+				if [ "$?" != "0" ]; then error_during_installation; fi
+				
+				# installcommand="yum install ..."
+				installcommand="$LatestInstallCommand2"
 				$installcommand
+				if [ "$?" != "0" ]; then error_during_installation; fi
 				;;
 			*)
-				installcommand='yum groupinstall "Development Tools"; yum install subversion automake autoconf autogen cmake SDL-devel xerces-c-devel mesa-libGL-devel mesa-libGLU-devel libvorbis-devel wxBase wxGTK-devel lua-devel libjpeg-devel libpng-devel libcurl-devel openal-soft-devel libX11-devel libxml2-devel libircclient-devel glew-devel ftgl-devel fribidi-devel cppunit-devel'
+				installcommand="$LatestInstallCommand1\n... and then ...\n$LatestInstallCommand2"
 				unsupported_release
-				exit 1
 				;;
 		esac
 		;;
 
-	archlinux)
+	PCLinuxOS|pclinuxos)
+		apt-get update; echo ""
+		LatestInstallCommand="apt-get install subversion gcc gcc-c++ automake cmake lib"$ArchLN1"SDL-devel lib"$ArchLN1"xerces-c-devel mesa-common-devel lib"$ArchLN1"freeglut-devel libvorbis-devel lib"$ArchLN1"wxgtk2.8-devel lua-static-devel lib"$ArchLN1"jpeg-static-devel lib"$ArchLN1"png-static-devel lib"$ArchLN1"curl-devel lib"$ArchLN1"openal-devel lib"$ArchLN1"x11-static-devel lib"$ArchLN1"xml2-devel lib"$ArchLN1"ircclient-devel lib"$ArchLN1"glew-devel lib"$ArchLN1"ftgl-devel lib"$ArchLN1"fribidi-static-devel lib"$ArchLN1"cppunit-devel lib"$ArchLN1"miniupnpc-devel vlc-devel help2man"
+		
 		case $release in
-			rolling)
+			2013*)
+				# installcommand="apt-get install ..."
+				installcommand="$LatestInstallCommand"
+				$installcommand
+				if [ "$?" != "0" ]; then error_during_installation; fi
+				;;
+			*)
+				installcommand="$LatestInstallCommand"
 				unsupported_release
-				exit 1
 				;;
 		esac
 		;;
 
-#	Redhat) 
-#
-#		;;
-#
-#	Mandrake|Mandriva) 
-#
-#		;;
+		
+#	Chakra|chakra) (& prob. Arch) doesn't like MegaGlest because just hate GTK > wxGTK, wxWidgets
+
+#	V distributions that may be worth do test and maybe taking into consideration (future release) in ~mid-2014+ V
+#	Mageia|mageia) based on ~Mandrake
+#	Sabayon\sabayon) based on ~Gentoo
+#	Korora|korora) based on ~Fedora
 
 	*) 
 		unsupported_distribution
-		exit 1
 		;;
 esac
 
 echo ''
 echo 'Installation of build dependencies complete.'
+
+exit 0
Index: mk/linux/start_megaglest
===================================================================
--- mk/linux/start_megaglest	(wersja 4583)
+++ mk/linux/start_megaglest	(kopia robocza)
@@ -9,15 +9,15 @@
   SO_LINKEDLIBNAME="$2"
   SO_LIBLOOKUP1="$3"
   SO_LIBLOOKUP2="$4"
 
   hasSO=`$LDCONFIG -p | grep -m 1 "$SO_LIBLOOKUP1" | cut "-d>" -f2 | cut "-d " -f2`
   if [ -n "$hasSO" ]; then
-    echo 'default library ['"$SO_LINKEDLIBNAME"'] was found in ['"$hasSO"']' >&2
+    echo '- default library ['"$SO_LINKEDLIBNAME"'] was found in ['"$hasSO"']' >&2
   else
-    echo 'default library ['"$SO_LINKEDLIBNAME"'] is missing, attempting to find and link to a newer version if available...' >&2
+    echo '- default library ['"$SO_LINKEDLIBNAME"'] is missing, attempting to find and link to a newer version if available...' >&2
     hasSO=`$LDCONFIG -p | grep -m 1 "$SO_LIBLOOKUP2" | cut "-d>" -f2 | cut "-d " -f2`
     if [ -n "$hasSO" ]; then
       echo 'new library link ['"$hasSO"'] pointed to from ['"$SO_LINKEDLIBNAME"']' >&2
       ln -f -s $hasSO $SO_LINKEDLIBNAME
     fi
   fi
@@ -67,39 +67,60 @@
 fi
 
 
 # now deal with the openal library [libopenal.so.0]
 OS_TYPE=`uname -m`
 
-# OpenSuSE (11.3) and Fedora needs its own openAL
-#if [ -f /etc/SuSE-release -a -f lib/libopenal* ]; then
-if [ -f /etc/SuSE-release ] || [ -f /etc/fedora-release ] ; then
-  
-  if [ -f /etc/SuSE-release ] ; then
-    echo 'Detected Open Suse...' >&2
-  fi
-
-  if [ -f /etc/fedora-release ] ; then
-    echo 'Detected Fedora...' >&2
-  fi
+if [ `which lsb_release`'x' = 'x' ]; then
+	# lsb='false'
+	
+	if [ -e "/etc/os-release" ]; then
+		distribution=`awk -F "=" '/^ID/ {print $2}' /etc/os-release | awk '{ gsub("\"|\t",""); print }' | awk '{ gsub(" |\t","_"); print }'`
+		# codename=`awk -F "=" '/PRETTY_NAME/ {print $2}' /etc/os-release | awk '{ gsub("\"|\t",""); print }'`
+		# release_ver=`awk -F "=" '/VERSION_ID/ {print $2}' /etc/os-release | awk '{ gsub("\"|\t",""); print }'`
+		# if [ "$release_ver" != "" ]; then release="$release_ver"; else release="unknown"; fi
+	else
+		distribution="unknown"
+		# codename="unknown"; release="unknown"
+	fi
+else
+	# lsb='true'
 
-  #rm -f lib/libopenal*
-  # libcurl*, libgnu*, libicu*, liblua*, libxerces*
-  #mv `ls -1 | grep -v '\.abc$' | grep -v '\.xyz$' | xargs`
-
-  if [ ! -d lib_bkp ]; then
-	  mkdir lib_bkp
-	  mv lib/* lib_bkp/
-	  cp lib_bkp/libcurl* lib/
-	  cp lib_bkp/libgnu* lib/
-	  cp lib_bkp/libicu* lib/
-	  cp lib_bkp/liblua* lib/
-	  cp lib_bkp/libxerces* lib/
-  fi
+	distribution=`lsb_release -i | awk -F':' '{ gsub(/^[ \t]*/,"",$2); print $2 }' | awk '{ gsub(" |\t","_"); print }'`
+	# release=`lsb_release -r | awk -F':' '{ gsub(/^[  \t]*/,"",$2); print $2 }'`
+	# codename=`lsb_release -c | awk -F':' '{ gsub(/^[ \t]*/,"",$2); print $2 }'`
 fi
 
+case $distribution in
+	SuSE|SUSE_LINUX|Opensuse|openSUSE_project|opensuse|Fedora|fedora|PCLinuxOS|pclinuxos|Mageia|mageia)
+		# OpenSuSE (11.3) and Fedora needs its own openAL
+		#if [ -f /etc/SuSE-release -a -f lib/libopenal* ]; then
+		
+		echo "Detected $distribution..." >&2
+
+		#rm -f lib/libopenal*
+		# libcurl*, libgnu*, libicu*, liblua*, libxerces*
+		#mv `ls -1 | grep -v '\.abc$' | grep -v '\.xyz$' | xargs`
+
+		if [ ! -d lib_bkp ]; then mkdir lib_bkp; fi
+
+		if [ -d "$LIBDIR" ] && [ -d lib_bkp ]; then
+			mv "$LIBDIR"/* lib_bkp/ 2>/dev/null
+			cp -d lib_bkp/libcurl* "$LIBDIR"/ 2>/dev/null
+			cp -d lib_bkp/libgnu* "$LIBDIR"/ 2>/dev/null
+			cp -d lib_bkp/libicu* "$LIBDIR"/ 2>/dev/null
+			cp -d lib_bkp/liblua* "$LIBDIR"/ 2>/dev/null
+			cp -d lib_bkp/libxerces* "$LIBDIR"/ 2>/dev/null
+		fi 
+	;;
+	
+	*) ;;
+esac
+
+if [ ! -d "$LIBDIR" ]; then mkdir "$LIBDIR"; fi
+
 OPENAL_LINKEDLIBNAME='libopenal.so.0'
 OPENAL_LIBLOOKUP1=${OPENAL_LINKEDLIBNAME}
 OPENAL_LIBLOOKUP2='libopenal.so.'
 
 DIRECTFB_LINKEDLIBNAME='libdirectfb-1.0.so.0'
 DIRECTFB_LIBLOOKUP1=${DIRECTFB_LINKEDLIBNAME}
Index: source/glest_game/facilities/components.cpp
===================================================================
--- source/glest_game/facilities/components.cpp	(wersja 4583)
+++ source/glest_game/facilities/components.cpp	(kopia robocza)
@@ -556,14 +556,14 @@
 }
 
 // =====================================================
 //	class GraphicMessageBox
 // =====================================================
 
-const int GraphicMessageBox::defH= 240;
-const int GraphicMessageBox::defW= 350;
+const int GraphicMessageBox::defH= 270;
+const int GraphicMessageBox::defW= 480;
 
 GraphicMessageBox::GraphicMessageBox(std::string containerName, std::string objName) :
 	GraphicComponent(containerName, objName){
 	header= "";
 	autoWordWrap=true;
 }
@@ -885,14 +885,14 @@
     }
 }
 // ===========================================================
 // 	class PopupMenu
 // ===========================================================
 
-const int PopupMenu::defH= 240;
-const int PopupMenu::defW= 350;
+const int PopupMenu::defH= 270;
+const int PopupMenu::defW= 480;
 
 PopupMenu::PopupMenu() {
 	h= defH;
 	w= defW;
 }
 
Index: source/glest_game/facilities/game_util.cpp
===================================================================
--- source/glest_game/facilities/game_util.cpp	(wersja 4583)
+++ source/glest_game/facilities/game_util.cpp	(kopia robocza)
@@ -23,19 +23,19 @@
 
 using namespace Shared::Util;
 using namespace Shared::Platform;
 
 namespace Glest { namespace Game {
 
-const char *mailString				= " http://bugs.megaglest.org";
+const char *mailString			= "http://bugs.megaglest.org";
 const string glestVersionString 	= "v3.8.0-dev";
 #if defined(SVNVERSION)
-const string SVN_Rev 			= string("Rev: ") + string(SVNVERSION);
+const string SVN_Rev 			= string("Rev:") + string(SVNVERSION);
 #elif defined(SVNVERSIONHEADER)
 #include "svnversion.h"
-const string SVN_Rev 			= string("Rev: ") + string(SVNVERSION);
+const string SVN_Rev 			= string("Rev:") + string(SVNVERSION);
 #else
 const string SVN_Rev 			= "$Rev$";
 #endif
 
 string getCrashDumpFileName(){
 	return "megaglest" + glestVersionString + ".dmp";
@@ -95,74 +95,68 @@
 #elif defined(_M_PPC) || defined(__powerpc__)
 	platform += "-POWERPC";
 #elif defined(__sparc__)
 	platform += "-SPARC";
 #elif defined(_M_ARM_FP) || defined(__arm__) || defined(_M_ARM)
 	platform += "-ARM";
-
 #endif
 	}
 	return platform;
 }
 
 string getSVNRevisionString() {
 	return SVN_Rev;
 }
 
 string getCompilerNameString() {
 	static string version = "";
 	if(version == "") {
-#if defined(WIN32) && defined(_MSC_VER)
-	version = "VC++: " + intToStr(_MSC_VER);
-
-#elif defined(__GNUC__)
-	#if defined(__GNUC__)
-	# if defined(__GNUC_PATCHLEVEL__)
-	#  define __GNUC_VERSION__ (__GNUC__ * 10000 \
-								+ __GNUC_MINOR__ * 100 \
-								+ __GNUC_PATCHLEVEL__)
-	# else
-	#  define __GNUC_VERSION__ (__GNUC__ * 10000 \
-								+ __GNUC_MINOR__ * 100)
-	# endif
-	#endif
-	version = "GNUC";
-
-	#if defined(__MINGW32__)
-	version += "-MINGW";
-	#endif
-
-	version += ": " + intToStr(__GNUC_VERSION__);
-
-#else
-	version = "???";
-#endif
-
-#if defined(DEBUG) || defined(_DEBUG)
-version += " [DEBUG]";
-#endif
-
-#if defined(_M_X64) || defined(_M_IA64) || defined(_M_AMD64) || defined(__x86_64__) || defined(_WIN64)
-	version += " [64bit]";
-#endif
+		#if defined(DEBUG) || defined(_DEBUG)
+			version += "[DEBUG]-";
+		#endif
+		
+		#if defined(WIN32) && defined(_MSC_VER)
+			version += "VC++:" + intToStr(_MSC_VER);
+			
+		#elif defined(__GNUC__)
+			version += "GNUC";
+
+			#if defined(__MINGW32__)
+				version += "-MINGW";
+			#endif
+
+			# if defined(__GNUC_PATCHLEVEL__)
+				#  define __GNUC_VERSION__ ((__GNUC__ * 10000) + (__GNUC_MINOR__ * 100) + __GNUC_PATCHLEVEL__)
+			# else
+				#  define __GNUC_VERSION__ ((__GNUC__ * 10000) + (__GNUC_MINOR__ * 100))
+			# endif
+
+			version += ":" + intToStr(__GNUC_VERSION__);
+		#else
+			version += "???";
+		#endif
+
+		#if defined(_M_X64) || defined(_M_IA64) || defined(_M_AMD64) || defined(__x86_64__) || defined(_WIN64)
+			version += "x64";
+		#endif
 	}
 	return version;
 }
 
 string getNetworkVersionString() {
 	static string version = "";
 	if(version == "") {
-		version = glestVersionString+"-"+getCompilerNameString()+"-"+getCompileDateTime();
+		version = glestVersionString + "-" + getCompileDateTime() + "-" + getCompilerNameString();
 	}
 	return version;
 }
 
 string getNetworkVersionSVNString() {
 	static string version = "";
 	if(version == "") {
-			version = glestVersionString + "-" + getCompilerNameString() + "-" + getSVNRevisionString();
+		version = glestVersionString + "-" + getSVNRevisionString() + "-" + getCompilerNameString();
 	}
 	return version;
 }
 
 string getCompileDateTime() {
 	static string result = "";
@@ -176,14 +170,14 @@
 	return glestVersionString;
 }
 
 string getAboutString1(int i) {
 	switch(i) {
 	case 0: return "MegaGlest " + glestVersionString + " (" + "Shared Library " + sharedLibVersionString + ")";
-	case 1: return "Built: " + string(__DATE__) + " " + SVN_Rev;
-	case 2: return "Copyright 2001-2012 The MegaGlest Team";
+	case 1: return "Built: " + string(__DATE__) + ", " + SVN_Rev;
+	case 2: return "Copyright 2001-20" + string(1,__DATE__[9]) + string(1,__DATE__[10]) + "  The MegaGlest Team";
 	}
 	return "";
 }
 
 string getAboutString2(int i) {
 	switch(i) {
Index: source/glest_game/facilities/logger.cpp
===================================================================
--- source/glest_game/facilities/logger.cpp	(wersja 4583)
+++ source/glest_game/facilities/logger.cpp	(kopia robocza)
@@ -179,13 +179,14 @@
 		if(buttonCancel.mouseClick(x, y)) {
 			cancelSelected = true;
 		}
 	}
 	if(buttonNextHint.getEnabled() == true && buttonNextHint.mouseClick(x,y) == true) {
 		showNextHint();
-		//buttonNextHint.setLighted(false);
+		buttonNextHint.setLighted(false);
+		//prevent to random "Lighted status", disabled is better than random
 		SoundRenderer &soundRenderer= SoundRenderer::getInstance();
 		CoreData &coreData= CoreData::getInstance();
 		soundRenderer.playFx(coreData.getClickSoundC());
 	}
 }
 
@@ -212,23 +213,23 @@
 
     if(showProgressBar == true) {
     	if(Renderer::renderText3DEnabled) {
             renderer.renderProgressBar3D(
                 progress,
                 metrics.getVirtualW() / 4,
-                59 * metrics.getVirtualH() / 100,
+                57 * metrics.getVirtualH() / 100,
                 coreData.getDisplayFontSmall3D(),
-                350,""); // no string here, because it has to be language specific and does not give much information
+                500,""); // no string here, because it has to be language specific and does not give much information
     	}
     	else {
 			renderer.renderProgressBar(
 				progress,
 				metrics.getVirtualW() / 4,
-				59 * metrics.getVirtualH() / 100,
+				57 * metrics.getVirtualH() / 100,
 				coreData.getDisplayFontSmall(),
-				350,""); // no string here, because it has to be language specific and does not give much information
+				500,""); // no string here, because it has to be language specific and does not give much information
     	}
     }
 
     int xLocation = metrics.getVirtualW() / 4;
 	if(Renderer::renderText3DEnabled) {
 
@@ -293,13 +294,13 @@
 				xLocationHint,
 				90 * metrics.getVirtualH() / 100, false);
 
 		}
 		//Show next Hint
 		if(buttonNextHint.getEnabled() == false) {
-			buttonNextHint.init((metrics.getVirtualW() / 2) - (300 / 2), 90 * metrics.getVirtualH() / 100 + 20,175);
+			buttonNextHint.init((metrics.getVirtualW() - 175) / 2, 90 * metrics.getVirtualH() / 100 + 20,175);
 			buttonNextHint.setText(lang.get("ShowNextHint","",true));
 			buttonNextHint.setEnabled(true);
 			buttonNextHint.setVisible(true);
 			buttonNextHint.setEditable(true);
 		}
 
@@ -338,13 +339,13 @@
 
 void Logger::setCancelLoadingEnabled(bool value) {
 	Lang &lang= Lang::getInstance();
 	const Metrics &metrics= Metrics::getInstance();
 	//string containerName = "logger";
 	//buttonCancel.registerGraphicComponent(containerName,"buttonCancel");
-	buttonCancel.init((metrics.getVirtualW() / 2) - (125 / 2), 50 * metrics.getVirtualH() / 100, 125);
+	buttonCancel.init(((metrics.getVirtualW() - 135) / 2), 50 * metrics.getVirtualH() / 100, 135);
 	buttonCancel.setText(lang.get("Cancel"));
 	buttonCancel.setEnabled(value);
 	//GraphicComponent::applyAllCustomProperties(containerName);
 }
 
 }}//end namespace
Index: source/glest_game/game/chat_manager.cpp
===================================================================
--- source/glest_game/game/chat_manager.cpp	(wersja 4583)
+++ source/glest_game/game/chat_manager.cpp	(kopia robocza)
@@ -36,15 +36,15 @@
 ChatManager::ChatManager() {
 	console= NULL;
 	editEnabled= false;
 	teamMode= false;
 	thisTeamIndex= -1;
 	disableTeamMode = false;
-	xPos=300;
-	yPos=150;
-	maxTextLenght=64;
+	xPos=25;
+	yPos=155;
+	maxTextLenght=120;
 	textCharLength.clear();
 	text="";
 	font=CoreData::getInstance().getConsoleFont();
 	font3D=CoreData::getInstance().getConsoleFont3D();
 	inMenu=false;
 	customCB = NULL;
@@ -107,16 +107,16 @@
 			isKeyPressed(configKeys.getSDLKey("ChatTeamMode"),key) == true) {
 			SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d] key = [%c] [%d]\n",__FILE__,__FUNCTION__,__LINE__,key.keysym.sym,key.keysym.sym);
 
 			if (!inMenu) {
 				if (teamMode == true) {
 					teamMode = false;
-					console->addLine(lang.get("ChatMode") + ": " + lang.get("All"));
+					console->addLine(lang.get("ChatMode") + ": " + lang.get("ToAll"));
 				} else {
 					teamMode = true;
-					console->addLine(lang.get("ChatMode") + ": " + lang.get("Team"));
+					console->addLine(lang.get("ChatMode") + ": " + lang.get("ToTeam"));
 				}
 			}
 		}
 
 		if(isKeyPressed(SDLK_RETURN,key, false) == true) {
 			SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d] key = [%c] [%d]\n",__FILE__,__FUNCTION__,__LINE__,key.keysym.sym,key.keysym.sym);
Index: source/glest_game/game/console.cpp
===================================================================
--- source/glest_game/game/console.cpp	(wersja 4583)
+++ source/glest_game/game/console.cpp	(kopia robocza)
@@ -32,13 +32,13 @@
 Console::Console() {
 	//config
 	maxLines		= Config::getInstance().getInt("ConsoleMaxLines");
 	maxStoredLines	= Config::getInstance().getInt("ConsoleMaxLinesStored");
 	timeout			= Config::getInstance().getInt("ConsoleTimeout");
 	timeElapsed		= 0.0f;
-	xPos=20;
+	xPos=10;
 	yPos=20;
 	lineHeight=Config::getInstance().getInt("FontConsoleBaseSize","18")+2;
 	font=CoreData::getInstance().getConsoleFont();
 	font3D=CoreData::getInstance().getConsoleFont3D();
 	stringToHighlight="";
 	onlyChatMessagesInStoredLines=true;
Index: source/glest_game/game/game.cpp
===================================================================
--- source/glest_game/game/game.cpp	(wersja 4583)
+++ source/glest_game/game/game.cpp	(kopia robocza)
@@ -469,13 +469,13 @@
 
 int Game::ErrorDisplayMessage(const char *msg, bool exitApp) {
 	if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d] %s\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,msg);
 
 	if(thisGamePtr != NULL) {
 		string text = msg;
-		thisGamePtr->showErrorMessageBox(text, "Error detected", false);
+		thisGamePtr->showErrorMessageBox(text, "\t" + Lang::getInstance().get("ErrorDetected"), false);
 	}
 
     return 0;
 }
 
 Texture2D * Game::findFactionLogoTexture(const GameSettings *settings, Logger *logger,string factionLogoFilter, bool useTechDefaultIfFilterNotFound) {
@@ -1215,20 +1215,27 @@
 
 	if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 
 	if(initForPreviewOnly == false) {
 		logger.setState(lang.get("Initializing"));
 
-		//mesage box
+		//message box
 		mainMessageBox.init(lang.get("Yes"), lang.get("No"));
 		mainMessageBox.setEnabled(false);
 
-		//mesage box
+		//error message box
 		errorMessageBox.init(lang.get("Ok"));
 		errorMessageBox.setEnabled(false);
-		errorMessageBox.setY(mainMessageBox.getY() - mainMessageBox.getH() - 10);
+		errorMessageBox.setW(mainMessageBox.getW() * 1.73);
+		if(errorMessageBox.getW() > 950) {
+			errorMessageBox.setW(950);
+		}	
+		errorMessageBox.setX((1000 - errorMessageBox.getW()) / 2);
+		errorMessageBox.setH(750 - (errorMessageBox.getX() * 2));
+		errorMessageBox.setY((750 - errorMessageBox.getH()) / 2);
+		
 
 		//init world, and place camera
 		commander.init(&world);
 
 		// give CPU time to update other things to avoid apperance of hanging
 		sleep(0);
@@ -1651,43 +1658,43 @@
 		if(checkClientAdminOverrideOnly == true && clientInterface != NULL) {
 			gameSettings.setMasterserver_admin(clientInterface->getSessionKey());
 			gameSettings.setMasterserver_admin_faction_index(clientInterface->getPlayerIndex());
 		}
 		//PopupMenu popupMenu;
 		std::vector<string> menuItems;
-		menuItems.push_back(lang.get("ExitGameMenu?"));
+		menuItems.push_back("   "+lang.get("Exit2")+"   ");
 		exitGamePopupMenuIndex = menuItems.size()-1;
 
 		if((gameSettings.getFlagTypes1() & ft1_allow_team_switching) == ft1_allow_team_switching &&
 			world.getThisFaction() != NULL && world.getThisFaction()->getPersonalityType() != fpt_Observer) {
-			menuItems.push_back(lang.get("JoinOtherTeam"));
+			menuItems.push_back("   "+lang.get("JoinOtherTeam")+"   ");
 			joinTeamPopupMenuIndex = menuItems.size()-1;
 		}
 
 		if(allowAdminMenuItems == true){
-			menuItems.push_back(lang.get("PauseResumeGame"));
+			menuItems.push_back("   "+lang.get("PauseResumeGame")+"   ");
 			pauseGamePopupMenuIndex= menuItems.size() - 1;
 
 			if(gameSettings.isNetworkGame() == false){
-				menuItems.push_back(lang.get("SaveGame"));
+				menuItems.push_back("   "+lang.get("SaveGame")+"   ");
 				saveGamePopupMenuIndex= menuItems.size() - 1;
 			}
 
 			if(gameSettings.isNetworkGame() == true){
-				menuItems.push_back(lang.get("DisconnectNetorkPlayer"));
+				menuItems.push_back("   "+lang.get("DisconnectNetorkPlayer")+"   ");
 				disconnectPlayerPopupMenuIndex= menuItems.size() - 1;
 			}
 		}
-		menuItems.push_back(lang.get("Keyboardsetup"));
+		menuItems.push_back("   "+lang.get("Keyboardsetup")+"   ");
 		keyboardSetupPopupMenuIndex = menuItems.size()-1;
 
-		menuItems.push_back(lang.get("Cancel"));
+		menuItems.push_back("   "+lang.get("Cancel")+"   ");
 
 		popupMenu.setW(100);
-		popupMenu.setH(100);
-		popupMenu.init(lang.get("GameMenuTitle"),menuItems);
+		popupMenu.setH(93);
+		popupMenu.init("   "+lang.get("GameMenuTitle")+"   ",menuItems);
 		popupMenu.setEnabled(false);
 		popupMenu.setVisible(false);
 
 		popupMenuSwitchTeams.setEnabled(false);
 		popupMenuSwitchTeams.setVisible(false);
 
@@ -3571,13 +3578,13 @@
 
 			popupMenu.setEnabled(false);
 			popupMenu.setVisible(false);
 
 			// Exit game
 			if(result.first == exitGamePopupMenuIndex) {
-				showMessageBox(Lang::getInstance().get("ExitGameMenu?"), "", true);
+				showMessageBox("   "+Lang::getInstance().get("ExitCurrentGameQ")+"   ", "", true);
 			}
 			else if(result.first == joinTeamPopupMenuIndex) {
 
 				Lang &lang= Lang::getInstance();
 				switchTeamIndexMap.clear();
 				std::map<int,bool> uniqueTeamNumbersUsed;
@@ -3590,36 +3597,39 @@
 						uniqueTeamNumbersUsed[faction->getTeam()] = true;
 					}
 
 					if(faction->getPersonalityType() != fpt_Observer &&
 						world.getThisFaction()->getIndex() != faction->getIndex() &&
 						world.getThisFaction()->getTeam() != faction->getTeam()) {
-						char szBuf[8096]="";
+						char szBuf[8093]="";
+						int JoiPTea;
 						if(lang.hasString("JoinPlayerTeam") == true) {
-							snprintf(szBuf,8096,lang.get("JoinPlayerTeam").c_str(),faction->getIndex(),this->gameSettings.getNetworkPlayerName(i).c_str(),faction->getTeam());
+							JoiPTea=snprintf(szBuf,8093,"   ");
+							snprintf(szBuf+JoiPTea,8093-JoiPTea,lang.get("JoinPlayerTeam").c_str(),faction->getIndex(),this->gameSettings.getNetworkPlayerName(i).c_str(),faction->getTeam());
+							strncat(szBuf,"   ",3);
 						}
 						else {
-							snprintf(szBuf,8096,"Join player #%d - %s on Team: %d",faction->getIndex(),this->gameSettings.getNetworkPlayerName(i).c_str(),faction->getTeam());
+							snprintf(szBuf,8096,"   Join player #%d - %s on Team: %d   ",faction->getIndex(),this->gameSettings.getNetworkPlayerName(i).c_str(),faction->getTeam());
 						}
 
 						menuItems.push_back(szBuf);
 
 						switchTeamIndexMap[menuItems.size()-1] = faction->getTeam();
 					}
 				}
 
 				if(uniqueTeamNumbersUsed.size() < 8) {
-					menuItems.push_back(lang.get("CreateNewTeam"));
+					menuItems.push_back("   "+lang.get("CreateNewTeam")+"   ");
 					switchTeamIndexMap[menuItems.size()-1] = CREATE_NEW_TEAM;
 				}
-				menuItems.push_back(lang.get("Cancel"));
+				menuItems.push_back("   "+lang.get("Cancel")+"   ");
 				switchTeamIndexMap[menuItems.size()-1] = CANCEL_SWITCH_TEAM;
 
-				popupMenuSwitchTeams.setW(100);
-				popupMenuSwitchTeams.setH(100);
-				popupMenuSwitchTeams.init(lang.get("SwitchTeams"),menuItems);
+				popupMenuSwitchTeams.setW(150);
+				popupMenuSwitchTeams.setH(150);
+				popupMenuSwitchTeams.init("   "+lang.get("SwitchTeams")+"   ",menuItems);
 				popupMenuSwitchTeams.setEnabled(true);
 				popupMenuSwitchTeams.setVisible(true);
 			}
 			else if(result.first == disconnectPlayerPopupMenuIndex) {
 				Lang &lang= Lang::getInstance();
 
@@ -3651,33 +3661,36 @@
 					if(isSlotJoinInProgressClient == true ||
 						(faction->getPersonalityType() != fpt_Observer &&
 						world.getThisFaction()->getIndex() != faction->getIndex() &&
 						faction->getControlType() == ctNetwork &&
 						this->gameSettings.getNetworkPlayerStatuses(i) != npst_Disconnected)) {
 
-						char szBuf[8096]="";
+						char szBuf[8093]="";
+						int DisNPInd;
 						if(lang.hasString("DisconnectNetorkPlayerIndex") == true) {
-							snprintf(szBuf,8096,lang.get("DisconnectNetorkPlayerIndex").c_str(),faction->getIndex()+1,this->gameSettings.getNetworkPlayerName(i).c_str());
+							DisNPInd=snprintf(szBuf,8093,"   ");
+							snprintf(szBuf+DisNPInd,8093-DisNPInd,lang.get("DisconnectNetorkPlayerIndex").c_str(),faction->getIndex()+1,this->gameSettings.getNetworkPlayerName(i).c_str());
+							strncat(szBuf,"   ",3);
 						}
 						else {
-							snprintf(szBuf,8096,"Disconnect player #%d - %s:",faction->getIndex()+1,this->gameSettings.getNetworkPlayerName(i).c_str());
+							snprintf(szBuf,8096,"   Disconnect player #%d - %s   ",faction->getIndex()+1,this->gameSettings.getNetworkPlayerName(i).c_str());
 						}
 
 						menuItems.push_back(szBuf);
 
 						//disconnectPlayerIndexMap[menuItems.size()-1] = faction->getStartLocationIndex();
 						disconnectPlayerIndexMap[menuItems.size()-1] = faction->getIndex();
 					}
 				}
 
-				menuItems.push_back(lang.get("Cancel"));
+				menuItems.push_back("   "+lang.get("Cancel")+"   ");
 				disconnectPlayerIndexMap[menuItems.size()-1] = CANCEL_DISCONNECT_PLAYER;
 
-				popupMenuDisconnectPlayer.setW(100);
-				popupMenuDisconnectPlayer.setH(100);
-				popupMenuDisconnectPlayer.init(lang.get("DisconnectNetorkPlayer"),menuItems);
+				popupMenuDisconnectPlayer.setW(150);
+				popupMenuDisconnectPlayer.setH(190);
+				popupMenuDisconnectPlayer.init("   "+lang.get("DisconnectNetorkPlayer")+"   ",menuItems);
 				popupMenuDisconnectPlayer.setEnabled(true);
 				popupMenuDisconnectPlayer.setVisible(true);
 			}
 			else if(result.first == keyboardSetupPopupMenuIndex) {
 				MainMenu *newMenu = new MainMenu(program); // open keyboard shortcuts setup screen
 				currentUIState = newMenu;
@@ -3797,13 +3810,13 @@
 
 					char szBuf[8096]="";
 					if(lang.hasString("DisconnectNetorkPlayerIndexConfirm") == true) {
 						snprintf(szBuf,8096,lang.get("DisconnectNetorkPlayerIndexConfirm").c_str(),factionIndex+1,settings->getNetworkPlayerName(factionIndex).c_str());
 					}
 					else {
-						snprintf(szBuf,8096,"Confirm disconnection for player #%d - %s?",factionIndex+1,settings->getNetworkPlayerName(factionIndex).c_str());
+						snprintf(szBuf,8096,"Do you confirm order to disconnection for player #%d - %s?",factionIndex+1,settings->getNetworkPlayerName(factionIndex).c_str());
 					}
 
 					disconnectPlayerConfirmMessageBox.setText(szBuf);
 					disconnectPlayerConfirmMessageBox.init(lang.get("Yes"), lang.get("No"));
 					disconnectPlayerConfirmMessageBox.setEnabled(true);
 
@@ -3816,13 +3829,13 @@
 						for(unsigned int i = 0; i < languageList.size(); ++i) {
 							char szMsg[8096]="";
 							if(lang.hasString("DisconnectNetorkPlayerIndexConfirmed",languageList[i]) == true) {
 								snprintf(szMsg,8096,lang.get("DisconnectNetorkPlayerIndexConfirmed",languageList[i]).c_str(),factionIndex+1,settings->getNetworkPlayerName(factionIndex).c_str());
 							}
 							else {
-								snprintf(szMsg,8096,"Notice - Admin is warning to disconnect player #%d - %s!",factionIndex+1,settings->getNetworkPlayerName(factionIndex).c_str());
+								snprintf(szMsg,8096,"Notice - Admin warns a player #%d - %s about the possibility of disconnection!",factionIndex+1,settings->getNetworkPlayerName(factionIndex).c_str());
 							}
 							bool localEcho = lang.isLanguageLocal(languageList[i]);
 							gameNetworkInterface->sendTextMessage(szMsg,-1, localEcho,languageList[i]);
 						}
 
 						sleep(10);
@@ -5223,13 +5236,13 @@
 		Renderer &renderer= Renderer::getInstance();
 		VisibleQuadContainerCache &qCache =renderer.getQuadCache();
 		int visibleUnitCount = qCache.visibleQuadUnitList.size();
 		str+= "Visible unit count: " + intToStr(visibleUnitCount) + " total: " + intToStr(totalUnitcount) + "\n";
 
 		int visibleObjectCount = qCache.visibleObjectList.size();
-		str+= "Visible object count: " + intToStr(visibleObjectCount) +"\n";
+		str+= "Visible object count: " + intToStr(visibleObjectCount) + "\n";
 	}
 	else {
 		str+= "Total unit count: " + intToStr(totalUnitcount) + "\n";
 	}
 
 	// resources
@@ -5908,27 +5921,27 @@
 
 void Game::showLoseMessageBox() {
 	Lang &lang= Lang::getInstance();
 
 	NetworkManager &networkManager= NetworkManager::getInstance();
 	if(networkManager.isNetworkGame() == true && networkManager.getNetworkRole() == nrServer) {
-		showMessageBox(lang.get("YouLose")+" "+lang.get("ExitGameServer?"), lang.get("BattleOver"), false);
+		showMessageBox(lang.get("YouLose")+"  "+lang.get("ExitCurrentGameQ2")+"\n\n"+lang.get("ExitCurrentGameSQ"), lang.get("BattleNotOver"), false);
 	}
 	else {
-		showMessageBox(lang.get("YouLose")+" "+lang.get("ExitGameMenu?"), lang.get("BattleOver"), false);
+		showMessageBox("   "+lang.get("YouLose")+"\n\n   "+lang.get("ExitCurrentGameQ2"), lang.get("BattleNotOver"), false);
 	}
 }
 
 void Game::showWinMessageBox() {
 	Lang &lang= Lang::getInstance();
 
 	if(this->masterserverMode == true || world.getThisFaction()->getPersonalityType() == fpt_Observer) {
-		showMessageBox(lang.get("GameOver")+" "+lang.get("ExitGameMenu?"), lang.get("BattleOver"), false);
+		showMessageBox("   "+lang.get("GameOver")+"\n\n   "+lang.get("ExitCurrentGameQ2"), lang.get("BattleOver"), false);
 	}
 	else {
-		showMessageBox(lang.get("YouWin")+" "+lang.get("ExitGameMenu?"), lang.get("BattleOver"), false);
+		showMessageBox("   "+lang.get("YouWin")+"\n\n   "+lang.get("ExitCurrentGameQ2"), lang.get("BattleOver"), false);
 	}
 }
 
 void Game::showMessageBox(const string &text, const string &header, bool toggle) {
 	if(toggle == false) {
 		mainMessageBox.setEnabled(false);
Index: source/glest_game/game/script_manager.cpp
===================================================================
--- source/glest_game/game/script_manager.cpp	(wersja 4583)
+++ source/glest_game/game/script_manager.cpp	(kopia robocza)
@@ -187,14 +187,14 @@
 }
 
 // =====================================================
 //	class ScriptManager
 // =====================================================
 ScriptManager* ScriptManager::thisScriptManager		= NULL;
-const int ScriptManager::messageWrapCount			= 30;
-const int ScriptManager::displayTextWrapCount		= 64;
+const int ScriptManager::messageWrapCount			= 56;
+const int ScriptManager::displayTextWrapCount		= 75;
 
 ScriptManager::ScriptManager() {
 	world = NULL;
 	gameCamera = NULL;
 	lastCreatedUnitId = -1;
 	lastDeadUnitId = 0;
Index: source/glest_game/graphics/renderer.cpp
===================================================================
--- source/glest_game/graphics/renderer.cpp	(wersja 4583)
+++ source/glest_game/graphics/renderer.cpp	(kopia robocza)
@@ -2201,16 +2201,16 @@
 			text += lang.get("CellHint");
 		}
 		else if(chatManager->getInMenu()) {
 			text += lang.get("Chat");
 		}
 		else if(chatManager->getTeamMode()) {
-			text += lang.get("Team");
+			text += lang.get("ToTeam");
 		}
 		else {
-			text += lang.get("All");
+			text += lang.get("ToAll");
 		}
 		text += ": " + chatManager->getText() + "_";
 
 		if(game != NULL) {
 			fontColor = game->getGui()->getDisplay()->getColor();
 		}
@@ -2234,13 +2234,13 @@
 					chatManager->getXPos(), chatManager->getYPos());
 		}
 	}
 	else
 	{
 		if (chatManager->getInMenu()) {
-			string text = ">> "+lang.get("PressEnterToChat")+" <<";
+			string text = "\t\t\t\t\t\t>> "+lang.get("PressEnterToChat")+" <<";
 			fontColor = Vec4f(0.5f, 0.5f, 0.5f, 0.5f);
 
 			if(renderText3DEnabled == true) {
 				renderTextShadow3D(text, chatManager->getFont3D(), fontColor,
 						chatManager->getXPos(), chatManager->getYPos());
 			}
@@ -2272,13 +2272,13 @@
 		int minutes = (world->getTimeFlow()->getTime() - hours) * 100 * 0.6; // scale 100 to 60
 
 		Lang &lang= Lang::getInstance();
 		char szBuf[200]="";
 		snprintf(szBuf,200,"%s %.2d:%.2d",lang.get("GameTime","",true).c_str(),hours,minutes);
 		if(str != "") {
-			str += " ";
+			str += "\n";
 		}
 		str += szBuf;
 	}
 
 	if(config.getBool("InGameLocalClock","true") == true) {
 		time_t nowTime = time(NULL);
@@ -2287,13 +2287,13 @@
 		strftime(szBuf2,100,"%H:%M",loctime);
 
 		Lang &lang= Lang::getInstance();
 		char szBuf[200]="";
 		snprintf(szBuf,200,"%s %s",lang.get("LocalTime","",true).c_str(),szBuf2);
 		if(str != "") {
-			str += " ";
+			str += "\n";
 		}
 		str += szBuf;
 	}
 
 	//string str = szBuf;
 
@@ -6185,14 +6185,15 @@
 
 		//progress Bar
 		if(display->getProgressBar() != -1) {
 			renderProgressBar3D(
 				display->getProgressBar(),
 				metrics.getDisplayX(),
-				metrics.getDisplayY() + metrics.getDisplayH()-50,
-				coreData.getDisplayFontSmall3D());
+				metrics.getDisplayY() + metrics.getDisplayH()-55,
+				coreData.getDisplayFontSmall3D(),
+				175);
 		}
 	}
 	else {
 		//infoString
 		renderTextShadow(
 			display->getInfoText().c_str(),
@@ -8352,13 +8353,13 @@
 	return sDisabled;
 }
 
 string Renderer::shadowsToStr(Shadows shadows){
 	switch(shadows){
 	case sDisabled:
-		return "Disabled";
+		return "Disabled2";
 	case sProjected:
 		return "Projected";
 	case sShadowMapping:
 		return "ShadowMapping";
 	default:
 		assert(false);
Index: source/glest_game/main/battle_end.cpp
===================================================================
--- source/glest_game/main/battle_end.cpp	(wersja 4583)
+++ source/glest_game/main/battle_end.cpp	(kopia robocza)
@@ -59,15 +59,15 @@
 	mouse2d = 0;
 	renderToTexture = NULL;
 	renderToTextureCount = 0;
 
 	const Metrics &metrics= Metrics::getInstance();
 	Lang &lang= Lang::getInstance();
-	int buttonWidth = 125;
+	int buttonWidth = 135;
 	int xLocation = (metrics.getVirtualW() / 2) - (buttonWidth / 2);
-	buttonExit.init(xLocation, 80, buttonWidth);
+	buttonExit.init(xLocation, 50, buttonWidth);
 	buttonExit.setText(lang.get("Exit"));
 
 	//mesage box
 	mainMessageBox.init(lang.get("Yes"), lang.get("No"));
 	mainMessageBox.setEnabled(false);
 
@@ -412,12 +412,15 @@
 		renderer.renderButton(&buttonExit);
 
 		//exit message box
 		if(mainMessageBox.getEnabled() && mainMessageBox.getVisible()) {
 			renderer.renderMessageBox(&mainMessageBox);
 		}
+		if(program != NULL) {
+			program->renderProgramMsgBox();
+		}
 
 	    renderer.renderMouse2d(mouseX, mouseY, mouse2dAnim);
 	}
 	else {
 		//printf("Rendering to texture!\n");
 
@@ -525,33 +528,49 @@
 			textRenderer3D->begin(CoreData::getInstance().getMenuFontNormal3D());
 		}
 		else {
 			textRenderer2D->begin(CoreData::getInstance().getMenuFontNormal());
 		}
 
-		int lm= 20;
-		int bm= 100;
+		int lm= 10;
+		int bm= 125;
+		int yLine01= bm+400;
+		int yLine02= yLine01-70;
+		int yLine03= yLine02-35;
+		int yLine04= yLine03-55;
+		int yLine05= yLine04-20;
+		int yLine06= yLine05-35;
+		int yLine07= yLine06-20;
+		int yLine08= yLine07-35;
+		int yLine09= yLine08-35;
+		int yLine10= yLine09-20;
+		int yLine11= yLine10-35;
+		int yLine12= yLine11-40;
 
 		int realPlayerCount = 0;
 		for(int i = 0; i < stats.getFactionCount(); ++i) {
 			if(stats.getTeam(i) == GameConstants::maxPlayers -1 + fpt_Observer) {
 				continue;
 			}
 
 			realPlayerCount++;
-			int textX= lm + 60 + (realPlayerCount*100);
+			int textX= lm + 80 + (realPlayerCount*100);
 			int team= stats.getTeam(i) + 1;
 			int kills= stats.getKills(i);
 			int enemykills= stats.getEnemyKills(i);
 			int deaths= stats.getDeaths(i);
 			int unitsProduced= stats.getUnitsProduced(i);
 			int resourcesHarvested= stats.getResourcesHarvested(i);
 
 			int score= enemykills*100 + unitsProduced*50 + resourcesHarvested/10;
 			string controlString;
 
+			if(i == stats.getFactionCount() - 1) {
+				lineHorizontal.init(lm, yLine12 + 23, textX-lm+100, 1);
+			}
+
 			if(stats.getPersonalityType(i) == fpt_Observer) {
 				controlString= GameConstants::OBSERVER_SLOTNAME;
 			}
 			else {
 				switch(stats.getControl(i)) {
 				case ctCpuEasy:
@@ -599,137 +618,142 @@
 			else if(stats.getPlayerLeftBeforeEnd(i)==true){
 				controlString += "\n" +lang.get("CpuUltra")+"\nx "+floatToStr(stats.getResourceMultiplier(i),1);
 			}
 
 			if(score == bestScore && stats.getVictory(i)) {
 				if(CoreData::getInstance().getGameWinnerTexture() != NULL) {
-					renderer.renderTextureQuad(textX, bm+420,-1,-1,CoreData::getInstance().getGameWinnerTexture(),0.7f);
+					renderer.renderTextureQuad(textX+20, yLine01+20,-1,-1,CoreData::getInstance().getGameWinnerTexture(),0.7f);
 				}
 			}
 
 			Vec3f color = stats.getPlayerColor(i);
 			if(stats.getPlayerName(i) != "") {
-				string textToRender=stats.getPlayerName(i);
+				string textToRender=stats.getPlayerName(i).substr(0,11);
 				if(stats.getPlayerLeftBeforeEnd(i)==true){
 					textToRender+="\n("+getTimeString(stats.getTimePlayerLeft(i))+")";
 				}
 
-				textRenderer->render(textToRender.c_str(), textX, bm+400, false, &color);
+				textRenderer->render(textToRender.c_str(), textX, yLine01, false, &color);
 			}
 			else {
-				textRenderer->render((lang.get("Player") + " " + intToStr(i+1)).c_str(), textX, bm+400,false, &color);
+				textRenderer->render((lang.get("Player") + " " + intToStr(i+1)).c_str(), textX, yLine01,false, &color);
 			}
 
 			Vec3f highliteColor = Vec3f(WHITE.x,WHITE.y,WHITE.z);
 			if(disableStatsColorCoding == false) {
 				highliteColor.x = 0.85f;
 				highliteColor.y = 0.8f;
 				highliteColor.z = 0.07f;
 			}
 
 			if(stats.getPersonalityType(i) == fpt_Observer) {
-				textRenderer->render(lang.get("GameOver").c_str(), textX, bm+360);
+				textRenderer->render(lang.get("GameOver").c_str(), textX, yLine02);
 			}
 			else {
 				if(stats.getVictory(i)) {
-					textRenderer->render(stats.getVictory(i)? lang.get("Victory").c_str(): lang.get("Defeat").c_str(), textX, bm+360, false, &highliteColor);
+					textRenderer->render(stats.getVictory(i)? lang.get("Victory").c_str(): lang.get("Defeat").c_str(), textX, yLine02, false, &highliteColor);
 				}
 				else {
-					textRenderer->render(stats.getVictory(i)? lang.get("Victory").c_str(): lang.get("Defeat").c_str(), textX, bm+360);
+					textRenderer->render(stats.getVictory(i)? lang.get("Victory").c_str(): lang.get("Defeat").c_str(), textX, yLine02);
 				}
 			}
 
-			textRenderer->render(controlString, textX, bm+320);
-			textRenderer->render(stats.getFactionTypeName(i), textX, bm+280);
-			textRenderer->render(intToStr(team).c_str(), textX, bm+240);
+			textRenderer->render(controlString, textX, yLine03);
+			textRenderer->render(stats.getFactionTypeName(i), textX, yLine04);
+			textRenderer->render(intToStr(team).c_str(), textX, yLine05);
 
 			if(kills == bestKills) {
-				textRenderer->render(intToStr(kills).c_str(), textX, bm+200, false,&highliteColor);
+				textRenderer->render(intToStr(kills).c_str(), textX, yLine06, false,&highliteColor);
 			}
 			else {
-				textRenderer->render(intToStr(kills).c_str(), textX, bm+200);
+				textRenderer->render(intToStr(kills).c_str(), textX, yLine06);
 			}
 			if(enemykills == bestEnemyKills) {
-				textRenderer->render(intToStr(enemykills).c_str(), textX, bm+180, false , &highliteColor);
+				textRenderer->render(intToStr(enemykills).c_str(), textX, yLine07, false , &highliteColor);
 			}
 			else {
-				textRenderer->render(intToStr(enemykills).c_str(), textX, bm+180);
+				textRenderer->render(intToStr(enemykills).c_str(), textX, yLine07);
 			}
 			if(deaths == leastDeaths) {
-				textRenderer->render(intToStr(deaths).c_str(), textX, bm+160,false,&highliteColor);
+				textRenderer->render(intToStr(deaths).c_str(), textX, yLine08,false,&highliteColor);
 			}
 			else {
-				textRenderer->render(intToStr(deaths).c_str(), textX, bm+160);
+				textRenderer->render(intToStr(deaths).c_str(), textX, yLine08);
 			}
 			if(unitsProduced == bestUnitsProduced) {
-				textRenderer->render(intToStr(unitsProduced).c_str(), textX, bm+120,false,&highliteColor);
+				textRenderer->render(intToStr(unitsProduced).c_str(), textX, yLine09,false,&highliteColor);
 			}
 			else {
-				textRenderer->render(intToStr(unitsProduced).c_str(), textX, bm+120);
+				textRenderer->render(intToStr(unitsProduced).c_str(), textX, yLine09);
 			}
 			if(resourcesHarvested == bestResourcesHarvested) {
-				textRenderer->render(intToStr(resourcesHarvested).c_str(), textX, bm+80,false,&highliteColor);
+				textRenderer->render(intToStr(resourcesHarvested).c_str(), textX, yLine11,false,&highliteColor);
 			}
 			else {
-				textRenderer->render(intToStr(resourcesHarvested).c_str(), textX, bm+80);
+				textRenderer->render(intToStr(resourcesHarvested).c_str(), textX, yLine11);
 			}
 			if(score == bestScore) {
-				textRenderer->render(intToStr(score).c_str(), textX, bm+20,false,&highliteColor);
+				textRenderer->render(intToStr(score).c_str(), textX, yLine12,false,&highliteColor);
 			}
 			else {
-				textRenderer->render(intToStr(score).c_str(), textX, bm+20);
+				textRenderer->render(intToStr(score).c_str(), textX, yLine12);
 			}
 		}
 
-		textRenderer->render("\n"+(lang.get("LeftAt")), lm, bm+400);
-		textRenderer->render(lang.get("Result"), lm, bm+360);
-		textRenderer->render(lang.get("Control"), lm, bm+320);
-		textRenderer->render(lang.get("Faction"), lm, bm+280);
-		textRenderer->render(lang.get("Team"), lm, bm+240);
-		textRenderer->render(lang.get("Kills"), lm, bm+200);
-		textRenderer->render(lang.get("EnemyKills"), lm, bm+180);
-		textRenderer->render(lang.get("Deaths"), lm, bm+160);
-		textRenderer->render(lang.get("UnitsProduced"), lm, bm+120);
-		textRenderer->render(lang.get("ResourcesHarvested"), lm, bm+80);
-		textRenderer->render(lang.get("Score"), lm, bm+20);
+		renderer.renderLine(&lineHorizontal);
+		
+		textRenderer->render(("\n"+lang.get("LeftAt")), lm, yLine01);
+		//textRenderer->render(("\n\n"+lang.get("JoinedAt")), lm, yLine01);
+		textRenderer->render(lang.get("Result"), lm, yLine02);
+		textRenderer->render(lang.get("Control2"), lm, yLine03);
+		textRenderer->render(lang.get("Faction2"), lm, yLine04);
+		textRenderer->render(lang.get("Team2"), lm, yLine05);
+		textRenderer->render(lang.get("Kills2"), lm, yLine06);
+		textRenderer->render(lang.get("EnemyKills"), lm, yLine07);
+		textRenderer->render(lang.get("Deaths"), lm, yLine08);
+		textRenderer->render(lang.get("UnitsProduced"), lm, yLine09);
+		//textRenderer->render(lang.get("OtherUnits"), lm, yLine10);
+		textRenderer->render(lang.get("ResourcesHarvested"), lm, yLine11);
+		textRenderer->render(lang.get("Score"), lm, yLine12);
 
 		textRenderer->end();
 
 		if(Renderer::renderText3DEnabled == true) {
 			textRenderer3D->begin(CoreData::getInstance().getMenuFontVeryBig3D());
 		}
 		else {
 			textRenderer2D->begin(CoreData::getInstance().getMenuFontVeryBig());
 		}
 
-		string header = stats.getDescription() + " - ";
+		string header = "";
 
 		if(stats.getTeam(stats.getThisFactionIndex()) != GameConstants::maxPlayers -1 + fpt_Observer) {
 			if(stats.getVictory(stats.getThisFactionIndex())){
 				header += lang.get("Victory");
 			}
 			else{
 				header += lang.get("Defeat");
 			}
 		}
 		else {
 			header += "Observer";
 		}
-		textRenderer->render(header, lm+250, bm+550);
-
+		header += "  -  " +  stats.getDescription();
+		textRenderer->render(header, lm+225, bm+570);
+		
 		//GameConstants::updateFps
 		//string header2 = lang.get("GameDurationTime","",true) + " " + floatToStr(stats.getWorldTimeElapsed() / 24.0,2);
 
 		string header2 = lang.get("GameDurationTime","",true) + ": " + getTimeString(stats.getFramesToCalculatePlaytime());
-		textRenderer->render(header2, lm+250, bm+530);
+		textRenderer->render(header2, lm+225, bm+540);
 
 		header2 = lang.get("GameMaxConcurrentUnitCount") + ": " + intToStr(stats.getMaxConcurrentUnitCount());
-		textRenderer->render(header2, lm+250, bm+510);
+		textRenderer->render(header2, lm+225, bm+517);
 
 		header2 = lang.get("GameTotalEndGameConcurrentUnitCount") + ": " + intToStr(stats.getTotalEndGameConcurrentUnitCount());
-		textRenderer->render(header2, lm+250, bm+490);
+		textRenderer->render(header2, lm+225, bm+494);
 
 		textRenderer->end();
 
 		renderer.renderButton(&buttonExit);
 
 		//exit message box
@@ -748,13 +772,12 @@
 		if(menuBackgroundVideo == NULL) {
 			if(renderToTexture == NULL && renderToTextureCount < 300) {
 				renderToTextureCount++;
 			}
 		}
 	}
-
 	renderer.renderFPSWhenEnabled(lastFps);
 
 	renderer.swapBuffers();
 }
 
 void BattleEnd::keyDown(SDL_KeyboardEvent key){
@@ -764,13 +787,13 @@
 
 		if(mainMessageBox.getEnabled()) {
 			mainMessageBox.setEnabled(false);
 		}
 		else {
 			Lang &lang= Lang::getInstance();
-			showMessageBox(lang.get("ExitGameMenu?"), "", true);
+			showMessageBox(lang.get("Exit2GameMenuQ"), "", true);
 		}
 	}
 	else if(isKeyPressed(SDLK_RETURN,key) && mainMessageBox.getEnabled()) {
 		SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",__FILE__,__FUNCTION__,__LINE__);
 		program->setState(new MainMenu(program));
 	}
Index: source/glest_game/main/battle_end.h
===================================================================
--- source/glest_game/main/battle_end.h	(wersja 4583)
+++ source/glest_game/main/battle_end.h	(kopia robocza)
@@ -39,12 +39,13 @@
 	Stats stats;
 
 	GraphicButton buttonExit;
 	int mouseX;
 	int mouseY;
 	int mouse2d;
+	GraphicLine lineHorizontal;
 	GraphicMessageBox mainMessageBox;
 	Texture2D *renderToTexture;
 	uint64 renderToTextureCount;
 	ProgramState *originState;
 	const char *containerName;
 
Index: source/glest_game/main/main.cpp
===================================================================
--- source/glest_game/main/main.cpp	(wersja 4583)
+++ source/glest_game/main/main.cpp	(kopia robocza)
@@ -352,16 +352,16 @@
     	sdl_quitCalled = true;
     	SDL_Quit();
     }
     exit(EXIT_FAILURE);
 }
 
-std::string get_module_path(HMODULE module = 0) {
-  char path_name[MAX_PATH] = {};
-  DWORD size = GetModuleFileNameA(module, path_name, MAX_PATH);
-  return std::string(path_name, size);
+std::string get_module_path(HMODULE module = 0) {
+  char path_name[MAX_PATH] = {};
+  DWORD size = GetModuleFileNameA(module, path_name, MAX_PATH);
+  return std::string(path_name, size);
 }
 void write_module_name(string &out, HANDLE process, DWORD64 program_counter) {
   DWORD64 module_base = SymGetModuleBase64(process, program_counter);
   if (module_base) {
     std::string module_name = get_module_path(reinterpret_cast<HMODULE>(module_base));
     if (!module_name.empty())
@@ -412,13 +412,13 @@
     BOOL stack_walk_ok = StackWalk64(IMAGE_FILE_MACHINE_I386, process, thread, &sf,
                                      (tryThreadContext == false ? &threadContext : &ctx), 0, &SymFunctionTableAccess64,
                                      &SymGetModuleBase64, 0);
     if (!stack_walk_ok || !sf.AddrFrame.Offset) {
 		if(tryThreadContext == true) {
 			tryThreadContext = false;
-			if(GetThreadContext(thread, &threadContext) != 0) {
+			if(GetThreadContext(thread, &threadContext) != 0) {
 			  sf.AddrPC.Offset    = threadContext.Eip;
 			  sf.AddrPC.Mode      = AddrModeFlat;
 			  sf.AddrStack.Offset = threadContext.Esp;
 			  sf.AddrStack.Mode   = AddrModeFlat;
 			  sf.AddrFrame.Offset = threadContext.Ebp;
 			  sf.AddrFrame.Mode   = AddrModeFlat;
@@ -446,38 +446,38 @@
 
 		out += "\n";
     }
   }
 }
 
-struct UntypedException {
-  UntypedException(const EXCEPTION_RECORD & er)
-    : exception_object(reinterpret_cast<void *>(er.ExceptionInformation[1])),
-      type_array(reinterpret_cast<_ThrowInfo *>(er.ExceptionInformation[2])->pCatchableTypeArray)
-  {}
-  void * exception_object;
-  _CatchableTypeArray * type_array;
+struct UntypedException {
+  UntypedException(const EXCEPTION_RECORD & er)
+    : exception_object(reinterpret_cast<void *>(er.ExceptionInformation[1])),
+      type_array(reinterpret_cast<_ThrowInfo *>(er.ExceptionInformation[2])->pCatchableTypeArray)
+  {}
+  void * exception_object;
+  _CatchableTypeArray * type_array;
 };
 
-void * exception_cast_worker(const UntypedException & e, const type_info & ti) {
-  for (int i = 0; i < e.type_array->nCatchableTypes; ++i) {
-    _CatchableType & type_i = *e.type_array->arrayOfCatchableTypes[i];
-    const std::type_info & ti_i = *reinterpret_cast<std::type_info *>(type_i.pType);
-    if (ti_i == ti) {
-      char * base_address = reinterpret_cast<char *>(e.exception_object);
-      base_address += type_i.thisDisplacement.mdisp;
-      return base_address;
-    }
-  }
-  return 0;
-}
-
-template <typename T>
-T * exception_cast(const UntypedException & e) {
-  const std::type_info & ti = typeid(T);
-  return reinterpret_cast<T *>(exception_cast_worker(e, ti));
+void * exception_cast_worker(const UntypedException & e, const type_info & ti) {
+  for (int i = 0; i < e.type_array->nCatchableTypes; ++i) {
+    _CatchableType & type_i = *e.type_array->arrayOfCatchableTypes[i];
+    const std::type_info & ti_i = *reinterpret_cast<std::type_info *>(type_i.pType);
+    if (ti_i == ti) {
+      char * base_address = reinterpret_cast<char *>(e.exception_object);
+      base_address += type_i.thisDisplacement.mdisp;
+      return base_address;
+    }
+  }
+  return 0;
+}
+
+template <typename T>
+T * exception_cast(const UntypedException & e) {
+  const std::type_info & ti = typeid(T);
+  return reinterpret_cast<T *>(exception_cast_worker(e, ti));
 }
 void stackdumper(unsigned int type, EXCEPTION_POINTERS *ep, bool fatalExit) {
 #ifdef HAVE_GOOGLE_BREAKPAD
 	if(errorHandlerPtr.get() != NULL) {
 		errorHandlerPtr->WriteMinidump();
 	}
@@ -1050,18 +1050,18 @@
 	for(unsigned int i = 0; i < langResults2.size(); ++i) {
 		string testLanguage = langResults2[i];
 		if(std::find(menuItems.begin(),menuItems.end(),testLanguage) == menuItems.end()) {
 			menuItems.push_back(testLanguage);
 		}
 	}
-	menuItems.push_back(lang.get("Exit"));
+	menuItems.push_back("      >   "+lang.get("Cancel")+"   <      ");
 	cancelLanguageSelection = menuItems.size()-1;
 
-	popupMenu.setW(100);
-	popupMenu.setH(100);
-	popupMenu.init(lang.get("GameMenuTitle"),menuItems);
+	popupMenu.setW(150);
+	popupMenu.setH(95);
+	popupMenu.init("",menuItems);
 	popupMenu.setEnabled(true);
 	popupMenu.setVisible(true);
 }
 
 void MainWindow::toggleLanguage(string language) {
 	popupMenu.setEnabled(false);
@@ -1107,13 +1107,13 @@
 			}
 		}
 	}
 	if(newLanguageSelected != currentLanguage) {
 		lang.loadStrings(newLanguageSelected);
 		program->reloadUI();
-		program->consoleAddLine(lang.get("Language") + " " + newLanguageSelected);
+		program->consoleAddLine("Language: " + newLanguageSelected);
 	}
 }
 
 void MainWindow::eventKeyDown(SDL_KeyboardEvent key) {
 	SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d] [%d]\n",__FILE__,__FUNCTION__,__LINE__,key.keysym.sym);
 
@@ -3552,13 +3552,13 @@
 		haveSpecialOutputCommandLineOption = true;
 	}
 
 	if( haveSpecialOutputCommandLineOption == false ||
 		hasCommandArgument(argc, argv,GAME_ARGS[GAME_ARG_VERSION]) == true) {
 		printf("%s %s",extractFileFromDirectoryPath(argv[0]).c_str(),getNetworkPlatformFreeVersionString().c_str());
-		printf("\nCompiled using: %s on: %s platform: %s endianness: %s",getCompilerNameString().c_str(),getCompileDateTime().c_str(),getPlatformNameString().c_str(),(Shared::PlatformByteOrder::isBigEndian() == true ? "big" : "little"));
+		printf("\nCompiled using: %s, on: %s, platform: %s, endianness: %s",getCompilerNameString().c_str(),getCompileDateTime().c_str(),getPlatformNameString().c_str(),(Shared::PlatformByteOrder::isBigEndian() == true ? "big" : "little"));
 
 //		printf("\n\nData type sizes int8 = " MG_SIZE_T_SPECIFIER " int16 = " MG_SIZE_T_SPECIFIER " int32 = " MG_SIZE_T_SPECIFIER " int64 = " MG_SIZE_T_SPECIFIER "\n\n",sizeof(int8),sizeof(int16),sizeof(int32),sizeof(int64));
 //
 //		Config::getInstance().setBool("DebugNetworkPackets",true,true);
 //		NetworkMessageIntro data(424336, "mg_version_x","player_x", 3, nmgstOk,444444, 555555, "english");
 //		unsigned char *buf = data.packMessage();
@@ -5533,30 +5533,30 @@
 }
 #endif
 
 #if defined(HAVE_GOOGLE_BREAKPAD)
 
 #if defined(WIN32)
-// Callback when minidump written.
-static bool MinidumpCallback(const wchar_t *dump_path,
-                             const wchar_t *minidump_id,
-                             void *context,
+// Callback when minidump written.
+static bool MinidumpCallback(const wchar_t *dump_path,
+                             const wchar_t *minidump_id,
+                             void *context,
                              EXCEPTION_POINTERS* exinfo,
                              MDRawAssertionInfo* assertion,
-                             bool succeeded) {
-  printf("\n======= In MinidumpCallback...\n");
-  wprintf(L"\n***ERROR details captured:\nCrash minidump folder: %s\nfile: %s.dmp\nSucceeded: %d\n", (dump_path != NULL ? dump_path : L"(null)"),(minidump_id != NULL ? minidump_id : L"(null)"),succeeded);
+                             bool succeeded) {
+  printf("\n======= In MinidumpCallback...\n");
+  wprintf(L"\n***ERROR details captured:\nCrash minidump folder: %s\nfile: %s.dmp\nSucceeded: %d\n", (dump_path != NULL ? dump_path : L"(null)"),(minidump_id != NULL ? minidump_id : L"(null)"),succeeded);
 
-  if(GlobalStaticFlags::getIsNonGraphicalModeEnabled() == false) {
+  if(GlobalStaticFlags::getIsNonGraphicalModeEnabled() == false) {
 	  wchar_t szBuf[8096];
 	  int bufBytes = _snwprintf(szBuf,8096,L"An unhandled error was detected.\n\nA crash dump file has been created in the folder:\n%s\nCrash dump filename is: %s.dmp",dump_path,minidump_id);
 	  szBuf[bufBytes] = '\0';
 	  MessageBox(NULL, szBuf, L"Unhandled error", MB_OK|MB_SYSTEMMODAL);
   }
-
-  return succeeded;
+
+  return succeeded;
 }
 
 #else
 
 // Callback when minidump written.
 static bool MinidumpCallback(const google_breakpad::MinidumpDescriptor& descriptor,
@@ -5573,33 +5573,33 @@
   }
 
   return succeeded;
 }
 
 #endif
-
+
 #endif
 
 #ifdef WIN32
-void EnableCrashingOnCrashes() { 
-    typedef BOOL (WINAPI *tGetPolicy)(LPDWORD lpFlags); 
-    typedef BOOL (WINAPI *tSetPolicy)(DWORD dwFlags); 
-    const DWORD EXCEPTION_SWALLOWING = 0x1;
-
-    HMODULE kernel32 = LoadLibraryA("kernel32.dll");
-	if(kernel32 != 0) {
-		tGetPolicy pGetPolicy = (tGetPolicy)GetProcAddress(kernel32, "GetProcessUserModeExceptionPolicy"); 
-		tSetPolicy pSetPolicy = (tSetPolicy)GetProcAddress(kernel32, "SetProcessUserModeExceptionPolicy"); 
-		if (pGetPolicy && pSetPolicy) { 
-			DWORD dwFlags; 
-			if (pGetPolicy(&dwFlags)) { 
-				// Turn off the filter 
-				pSetPolicy(dwFlags & ~EXCEPTION_SWALLOWING); 
-			} 
-		} 
-	}
+void EnableCrashingOnCrashes() { 
+    typedef BOOL (WINAPI *tGetPolicy)(LPDWORD lpFlags); 
+    typedef BOOL (WINAPI *tSetPolicy)(DWORD dwFlags); 
+    const DWORD EXCEPTION_SWALLOWING = 0x1;
+
+    HMODULE kernel32 = LoadLibraryA("kernel32.dll");
+	if(kernel32 != 0) {
+		tGetPolicy pGetPolicy = (tGetPolicy)GetProcAddress(kernel32, "GetProcessUserModeExceptionPolicy"); 
+		tSetPolicy pSetPolicy = (tSetPolicy)GetProcAddress(kernel32, "SetProcessUserModeExceptionPolicy"); 
+		if (pGetPolicy && pSetPolicy) { 
+			DWORD dwFlags; 
+			if (pGetPolicy(&dwFlags)) { 
+				// Turn off the filter 
+				pSetPolicy(dwFlags & ~EXCEPTION_SWALLOWING); 
+			} 
+		} 
+	}
 }
 #endif
 
 int glestMainSEHWrapper(int argc, char** argv) {
 #ifdef WIN32_STACK_TRACE
 	//printf("Hooking up WIN32_STACK_TRACE...\n");
@@ -5643,31 +5643,31 @@
 
 int glestMainWrapper(int argc, char** argv) {
 	//setlocale(LC_ALL, "zh_TW.UTF-8");
 	//setlocale(LC_ALL, "");
 
 #ifdef WIN32
-	EnableCrashingOnCrashes();
+	EnableCrashingOnCrashes();
 #endif
 
 #if defined(HAVE_GOOGLE_BREAKPAD)
 /*
-	handler = new ExceptionHandler(const wstring& dump_path,
-                                                              FilterCallback filter,
-                                                              MinidumpCallback callback,
-                                                              void* callback_context,
-                                                              int handler_types,
-                                                              MINIDUMP_TYPE dump_type,
-                                                              const wchar_t* pipe_name,
+	handler = new ExceptionHandler(const wstring& dump_path,
+                                                              FilterCallback filter,
+                                                              MinidumpCallback callback,
+                                                              void* callback_context,
+                                                              int handler_types,
+                                                              MINIDUMP_TYPE dump_type,
+                                                              const wchar_t* pipe_name,
                                                               const CustomClientInfo* custom_info);
 */
 
-	// See this link about swallowed exceptions in Win 7: http://blog.paulbetts.org/index.php/2010/07/20/the-case-of-the-disappearing-onload-exception-user-mode-callback-exceptions-in-x64/
-	//DWORD dwFlags;
-	//if (GetProcessUserModeExceptionPolicy(&dwFlags)) {
-	//	SetProcessUserModeExceptionPolicy(dwFlags & ~PROCESS_CALLBACK_FILTER_ENABLED); // turn off bit 1
+	// See this link about swallowed exceptions in Win 7: http://blog.paulbetts.org/index.php/2010/07/20/the-case-of-the-disappearing-onload-exception-user-mode-callback-exceptions-in-x64/
+	//DWORD dwFlags;
+	//if (GetProcessUserModeExceptionPolicy(&dwFlags)) {
+	//	SetProcessUserModeExceptionPolicy(dwFlags & ~PROCESS_CALLBACK_FILTER_ENABLED); // turn off bit 1
 	//}
 
 	//if(SystemFlags::VERBOSE_MODE_ENABLED) printf("Hooking up google_breakpad::ExceptionHandler...\n");
 
 #if defined(WIN32)
 	wstring dumpfilepath = utf8_decode(".");
Index: source/glest_game/menu/menu_state_about.cpp
===================================================================
--- source/glest_game/menu/menu_state_about.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_about.cpp	(kopia robocza)
@@ -47,13 +47,13 @@
 	customModTextureAlpha = 0.f;
 
 	string additionalCredits= loadAdditionalCredits();
 
 	//init
 	buttonReturn.registerGraphicComponent(containerName, "buttonReturn");
-	buttonReturn.init(460, 100, 125);
+	buttonReturn.init(430, 80, 135);
 	buttonReturn.setText(lang.get("Return"));
 
 	labelAdditionalCredits.registerGraphicComponent(containerName, "labelAdditionalCredits");
 	labelAdditionalCredits.init(500, 700);
 	labelAdditionalCredits.setText(additionalCredits);
 
Index: source/glest_game/menu/menu_state_connected_game.cpp
===================================================================
--- source/glest_game/menu/menu_state_connected_game.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_connected_game.cpp	(kopia robocza)
@@ -174,187 +174,195 @@
 	labelDataSynchInfo.setFont(CoreData::getInstance().getMenuFontBig());
 	labelDataSynchInfo.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 
 	// fog - o - war
 	int xoffset=70;
 	labelFogOfWar.registerGraphicComponent(containerName,"labelFogOfWar");
-	labelFogOfWar.init(xoffset+100, aHeadPos, 130);
+	labelFogOfWar.init(xoffset+95, aHeadPos, 150);
 	labelFogOfWar.setText(lang.get("FogOfWar"));
 
 	listBoxFogOfWar.registerGraphicComponent(containerName,"listBoxFogOfWar");
-	listBoxFogOfWar.init(xoffset+100, aPos, 130);
+	listBoxFogOfWar.init(xoffset+95, aPos, 150);
 	listBoxFogOfWar.pushBackItem(lang.get("Enabled"));
 	listBoxFogOfWar.pushBackItem(lang.get("Explored"));
 	listBoxFogOfWar.pushBackItem(lang.get("Disabled"));
 	listBoxFogOfWar.setSelectedItemIndex(0);
 	listBoxFogOfWar.setEditable(false);
 
 
 	labelAllowObservers.registerGraphicComponent(containerName,"labelAllowObservers");
-	labelAllowObservers.init(xoffset+310, aHeadPos, 80);
+	labelAllowObservers.init(xoffset+330, aHeadPos, 80);
 	labelAllowObservers.setText(lang.get("AllowObservers"));
 
 	checkBoxAllowObservers.registerGraphicComponent(containerName,"checkBoxAllowObservers");
-	checkBoxAllowObservers.init(xoffset+310, aPos);
+	checkBoxAllowObservers.init(xoffset+330, aPos);
 	checkBoxAllowObservers.setValue(false);
 	checkBoxAllowObservers.setEditable(false);
 
 	for(int i=0; i<45; ++i){
 		rMultiplier.push_back(floatToStr(0.5f+0.1f*i,1));
 	}
 
 	labelFallbackCpuMultiplier.registerGraphicComponent(containerName,"labelFallbackCpuMultiplier");
-	labelFallbackCpuMultiplier.init(xoffset+460, aHeadPos, 80);
+	labelFallbackCpuMultiplier.init(xoffset+485, aHeadPos, 70);
 	labelFallbackCpuMultiplier.setText(lang.get("FallbackCpuMultiplier"));
 
 	listBoxFallbackCpuMultiplier.registerGraphicComponent(containerName,"listBoxFallbackCpuMultiplier");
-	listBoxFallbackCpuMultiplier.init(xoffset+460, aPos, 80);
+	listBoxFallbackCpuMultiplier.init(xoffset+485, aPos, 70);
 	listBoxFallbackCpuMultiplier.setItems(rMultiplier);
 	listBoxFallbackCpuMultiplier.setSelectedItemIndex(0);
 
 
 	// Allow Switch Team Mode
 	labelEnableSwitchTeamMode.registerGraphicComponent(containerName,"labelEnableSwitchTeamMode");
-	labelEnableSwitchTeamMode.init(xoffset+310, aHeadPos+45, 80);
+	labelEnableSwitchTeamMode.init(xoffset+330, aHeadPos+45, 80);
 	labelEnableSwitchTeamMode.setText(lang.get("EnableSwitchTeamMode"));
 
 	checkBoxEnableSwitchTeamMode.registerGraphicComponent(containerName,"checkBoxEnableSwitchTeamMode");
-	checkBoxEnableSwitchTeamMode.init(xoffset+310, aPos+45);
+	checkBoxEnableSwitchTeamMode.init(xoffset+330, aPos+45);
 	checkBoxEnableSwitchTeamMode.setValue(false);
 	checkBoxEnableSwitchTeamMode.setEditable(false);
 
 	labelAISwitchTeamAcceptPercent.registerGraphicComponent(containerName,"labelAISwitchTeamAcceptPercent");
-	labelAISwitchTeamAcceptPercent.init(xoffset+460, aHeadPos+45, 80);
+	labelAISwitchTeamAcceptPercent.init(xoffset+485, aHeadPos+45, 70);
 	labelAISwitchTeamAcceptPercent.setText(lang.get("AISwitchTeamAcceptPercent"));
 
 	listBoxAISwitchTeamAcceptPercent.registerGraphicComponent(containerName,"listBoxAISwitchTeamAcceptPercent");
-	listBoxAISwitchTeamAcceptPercent.init(xoffset+460, aPos+45, 80);
+	listBoxAISwitchTeamAcceptPercent.init(xoffset+485, aPos+45, 70);
 	for(int i = 0; i <= 100; i = i + 10) {
 		listBoxAISwitchTeamAcceptPercent.pushBackItem(intToStr(i));
 	}
 	listBoxAISwitchTeamAcceptPercent.setSelectedItem(intToStr(30));
 	listBoxAISwitchTeamAcceptPercent.setEditable(false);
 
 	//create
 	buttonCancelDownloads.registerGraphicComponent(containerName,"buttonCancelDownloads");
-	buttonCancelDownloads.init(xoffset+620, 180, 150);
+	buttonCancelDownloads.init(165+175+15+275+15+165+15, 180, 165);
 	buttonCancelDownloads.setText(lang.get("CancelDownloads"));
 
 	listBoxPlayerStatus.registerGraphicComponent(containerName,"listBoxPlayerStatus");
-	nonAdminPlayerStatusX = xoffset+460;
+	nonAdminPlayerStatusX = 165+175+15;
 	listBoxPlayerStatus.init(nonAdminPlayerStatusX, 180, 150);
-	listBoxPlayerStatus.setTextColor(Vec3f(1.0f,0.f,0.f));
-	listBoxPlayerStatus.setLighted(true);
 	playerStatuses.push_back(lang.get("PlayerStatusSetup"));
 	playerStatuses.push_back(lang.get("PlayerStatusBeRightBack"));
 	playerStatuses.push_back(lang.get("PlayerStatusReady"));
 	listBoxPlayerStatus.setItems(playerStatuses);
+	listBoxPlayerStatus.setTextColor(Vec3f(1.0f,0.0f,0.0f));
+	listBoxPlayerStatus.setLighted(true);
 
 	// Network Frame Period
 	xoffset=70;
     //map listBox
 	// put them all in a set, to weed out duplicates (gbm & mgm with same name)
 	// will also ensure they are alphabetically listed (rather than how the OS provides them)
+	lineHorizontal1.init(xoffset+95+25, mapPos,225-50,2);
 	listBoxMap.registerGraphicComponent(containerName,"listBoxMap");
-	listBoxMap.init(xoffset+100, mapPos, 200);
+	listBoxMap.init(xoffset+95, mapPos, 225);
 	listBoxMap.setEditable(false);
 
     labelMapInfo.registerGraphicComponent(containerName,"labelMapInfo");
-	labelMapInfo.init(xoffset+100, mapPos-labelOffset-10, 200, 40);
+	labelMapInfo.init(xoffset+95+10, mapPos-labelOffset-15, 225-10, 40);
     labelMapInfo.setText("?");
 
 	labelMap.registerGraphicComponent(containerName,"labelMap");
-	labelMap.init(xoffset+100, mapHeadPos);
+	labelMap.init(xoffset+95, mapHeadPos);
 	labelMap.setText(lang.get("Map"));
 
     //tileset listBox
+	lineHorizontal2.init(xoffset+485+25, mapPos,200-50,2);
 	listBoxTileset.registerGraphicComponent(containerName,"listBoxTileset");
-	listBoxTileset.init(xoffset+460, mapPos, 150);
+	listBoxTileset.init(xoffset+485, mapPos, 200);
 	listBoxTileset.setEditable(false);
 
 	labelTileset.registerGraphicComponent(containerName,"labelTileset");
-	labelTileset.init(xoffset+460, mapHeadPos);
+	labelTileset.init(xoffset+485, mapHeadPos);
 	labelTileset.setText(lang.get("Tileset"));
 
 
     //tech Tree listBox
 	listBoxTechTree.setEditable(false);
-
+	lineHorizontal3.init(xoffset+695+25, mapPos,200-50,2);
 	listBoxTechTree.registerGraphicComponent(containerName,"listBoxTechTree");
-	listBoxTechTree.init(xoffset+620, mapPos, 150);
+	listBoxTechTree.init(xoffset+695, mapPos, 200);
 
 	labelTechTree.registerGraphicComponent(containerName,"labelTechTree");
-	labelTechTree.init(xoffset+620, mapHeadPos);
+	labelTechTree.init(xoffset+695, mapHeadPos);
 	labelTechTree.setText(lang.get("TechTree"));
 
 	labelAllowNativeLanguageTechtree.registerGraphicComponent(containerName,"labelAllowNativeLanguageTechtree");
-	labelAllowNativeLanguageTechtree.init(xoffset+620, mapHeadPos-45);
+	labelAllowNativeLanguageTechtree.init(xoffset+695, aHeadPos+45);
 	labelAllowNativeLanguageTechtree.setText(lang.get("AllowNativeLanguageTechtree"));
 
 	checkBoxAllowNativeLanguageTechtree.registerGraphicComponent(containerName,"checkBoxAllowNativeLanguageTechtree");
-	checkBoxAllowNativeLanguageTechtree.init(xoffset+620, mapHeadPos-65);
+	checkBoxAllowNativeLanguageTechtree.init(xoffset+695, aPos+45);
 	checkBoxAllowNativeLanguageTechtree.setValue(false);
 	checkBoxAllowNativeLanguageTechtree.setEditable(false);
 	checkBoxAllowNativeLanguageTechtree.setEnabled(false);
 
 	if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 
 	xoffset=100;
 	int rowHeight=27;
     for(int i=0; i<GameConstants::maxPlayers; ++i){
 		labelPlayerStatus[i].registerGraphicComponent(containerName,"labelPlayerStatus" + intToStr(i));
-		labelPlayerStatus[i].init(10, setupPos-30-i*rowHeight, 60);
+		labelPlayerStatus[i].init(2, setupPos-30-i*rowHeight, 60);
 
     	labelPlayers[i].registerGraphicComponent(containerName,"labelPlayers" + intToStr(i));
-		labelPlayers[i].init(xoffset, setupPos-30-i*rowHeight);
+		labelPlayers[i].init(xoffset+18, (setupPos-30-i*rowHeight)+2);
 		labelPlayers[i].setEditable(false);
 
 		labelPlayerNames[i].registerGraphicComponent(containerName,"labelPlayerNames" + intToStr(i));
-		labelPlayerNames[i].init(xoffset+70,setupPos-30-i*rowHeight);
+		labelPlayerNames[i].init(xoffset+50,setupPos-30-i*rowHeight);
 
 		listBoxControls[i].registerGraphicComponent(containerName,"listBoxControls" + intToStr(i));
-        listBoxControls[i].init(xoffset+210, setupPos-30-i*rowHeight);
+        listBoxControls[i].init(xoffset+200, setupPos-30-i*rowHeight, 150);
         listBoxControls[i].setEditable(false);
 
         listBoxRMultiplier[i].registerGraphicComponent(containerName,"listBoxRMultiplier" + intToStr(i));
-        listBoxRMultiplier[i].init(xoffset+350, setupPos-30-i*rowHeight,70);
+        listBoxRMultiplier[i].init(xoffset+352, setupPos-30-i*rowHeight,66);
 		listBoxRMultiplier[i].setEditable(false);
 
         listBoxFactions[i].registerGraphicComponent(containerName,"listBoxFactions" + intToStr(i));
-        listBoxFactions[i].init(xoffset+430, setupPos-30-i*rowHeight);
+        listBoxFactions[i].init(xoffset+420, setupPos-30-i*rowHeight, 163);
         listBoxFactions[i].setEditable(false);
 
         listBoxTeams[i].registerGraphicComponent(containerName,"listBoxTeams" + intToStr(i));
-		listBoxTeams[i].init(xoffset+590, setupPos-30-i*rowHeight, 60);
+		listBoxTeams[i].init(xoffset+585, setupPos-30-i*rowHeight, 55);
 		listBoxTeams[i].setEditable(false);
 
 		labelNetStatus[i].registerGraphicComponent(containerName,"labelNetStatus" + intToStr(i));
-		labelNetStatus[i].init(xoffset+655, setupPos-30-i*rowHeight, 60);
+		labelNetStatus[i].init(xoffset+645, setupPos-30-i*rowHeight, 60);
 		labelNetStatus[i].setFont(CoreData::getInstance().getDisplayFontSmall());
 		labelNetStatus[i].setFont3D(CoreData::getInstance().getDisplayFontSmall3D());
 
 		grabSlotButton[i].registerGraphicComponent(containerName,"grabSlotButton" + intToStr(i));
-		grabSlotButton[i].init(xoffset+660, setupPos-30-i*rowHeight, 30);
-		grabSlotButton[i].setText(">");
+		grabSlotButton[i].init(xoffset+645, setupPos-30-i*rowHeight, 50);
+		grabSlotButton[i].setText("> || <");
     }
 
+	labelPlayer.registerGraphicComponent(containerName,"labelPlayer");
+	labelPlayer.init(xoffset+30, setupPos, GraphicListBox::defW, GraphicListBox::defH, true);
+	labelPlayer.setText(lang.get("Player"));
+
     labelControl.registerGraphicComponent(containerName,"labelControl");
-	labelControl.init(xoffset+210, setupPos, GraphicListBox::defW, GraphicListBox::defH, true);
+	labelControl.init(xoffset+205, setupPos, GraphicListBox::defW, GraphicListBox::defH, true);
 	labelControl.setText(lang.get("Control"));
 
 	labelRMultiplier.registerGraphicComponent(containerName,"labelRMultiplier");
 	labelRMultiplier.init(xoffset+350, setupPos, GraphicListBox::defW, GraphicListBox::defH, true);
 
 	labelFaction.registerGraphicComponent(containerName,"labelFaction");
-    labelFaction.init(xoffset+430, setupPos, GraphicListBox::defW, GraphicListBox::defH, true);
+    labelFaction.init(xoffset+432, setupPos, GraphicListBox::defW, GraphicListBox::defH, true);
     labelFaction.setText(lang.get("Faction"));
 
     labelTeam.registerGraphicComponent(containerName,"labelTeam");
-    labelTeam.init(xoffset+590, setupPos, 60, GraphicListBox::defH, true);
+    labelTeam.init(xoffset+585, setupPos, 50, GraphicListBox::defH, true);
 	labelTeam.setText(lang.get("Team"));
 
+	labelPlayer.setFont(CoreData::getInstance().getMenuFontBig());
+    	labelPlayer.setFont3D(CoreData::getInstance().getMenuFontBig3D());
     labelControl.setFont(CoreData::getInstance().getMenuFontBig());
     labelControl.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	labelFaction.setFont(CoreData::getInstance().getMenuFontBig());
 	labelFaction.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	labelTeam.setFont(CoreData::getInstance().getMenuFontBig());
 	labelTeam.setFont3D(CoreData::getInstance().getMenuFontBig3D());
@@ -386,16 +394,18 @@
 		teamItems.push_back(intToStr(i));
 	}
 
 	for(int i=0; i<GameConstants::maxPlayers; ++i){
 		labelPlayerStatus[i].setText("");
 
-		labelPlayers[i].setText(lang.get("Player")+" "+intToStr(i));
+		labelPlayers[i].setText("|#"+intToStr(i)+"|");
+		labelPlayers[i].setFont(CoreData::getInstance().getMenuFontBig());
+		labelPlayers[i].setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		labelPlayerNames[i].setText("");
 		labelPlayerNames[i].setMaxEditWidth(16);
-		labelPlayerNames[i].setMaxEditRenderWidth(135);
+		labelPlayerNames[i].setMaxEditRenderWidth(145);
 
         listBoxTeams[i].setItems(teamItems);
 		listBoxTeams[i].setSelectedItemIndex(i);
 		listBoxControls[i].setItems(controlItems);
 		listBoxRMultiplier[i].setItems(rMultiplier);
 		listBoxRMultiplier[i].setSelectedItemIndex(5);
@@ -412,21 +422,21 @@
 	// put them all in a set, to weed out duplicates (gbm & mgm with same name)
 	// will also ensure they are alphabetically listed (rather than how the OS provides them)
 	setupMapList("");
     listBoxMap.setItems(formattedPlayerSortedMaps[0]);
 
 	buttonPlayNow.registerGraphicComponent(containerName,"buttonPlayNow");
-	buttonPlayNow.init(220, 180, 125);
+	buttonPlayNow.init(165+165+15+275+15, 180, 175);
 	buttonPlayNow.setText(lang.get("PlayNow"));
 	buttonPlayNow.setVisible(false);
 
 	buttonDisconnect.registerGraphicComponent(containerName,"buttonDisconnect");
-	buttonDisconnect.init(350, 180, 125);
+	buttonDisconnect.init(165, 180, 165);
 
 	buttonRestoreLastSettings.registerGraphicComponent(containerName,"buttonRestoreLastSettings");
-	buttonRestoreLastSettings.init(480, 180, 220);
+	buttonRestoreLastSettings.init(165+165+15, 180, 275);
 	buttonRestoreLastSettings.setText(lang.get("ReloadLastGameSettings"));
 
 	// write hint to console:
 	Config &configKeys = Config::getInstance(std::pair<ConfigType,ConfigType>(cfgMainKeys,cfgUserKeys));
 
 	console.addLine(lang.get("ToSwitchOffMusicPress") + " - \"" + configKeys.getString("ToggleMusic") + "\"");
@@ -476,13 +486,13 @@
 		catch(const std::exception &ex) {
 		    char szBuf[8096]="";
 		    snprintf(szBuf,8096,"In [%s::%s %d]\nError loading scenario [%s]:\n%s\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,scenario.c_str(),ex.what());
 		    SystemFlags::OutputDebug(SystemFlags::debugError,szBuf);
 		    if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"%s",szBuf);
 
-		    showMessageBox( szBuf, "Error", false);
+		    showMessageBox( szBuf, Lang::getInstance().get("ErrorDetected"), false);
 		    //throw megaglest_runtime_error(szBuf);
 		}
 	}
 	resultsScenarios.clear();
 	for(int i = 0; i < scenarioFiles.size(); ++i) {
 		resultsScenarios.push_back(formatString(scenarioFiles[i]));
@@ -643,18 +653,21 @@
 	playerstatusItems.push_back(lang.get("PlayerStatusBeRightBack"));
 	playerstatusItems.push_back(lang.get("PlayerStatusReady"));
 	listBoxPlayerStatus.setItems(playerstatusItems);
 
 	if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 
+	labelPlayer.setText(lang.get("Player"));
 	labelControl.setText(lang.get("Control"));
 
     labelFaction.setText(lang.get("Faction"));
 
 	labelTeam.setText(lang.get("Team"));
 
+	labelPlayer.setFont(CoreData::getInstance().getMenuFontBig());
+    	labelPlayer.setFont3D(CoreData::getInstance().getMenuFontBig3D());
     labelControl.setFont(CoreData::getInstance().getMenuFontBig());
     labelControl.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	labelFaction.setFont(CoreData::getInstance().getMenuFontBig());
 	labelFaction.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	labelTeam.setFont(CoreData::getInstance().getMenuFontBig());
 	labelTeam.setFont3D(CoreData::getInstance().getMenuFontBig3D());
@@ -677,13 +690,13 @@
 		controlItems.push_back(lang.get("NetworkCpu"));
 	    controlItems.push_back(lang.get("NetworkCpuUltra"));
 	    controlItems.push_back(lang.get("NetworkCpuMega"));
 	}
 
 	for(int i=0; i < GameConstants::maxPlayers; ++i) {
-		labelPlayers[i].setText(lang.get("Player") + " " + intToStr(i));
+		labelPlayers[i].setText("|#"+intToStr(i)+"|");
 		listBoxControls[i].setItems(controlItems);
     }
 	if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 
 	labelScenario.setText(lang.get("Scenario"));
 
@@ -1363,13 +1376,13 @@
 	    	for(unsigned int i = 0; i < languageList.size(); ++i) {
 				char szMsg[8096]="";
 	            if(lang.hasString("CancelDownloadsMsg",languageList[i]) == true) {
 	            	snprintf(szMsg,8096,lang.get("CancelDownloadsMsg",languageList[i]).c_str(),getHumanPlayerName().c_str());
 	            }
 	            else {
-	            	snprintf(szMsg,8096,"Player: %s cancelled all file downloads.",getHumanPlayerName().c_str());
+			    snprintf(szMsg,8096,"Player: %s has cancelled all files downloads.",getHumanPlayerName().c_str());
 	            }
 	            clientInterface->sendTextMessage(szMsg,-1, lang.isLanguageLocal(languageList[i]),languageList[i]);
 	    	}
         }
 	}
 	else if(buttonDisconnect.mouseClick(x,y)){
@@ -1798,13 +1811,13 @@
 	catch(const std::exception &ex) {
 		char szBuf[8096]="";
 		snprintf(szBuf,8096,"In [%s::%s %d]\nError detected:\n%s\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,ex.what());
 		SystemFlags::OutputDebug(SystemFlags::debugError,szBuf);
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"%s",szBuf);
 
-		showMessageBox( szBuf, "Error", false);
+		showMessageBox( szBuf, Lang::getInstance().get("ErrorDetected"), false);
 	}
 
 	if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 }
 
 void MenuStateConnectedGame::PlayNow(bool saveGame) {
@@ -2316,14 +2329,14 @@
 
 void MenuStateConnectedGame::render() {
 	try {
 		Renderer &renderer= Renderer::getInstance();
 
 		if(isHeadlessAdmin() == true) {
-			listBoxPlayerStatus.setX(buttonRestoreLastSettings.getX() +
-									 buttonRestoreLastSettings.getW() + 20);
+			listBoxPlayerStatus.setX(10);
+			listBoxPlayerStatus.setY(615);
 		}
 		else {
 			listBoxPlayerStatus.setX(nonAdminPlayerStatusX);
 		}
 
 		if(mainMessageBox.getEnabled()) {
@@ -2515,23 +2528,28 @@
 		renderer.renderLabel(&labelMap);
 		renderer.renderLabel(&labelFogOfWar);
 		renderer.renderLabel(&labelAllowObservers);
 		renderer.renderLabel(&labelFallbackCpuMultiplier);
 		renderer.renderLabel(&labelTileset);
 		renderer.renderLabel(&labelTechTree);
+		renderer.renderLabel(&labelPlayer);
 		renderer.renderLabel(&labelControl);
 		renderer.renderLabel(&labelFaction);
 		renderer.renderLabel(&labelTeam);
 		renderer.renderLabel(&labelMapInfo);
 
 		renderer.renderListBox(&listBoxMap);
 		renderer.renderListBox(&listBoxFogOfWar);
 		renderer.renderCheckBox(&checkBoxAllowObservers);
 		renderer.renderListBox(&listBoxTileset);
 		renderer.renderListBox(&listBoxTechTree);
 
+		renderer.renderLine(&lineHorizontal1);
+		renderer.renderLine(&lineHorizontal2);
+		renderer.renderLine(&lineHorizontal3);
+
 		renderer.renderLabel(&labelEnableSwitchTeamMode);
 		renderer.renderLabel(&labelAISwitchTeamAcceptPercent);
 
 		renderer.renderCheckBox(&checkBoxEnableSwitchTeamMode);
 		renderer.renderListBox(&listBoxAISwitchTeamAcceptPercent);
 		renderer.renderListBox(&listBoxFallbackCpuMultiplier);
@@ -2558,13 +2576,13 @@
         //fileFTPProgressList["test3 asdasdad asd ada dasdadasdada"] = make_pair(1,"testc");
         // !!! END TEMP MV
 
         if(fileFTPProgressList.empty() == false) {
         	Lang &lang= Lang::getInstance();
         	renderer.renderButton(&buttonCancelDownloads);
-        	int xLocation = buttonCancelDownloads.getX();
+        	int xLocation = 1000-310;
             int yLocation = buttonCancelDownloads.getY() - 20;
             for(std::map<string,pair<int,string> >::iterator iterMap = fileFTPProgressList.begin();
                 iterMap != fileFTPProgressList.end(); ++iterMap) {
                 string progressLabelPrefix = lang.get("ModDownloading") + " " + iterMap->first + " ";
                 //if(SystemFlags::VERBOSE_MODE_ENABLED) printf("\nRendering file progress with the following prefix [%s]\n",progressLabelPrefix.c_str());
 
@@ -2853,58 +2871,58 @@
 
                     string labelSynch = lang.get("DataNotSynchedTitle");
 
                     if(mapCRC != 0 && mapCRC != gameSettings->getMapCRC() &&
                     		listBoxMap.getSelectedItemIndex() >= 0 &&
                     		listBoxMap.getSelectedItem() != Lang::getInstance().get("DataMissing","",true)) {
-                        labelSynch = labelSynch + " " + lang.get("Map");
+                        labelSynch = labelSynch + " " + lang.get("Map2");
 
                         if(updateDataSynchDetailText == true &&
-                            lastMapDataSynchError != lang.get("DataNotSynchedMap") + " " + listBoxMap.getSelectedItem()) {
-                            lastMapDataSynchError = lang.get("DataNotSynchedMap") + " " + listBoxMap.getSelectedItem();
+                            lastMapDataSynchError != lang.get("DataNotSynchedMap") + ": " + listBoxMap.getSelectedItem()) {
+                            lastMapDataSynchError = lang.get("DataNotSynchedMap") + ": " + listBoxMap.getSelectedItem();
 
             		    	Lang &lang= Lang::getInstance();
             		    	const vector<string> languageList = clientInterface->getGameSettings()->getUniqueNetworkPlayerLanguages();
             		    	for(unsigned int i = 0; i < languageList.size(); ++i) {
-            		    		string msg = lang.get("DataNotSynchedMap",languageList[i]) + " " + listBoxMap.getSelectedItem();
+            		    		string msg = lang.get("DataNotSynchedMap",languageList[i]) + ": " + listBoxMap.getSelectedItem();
             		    		bool localEcho = lang.isLanguageLocal(languageList[i]);
             		    		clientInterface->sendTextMessage(msg,-1,localEcho,languageList[i]);
             		    	}
                         }
                     }
 
                     if(tilesetCRC != 0 && tilesetCRC != gameSettings->getTilesetCRC() &&
                     		listBoxTileset.getSelectedItemIndex() >= 0 &&
                     		listBoxTileset.getSelectedItem() != Lang::getInstance().get("DataMissing","",true)) {
-                        labelSynch = labelSynch + " " + lang.get("Tileset");
+                        labelSynch = labelSynch + " " + lang.get("Tileset2");
                         if(updateDataSynchDetailText == true &&
-                            lastTileDataSynchError != lang.get("DataNotSynchedTileset") + " " + listBoxTileset.getSelectedItem()) {
-                            lastTileDataSynchError = lang.get("DataNotSynchedTileset") + " " + listBoxTileset.getSelectedItem();
+                            lastTileDataSynchError != lang.get("DataNotSynchedTileset") + ": " + listBoxTileset.getSelectedItem()) {
+                            lastTileDataSynchError = lang.get("DataNotSynchedTileset") + ": " + listBoxTileset.getSelectedItem();
 
             		    	Lang &lang= Lang::getInstance();
             		    	const vector<string> languageList = clientInterface->getGameSettings()->getUniqueNetworkPlayerLanguages();
             		    	for(unsigned int i = 0; i < languageList.size(); ++i) {
-            		    		string msg = lang.get("DataNotSynchedTileset",languageList[i]) + " " + listBoxTileset.getSelectedItem();
+            		    		string msg = lang.get("DataNotSynchedTileset",languageList[i]) + ": " + listBoxTileset.getSelectedItem();
             		    		bool localEcho = lang.isLanguageLocal(languageList[i]);
             		    		clientInterface->sendTextMessage(msg,-1,localEcho,languageList[i]);
             		    	}
                         }
                     }
 
                     if(techCRC != 0 && techCRC != gameSettings->getTechCRC() &&
                     		listBoxTechTree.getSelectedItemIndex() >= 0 &&
                     		listBoxTechTree.getSelectedItem() != Lang::getInstance().get("DataMissing","",true)) {
-                        labelSynch = labelSynch + " " + lang.get("TechTree");
+                        labelSynch = labelSynch + " " + lang.get("TechTree2");
                         if(updateDataSynchDetailText == true &&
-                        	lastTechtreeDataSynchError != lang.get("DataNotSynchedTechtree") + " " + listBoxTechTree.getSelectedItem()) {
-                        	lastTechtreeDataSynchError = lang.get("DataNotSynchedTechtree") + " " + listBoxTechTree.getSelectedItem();
+                        	lastTechtreeDataSynchError != lang.get("DataNotSynchedTechtree") + ": " + listBoxTechTree.getSelectedItem()) {
+                        	lastTechtreeDataSynchError = lang.get("DataNotSynchedTechtree") + ": " + listBoxTechTree.getSelectedItem();
 
             		    	Lang &lang= Lang::getInstance();
             		    	const vector<string> languageList = clientInterface->getGameSettings()->getUniqueNetworkPlayerLanguages();
             		    	for(unsigned int i = 0; i < languageList.size(); ++i) {
-            		    		string msg = lang.get("DataNotSynchedTechtree",languageList[i]) + " " + listBoxTechTree.getSelectedItem();
+            		    		string msg = lang.get("DataNotSynchedTechtree",languageList[i]) + ": " + listBoxTechTree.getSelectedItem();
             		    		bool localEcho = lang.isLanguageLocal(languageList[i]);
             		    		clientInterface->sendTextMessage(msg,-1,localEcho,languageList[i]);
             		    	}
 
             		    	const int MAX_CHAT_TEXT_LINE_LENGTH = 110;
             		    	//const vector<string> languageList = clientInterface->getGameSettings()->getUniqueNetworkPlayerLanguages();
@@ -3335,13 +3353,14 @@
 		}
 		catch(const runtime_error &ex) {
 			char szBuf[8096]="";
 			snprintf(szBuf,8096,"In [%s::%s %d]\nError detected:\n%s\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,ex.what());
 			SystemFlags::OutputDebug(SystemFlags::debugError,"In [%s::%s Line: %d] Error [%s]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,ex.what());
 			if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line %d] %s\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,szBuf);
-			showMessageBox( szBuf, "Error", false);
+
+			showMessageBox( szBuf, Lang::getInstance().get("ErrorDetected"), false);
 		}
 
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugPerformance).enabled && chrono.getMillis() > 0) SystemFlags::OutputDebug(SystemFlags::debugPerformance,"In [%s::%s Line: %d] took msecs: %lld\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,chrono.getMillis());
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugPerformance).enabled && chrono.getMillis() > 0) chrono.start();
 	}
 }
@@ -3471,13 +3490,14 @@
     }
 	catch(const std::exception &ex) {
 		char szBuf[8096]="";
 		snprintf(szBuf,8096,"In [%s::%s %d]\nError detected:\n%s\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,ex.what());
 		SystemFlags::OutputDebug(SystemFlags::debugError,"In [%s::%s Line: %d] Error [%s]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,ex.what());
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line %d] %s\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,szBuf);
-		showMessageBox( szBuf, "Error", false);
+
+		showMessageBox( szBuf, Lang::getInstance().get("ErrorDetected"), false);
 	}
 
     return hasNetworkSlot;
 }
 
 void MenuStateConnectedGame::keyDown(SDL_KeyboardEvent key) {
@@ -3682,13 +3702,13 @@
 		}
 	}
 	catch(exception &e){
 		SystemFlags::OutputDebug(SystemFlags::debugError,"In [%s::%s Line: %d] Error [%s]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,e.what());
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d] error [%s]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,e.what());
 
-		showMessageBox( "Error loading map file: "+file+'\n'+e.what(), "Error", false);
+		showMessageBox( "Error loading map file: "+file+'\n'+e.what(), Lang::getInstance().get("ErrorDetected"), false);
 	}
 
 	return mapLoaded;
 }
 
 void MenuStateConnectedGame::showMessageBox(const string &text, const string &header, bool toggle){
@@ -3783,13 +3803,13 @@
             if(iterFind != fileFTPProgressList.end()) {
             	lastProgress = iterFind->second;
             	fileFTPProgressList[iterFind->first] = pair<int,string>(fileProgress,stats->currentFilename);
             }
             safeMutexFTPProgress.ReleaseLock();
 
-            if(itemName != "" && (lastProgress.first / 25) < (fileProgress / 25)) {
+            if(itemName != "" && (lastProgress.first / 20) < (fileProgress / 20)) {
 		        NetworkManager &networkManager= NetworkManager::getInstance();
 		        ClientInterface* clientInterface= networkManager.getClientInterface();
 
 		    	Lang &lang= Lang::getInstance();
 		    	const vector<string> languageList = clientInterface->getGameSettings()->getUniqueNetworkPlayerLanguages();
 		    	for(unsigned int i = 0; i < languageList.size(); ++i) {
Index: source/glest_game/menu/menu_state_connected_game.h
===================================================================
--- source/glest_game/menu/menu_state_connected_game.h	(wersja 4583)
+++ source/glest_game/menu/menu_state_connected_game.h	(kopia robocza)
@@ -49,12 +49,13 @@
 // 	class MenuStateConnectedGame
 // ===============================
 
 class MenuStateConnectedGame: public MenuState, public FTPClientCallbackInterface, public SimpleTaskCallbackInterface {
 private:
 	GraphicButton buttonDisconnect;
+	GraphicLabel labelPlayer;
 	GraphicLabel labelControl;
 	GraphicLabel labelRMultiplier;
 	GraphicLabel labelFaction;
 	GraphicLabel labelTeam;
 	GraphicLabel labelMap;
 	GraphicLabel labelFogOfWar;
@@ -75,12 +76,17 @@
 	GraphicListBox listBoxAdvanced;
 
 	GraphicListBox listBoxMap;
 	GraphicListBox listBoxFogOfWar;
 	GraphicListBox listBoxTechTree;
 	GraphicListBox listBoxTileset;
+
+	GraphicLine lineHorizontal1;
+	GraphicLine lineHorizontal2;
+	GraphicLine lineHorizontal3;
+
 	GraphicLabel labelPlayers[GameConstants::maxPlayers];
 	GraphicLabel labelPlayerNames[GameConstants::maxPlayers];
 	GraphicListBox listBoxControls[GameConstants::maxPlayers];
 	GraphicListBox listBoxRMultiplier[GameConstants::maxPlayers];
 	GraphicListBox listBoxFactions[GameConstants::maxPlayers];
 	GraphicListBox listBoxTeams[GameConstants::maxPlayers];
Index: source/glest_game/menu/menu_state_custom_game.cpp
===================================================================
--- source/glest_game/menu/menu_state_custom_game.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_custom_game.cpp	(kopia robocza)
@@ -109,12 +109,13 @@
 
 	publishToMasterserverThread = NULL;
 	Lang &lang= Lang::getInstance();
 	NetworkManager &networkManager= NetworkManager::getInstance();
     Config &config = Config::getInstance();
     defaultPlayerName = config.getString("NetPlayerName",Socket::getHostName().c_str());
+    defaultPlayerGameName = defaultPlayerName.substr(0,12);
     enableFactionTexturePreview = config.getBool("FactionPreview","true");
     enableMapPreview = config.getBool("MapPreview","true");
 
     showFullConsole=false;
 
 	enableScenarioTexturePreview = Config::getInstance().getBool("EnableScenarioTexturePreview","true");
@@ -161,22 +162,22 @@
 	lastMasterserverPublishing 	= 0;
 	lastNetworkPing				= 0;
 	soundConnectionCount=0;
 
 	//create
 	buttonReturn.registerGraphicComponent(containerName,"buttonReturn");
-	buttonReturn.init(240, 180, 125);
+	buttonReturn.init(165, 180, 135);
 
 	buttonClearBlockedPlayers.registerGraphicComponent(containerName,"buttonClearBlockedPlayers");
-	buttonClearBlockedPlayers.init(310, 620, 140);
+	buttonClearBlockedPlayers.init(300, 615, 218);
 
 	buttonRestoreLastSettings.registerGraphicComponent(containerName,"buttonRestoreLastSettings");
-	buttonRestoreLastSettings.init(250+130, 180, 220);
+	buttonRestoreLastSettings.init(165+135+15, 180, 275);
 
 	buttonPlayNow.registerGraphicComponent(containerName,"buttonPlayNow");
-	buttonPlayNow.init(250+130+235, 180, 125);
+	buttonPlayNow.init(165+135+15+275+15, 180, 175);
 
 	techTree.reset(new TechTree(config.getPathListForType(ptTechs)));
 
 	int labelOffset=23;
 	int setupPos=590;
 	int mapHeadPos=330;
@@ -217,116 +218,119 @@
 		labelLocalGameVersion.setText(glestVersionString + " [" + getCompileDateTime() + ", " + getSVNRevisionString() + "]");
 	}
 
 	xoffset=70;
 	// MapFilter
 	labelMapFilter.registerGraphicComponent(containerName,"labelMapFilter");
-	labelMapFilter.init(xoffset+310, mapHeadPos);
-	labelMapFilter.setText(lang.get("MapFilter")+":");
+	labelMapFilter.init(xoffset+330, mapHeadPos);
+	labelMapFilter.setText(lang.get("MapFilter"));
 
 	listBoxMapFilter.registerGraphicComponent(containerName,"listBoxMapFilter");
-	listBoxMapFilter.init(xoffset+310, mapPos, 80);
+	listBoxMapFilter.init(xoffset+330, mapPos, 70);
 	listBoxMapFilter.pushBackItem("-");
 	for(int i=1; i<GameConstants::maxPlayers+1; ++i){
 		listBoxMapFilter.pushBackItem(intToStr(i));
 	}
 	listBoxMapFilter.setSelectedItemIndex(0);
 
 	// Map
 	labelMap.registerGraphicComponent(containerName,"labelMap");
-	labelMap.init(xoffset+100, mapHeadPos);
-	labelMap.setText(lang.get("Map")+":");
+	labelMap.init(xoffset+95, mapHeadPos);
+	labelMap.setText(lang.get("Map"));
 
 	//map listBox
+	lineHorizontal1.init(xoffset+95+25, mapPos,225-50,2);
 	listBoxMap.registerGraphicComponent(containerName,"listBoxMap");
-	listBoxMap.init(xoffset+100, mapPos, 200);
+	listBoxMap.init(xoffset+95, mapPos, 225);
 	// put them all in a set, to weed out duplicates (gbm & mgm with same name)
 	// will also ensure they are alphabetically listed (rather than how the OS provides them)
 	int initialMapSelection = setupMapList("");
     listBoxMap.setItems(formattedPlayerSortedMaps[0]);
     listBoxMap.setSelectedItemIndex(initialMapSelection);
 
     labelMapInfo.registerGraphicComponent(containerName,"labelMapInfo");
-	labelMapInfo.init(xoffset+100, mapPos-labelOffset-10, 200, 40);
+	labelMapInfo.init(xoffset+95+10, mapPos-labelOffset-15, 225-10, 40);
 
     labelTileset.registerGraphicComponent(containerName,"labelTileset");
-	labelTileset.init(xoffset+460, mapHeadPos);
+	labelTileset.init(xoffset+485, mapHeadPos);
 	labelTileset.setText(lang.get("Tileset"));
 
 	//tileset listBox
+	lineHorizontal2.init(xoffset+485+25, mapPos,200-50,2);
 	listBoxTileset.registerGraphicComponent(containerName,"listBoxTileset");
-	listBoxTileset.init(xoffset+460, mapPos, 150);
+	listBoxTileset.init(xoffset+485, mapPos, 200);
 
 	setupTilesetList("");
 	Chrono seed(true);
 	srand((unsigned int)seed.getCurTicks());
 
 	listBoxTileset.setSelectedItemIndex(rand() % listBoxTileset.getItemCount());
 
     //tech Tree listBox
     int initialTechSelection = setupTechList("", true);
 
+	lineHorizontal3.init(xoffset+695+25, mapPos,200-50,2);
 	listBoxTechTree.registerGraphicComponent(containerName,"listBoxTechTree");
-	listBoxTechTree.init(xoffset+650, mapPos, 150);
+	listBoxTechTree.init(xoffset+695, mapPos, 200);
     listBoxTechTree.setSelectedItemIndex(initialTechSelection);
 
     labelTechTree.registerGraphicComponent(containerName,"labelTechTree");
-	labelTechTree.init(xoffset+650, mapHeadPos);
+	labelTechTree.init(xoffset+695, mapHeadPos);
 	labelTechTree.setText(lang.get("TechTree"));
 
 	// fog - o - war
 	// @350 ? 300 ?
 	labelFogOfWar.registerGraphicComponent(containerName,"labelFogOfWar");
-	labelFogOfWar.init(xoffset+100, aHeadPos, 130);
+	labelFogOfWar.init(xoffset+95, aHeadPos, 150);
 	labelFogOfWar.setText(lang.get("FogOfWar"));
 
 	listBoxFogOfWar.registerGraphicComponent(containerName,"listBoxFogOfWar");
-	listBoxFogOfWar.init(xoffset+100, aPos, 130);
+	listBoxFogOfWar.init(xoffset+95, aPos, 150);
 	listBoxFogOfWar.pushBackItem(lang.get("Enabled"));
 	listBoxFogOfWar.pushBackItem(lang.get("Explored"));
 	listBoxFogOfWar.pushBackItem(lang.get("Disabled"));
 	listBoxFogOfWar.setSelectedItemIndex(0);
 
 	// Allow Observers
 	labelAllowObservers.registerGraphicComponent(containerName,"labelAllowObservers");
-	labelAllowObservers.init(xoffset+310, aHeadPos, 80);
+	labelAllowObservers.init(xoffset+330, aHeadPos, 80);
 	labelAllowObservers.setText(lang.get("AllowObservers"));
 
 	checkBoxAllowObservers.registerGraphicComponent(containerName,"checkBoxAllowObservers");
-	checkBoxAllowObservers.init(xoffset+310, aPos);
+	checkBoxAllowObservers.init(xoffset+330, aPos);
 	checkBoxAllowObservers.setValue(false);
 
 	vector<string> rMultiplier;
 	for(int i=0; i<45; ++i){
 		rMultiplier.push_back(floatToStr(0.5f+0.1f*i,1));
 	}
 
 	labelFallbackCpuMultiplier.registerGraphicComponent(containerName,"labelFallbackCpuMultiplier");
-	labelFallbackCpuMultiplier.init(xoffset+460, aHeadPos, 80);
+	labelFallbackCpuMultiplier.init(xoffset+485, aHeadPos, 70);
 	labelFallbackCpuMultiplier.setText(lang.get("FallbackCpuMultiplier"));
 
 	listBoxFallbackCpuMultiplier.registerGraphicComponent(containerName,"listBoxFallbackCpuMultiplier");
-	listBoxFallbackCpuMultiplier.init(xoffset+460, aPos, 80);
+	listBoxFallbackCpuMultiplier.init(xoffset+485, aPos, 70);
 	listBoxFallbackCpuMultiplier.setItems(rMultiplier);
 	listBoxFallbackCpuMultiplier.setSelectedItemIndex(5);
 
 	// Allow Switch Team Mode
 	labelEnableSwitchTeamMode.registerGraphicComponent(containerName,"labelEnableSwitchTeamMode");
-	labelEnableSwitchTeamMode.init(xoffset+310, aHeadPos+45, 80);
+	labelEnableSwitchTeamMode.init(xoffset+330, aHeadPos+45, 80);
 	labelEnableSwitchTeamMode.setText(lang.get("EnableSwitchTeamMode"));
 
 	checkBoxEnableSwitchTeamMode.registerGraphicComponent(containerName,"checkBoxEnableSwitchTeamMode");
-	checkBoxEnableSwitchTeamMode.init(xoffset+310, aPos+45);
+	checkBoxEnableSwitchTeamMode.init(xoffset+330, aPos+45);
 	checkBoxEnableSwitchTeamMode.setValue(false);
 
 	labelAISwitchTeamAcceptPercent.registerGraphicComponent(containerName,"labelAISwitchTeamAcceptPercent");
-	labelAISwitchTeamAcceptPercent.init(xoffset+460, aHeadPos+45, 80);
+	labelAISwitchTeamAcceptPercent.init(xoffset+485, aHeadPos+45, 70);
 	labelAISwitchTeamAcceptPercent.setText(lang.get("AISwitchTeamAcceptPercent"));
 
 	listBoxAISwitchTeamAcceptPercent.registerGraphicComponent(containerName,"listBoxAISwitchTeamAcceptPercent");
-	listBoxAISwitchTeamAcceptPercent.init(xoffset+460, aPos+45, 80);
+	listBoxAISwitchTeamAcceptPercent.init(xoffset+485, aPos+45, 70);
 	for(int i = 0; i <= 100; i = i + 10) {
 		listBoxAISwitchTeamAcceptPercent.pushBackItem(intToStr(i));
 	}
 	listBoxAISwitchTeamAcceptPercent.setSelectedItem(intToStr(30));
 
 	bool allowInProgressJoin = Config::getInstance().getBool("EnableJoinInProgressGame","false");
@@ -338,17 +342,17 @@
 	checkBoxAllowInGameJoinPlayer.registerGraphicComponent(containerName,"checkBoxAllowInGameJoinPlayer");
 	checkBoxAllowInGameJoinPlayer.init(xoffset+600, 670);
 	checkBoxAllowInGameJoinPlayer.setValue(false);
 	checkBoxAllowInGameJoinPlayer.setVisible(allowInProgressJoin);
 
 	labelAllowNativeLanguageTechtree.registerGraphicComponent(containerName,"labelAllowNativeLanguageTechtree");
-	labelAllowNativeLanguageTechtree.init(xoffset+650, mapHeadPos-50);
+	labelAllowNativeLanguageTechtree.init(xoffset+695, aHeadPos+45);
 	labelAllowNativeLanguageTechtree.setText(lang.get("AllowNativeLanguageTechtree"));
 
 	checkBoxAllowNativeLanguageTechtree.registerGraphicComponent(containerName,"checkBoxAllowNativeLanguageTechtree");
-	checkBoxAllowNativeLanguageTechtree.init(xoffset+650, mapHeadPos-70);
+	checkBoxAllowNativeLanguageTechtree.init(xoffset+695, aPos+45);
 	checkBoxAllowNativeLanguageTechtree.setValue(false);
 
 	// Advanced Options
 	labelAdvanced.registerGraphicComponent(containerName,"labelAdvanced");
 	labelAdvanced.init(810, 80, 80);
 	labelAdvanced.setText(lang.get("AdvancedGameOptions"));
@@ -359,41 +363,41 @@
 
 	// network things
 	// PublishServer
 	xoffset=90;
 
 	labelPublishServer.registerGraphicComponent(containerName,"labelPublishServer");
-	labelPublishServer.init(50, networkHeadPos, 100);
+	labelPublishServer.init(10, networkHeadPos, 100);
 	labelPublishServer.setText(lang.get("PublishServer"));
 
 	checkBoxPublishServer.registerGraphicComponent(containerName,"checkBoxPublishServer");
-	checkBoxPublishServer.init(50, networkPos);
+	checkBoxPublishServer.init(10, networkPos);
 
 	checkBoxPublishServer.setValue(false);
 	if((this->headlessServerMode == true ||
 		(openNetworkSlots == true && parentMenuState != pLanGame)) &&
 			GlobalStaticFlags::isFlagSet(gsft_lan_mode) == false) {
 		checkBoxPublishServer.setValue(true);
 	}
 
 	labelGameNameLabel.registerGraphicComponent(containerName,"labelGameNameLabel");
-	labelGameNameLabel.init(50, networkHeadPos-2*labelOffset-3,100);
-	labelGameNameLabel.setText(lang.get("MGGameTitle")+":");
+	labelGameNameLabel.init(10, networkHeadPos-2*labelOffset-7,100);
+	labelGameNameLabel.setText(lang.get("MGGameTitle"));
 
 	labelGameName.registerGraphicComponent(containerName,"labelGameName");
-	labelGameName.init(150, networkHeadPos-2*labelOffset,100);
+	labelGameName.init(115, networkHeadPos-2*labelOffset-7,100);
 	labelGameName.setFont(CoreData::getInstance().getMenuFontBig());
 	labelGameName.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	if(this->headlessServerMode == false) {
-		labelGameName.setText(defaultPlayerName+"'s game");
+		labelGameName.setText(defaultPlayerGameName+" 's game");
 	}
 	else {
-		labelGameName.setText("headless ("+defaultPlayerName+")");
+		labelGameName.setText("headless ("+defaultPlayerGameName+")");
 	}
-	labelGameName.setMaxEditWidth(20);
-	labelGameName.setMaxEditRenderWidth(160);
+	labelGameName.setMaxEditWidth(21);
+	labelGameName.setMaxEditRenderWidth(250);
 
 	// Network Pause for lagged clients
 	labelNetworkPauseGameForLaggedClients.registerGraphicComponent(containerName,"labelNetworkPauseGameForLaggedClients");
 	labelNetworkPauseGameForLaggedClients.init(labelAllowInGameJoinPlayer.getX(), networkHeadPos, 80);
 	labelNetworkPauseGameForLaggedClients.setText(lang.get("NetworkPauseGameForLaggedClients"));
 
@@ -401,66 +405,74 @@
 	checkBoxNetworkPauseGameForLaggedClients.init(checkBoxAllowInGameJoinPlayer.getX(), networkHeadPos);
 	checkBoxNetworkPauseGameForLaggedClients.setValue(true);
 
 	//list boxes
 	xoffset=100;
 	int rowHeight=27;
+	int lineLength=300-2-2;
+	
     for(int i=0; i<GameConstants::maxPlayers; ++i){
 		labelPlayerStatus[i].registerGraphicComponent(containerName,"labelPlayerStatus" + intToStr(i));
-		labelPlayerStatus[i].init(10, setupPos-30-i*rowHeight, 60);
+		labelPlayerStatus[i].init(2, setupPos-30-i*rowHeight, 60);
 
-    	labelPlayers[i].registerGraphicComponent(containerName,"labelPlayers" + intToStr(i));
-		labelPlayers[i].init(xoffset, setupPos-30-i*rowHeight);
+		labelPlayers[i].registerGraphicComponent(containerName,"labelPlayers" + intToStr(i));
+		labelPlayers[i].init(xoffset+18, (setupPos-30-i*rowHeight)+2);
 
 		labelPlayerNames[i].registerGraphicComponent(containerName,"labelPlayerNames" + intToStr(i));
-		labelPlayerNames[i].init(xoffset+70,setupPos-30-i*rowHeight);
+		labelPlayerNames[i].init(xoffset+50,setupPos-30-i*rowHeight);
 
 		listBoxControls[i].registerGraphicComponent(containerName,"listBoxControls" + intToStr(i));
-        listBoxControls[i].init(xoffset+210, setupPos-30-i*rowHeight);
+        listBoxControls[i].init(xoffset+200, setupPos-30-i*rowHeight, 150);
 
         buttonBlockPlayers[i].registerGraphicComponent(containerName,"buttonBlockPlayers" + intToStr(i));
         //buttonBlockPlayers[i].init(xoffset+355, setupPos-30-i*rowHeight, 70);
-        buttonBlockPlayers[i].init(xoffset+250, setupPos-30-i*rowHeight, 70);
+        buttonBlockPlayers[i].init(xoffset+225, setupPos-30-i*rowHeight, 100);
         buttonBlockPlayers[i].setText(lang.get("BlockPlayer"));
         buttonBlockPlayers[i].setFont(CoreData::getInstance().getDisplayFontSmall());
         buttonBlockPlayers[i].setFont3D(CoreData::getInstance().getDisplayFontSmall3D());
 
         listBoxRMultiplier[i].registerGraphicComponent(containerName,"listBoxRMultiplier" + intToStr(i));
-        listBoxRMultiplier[i].init(xoffset+350, setupPos-30-i*rowHeight,70);
+        listBoxRMultiplier[i].init(xoffset+352, setupPos-30-i*rowHeight,66);
 
         listBoxFactions[i].registerGraphicComponent(containerName,"listBoxFactions" + intToStr(i));
-        listBoxFactions[i].init(xoffset+430, setupPos-30-i*rowHeight, 150);
+        listBoxFactions[i].init(xoffset+420, setupPos-30-i*rowHeight, 163);
 
         listBoxTeams[i].registerGraphicComponent(containerName,"listBoxTeams" + intToStr(i));
-		listBoxTeams[i].init(xoffset+590, setupPos-30-i*rowHeight, 60);
+		listBoxTeams[i].init(xoffset+585, setupPos-30-i*rowHeight, 55);
 
 		labelNetStatus[i].registerGraphicComponent(containerName,"labelNetStatus" + intToStr(i));
-		labelNetStatus[i].init(xoffset+655, setupPos-30-i*rowHeight, 60);
+		labelNetStatus[i].init(xoffset+641, setupPos-30-i*rowHeight, 60);
 		labelNetStatus[i].setFont(CoreData::getInstance().getDisplayFontSmall());
 		labelNetStatus[i].setFont3D(CoreData::getInstance().getDisplayFontSmall3D());
     }
 
+	labelPlayer.registerGraphicComponent(containerName,"labelPlayer");
+	labelPlayer.init(xoffset+30, setupPos, GraphicListBox::defW, GraphicListBox::defH, true);
+	labelPlayer.setText(lang.get("Player"));
+
 	labelControl.registerGraphicComponent(containerName,"labelControl");
-	labelControl.init(xoffset+210, setupPos, GraphicListBox::defW, GraphicListBox::defH, true);
+	labelControl.init(xoffset+205, setupPos, GraphicListBox::defW, GraphicListBox::defH, true);
 	labelControl.setText(lang.get("Control"));
 
     labelRMultiplier.registerGraphicComponent(containerName,"labelRMultiplier");
 	labelRMultiplier.init(xoffset+350, setupPos, GraphicListBox::defW, GraphicListBox::defH, true);
 
 	labelFaction.registerGraphicComponent(containerName,"labelFaction");
-    labelFaction.init(xoffset+430, setupPos, GraphicListBox::defW, GraphicListBox::defH, true);
+    labelFaction.init(xoffset+432, setupPos, GraphicListBox::defW, GraphicListBox::defH, true);
     labelFaction.setText(lang.get("Faction"));
 
     labelTeam.registerGraphicComponent(containerName,"labelTeam");
-    labelTeam.init(xoffset+590, setupPos, 50, GraphicListBox::defH, true);
+    labelTeam.init(xoffset+585, setupPos, 50, GraphicListBox::defH, true);
     labelTeam.setText(lang.get("Team"));
 
-    labelControl.setFont(CoreData::getInstance().getMenuFontBig());
-    labelControl.setFont3D(CoreData::getInstance().getMenuFontBig3D());
-    labelRMultiplier.setFont(CoreData::getInstance().getMenuFontBig());
-    labelRMultiplier.setFont3D(CoreData::getInstance().getMenuFontBig3D());
+	labelPlayer.setFont(CoreData::getInstance().getMenuFontBig());
+	labelPlayer.setFont3D(CoreData::getInstance().getMenuFontBig3D());
+	labelControl.setFont(CoreData::getInstance().getMenuFontBig());
+	labelControl.setFont3D(CoreData::getInstance().getMenuFontBig3D());
+	labelRMultiplier.setFont(CoreData::getInstance().getMenuFontBig());
+	labelRMultiplier.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	labelFaction.setFont(CoreData::getInstance().getMenuFontBig());
 	labelFaction.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	labelTeam.setFont(CoreData::getInstance().getMenuFontBig());
 	labelTeam.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 
 	//texts
@@ -501,16 +513,18 @@
 		generalErrorToShow = "[#1] There are no factions for the tech tree [" + techTreeFiles[listBoxTechTree.getSelectedItemIndex()] + "]";
     }
 
 	for(int i=0; i < GameConstants::maxPlayers; ++i) {
 		labelPlayerStatus[i].setText("");
 
-		labelPlayers[i].setText(lang.get("Player")+" "+intToStr(i));
+		labelPlayers[i].setText("|#"+intToStr(i)+"|");
+		labelPlayers[i].setFont(CoreData::getInstance().getMenuFontBig());
+		labelPlayers[i].setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		labelPlayerNames[i].setText("*");
 		labelPlayerNames[i].setMaxEditWidth(16);
-		labelPlayerNames[i].setMaxEditRenderWidth(135);
+		labelPlayerNames[i].setMaxEditRenderWidth(145);
 
         listBoxTeams[i].setItems(teamItems);
 		listBoxTeams[i].setSelectedItemIndex(i);
 		lastSelectedTeamIndex[i] = listBoxTeams[i].getSelectedItemIndex();
 
 		listBoxControls[i].setItems(controlItems);
@@ -563,13 +577,13 @@
 	}
 	if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 
 	updateAllResourceMultiplier();
 
 	listBoxPlayerStatus.registerGraphicComponent(containerName,"listBoxPlayerStatus");
-	listBoxPlayerStatus.init(10, 600, 150);
+	listBoxPlayerStatus.init(10, 615, 150);
 	vector<string> playerStatuses;
 	playerStatuses.push_back(lang.get("PlayerStatusSetup"));
 	playerStatuses.push_back(lang.get("PlayerStatusBeRightBack"));
 	playerStatuses.push_back(lang.get("PlayerStatusReady"));
 	listBoxPlayerStatus.setItems(playerStatuses);
 	listBoxPlayerStatus.setSelectedItemIndex(2,true);
@@ -696,15 +710,15 @@
 	}
 	string serverPort=config.getString("PortServer", intToStr(GameConstants::serverPort).c_str());
 	string externalPort=config.getString("PortExternal", serverPort.c_str());
 
 	labelLocalIP.setText(lang.get("LanIP") + ipText + "  ( "+serverPort+" / "+externalPort+" )");
 
-	labelMap.setText(lang.get("Map")+":");
+	labelMap.setText(lang.get("Map"));
 
-	labelMapFilter.setText(lang.get("MapFilter")+":");
+	labelMapFilter.setText(lang.get("MapFilter"));
 
 	labelTileset.setText(lang.get("Tileset"));
 
 	labelTechTree.setText(lang.get("TechTree"));
 
 	labelAllowNativeLanguageTechtree.setText(lang.get("AllowNativeLanguageTechtree"));
@@ -731,39 +745,42 @@
 
 	// Advanced Options
 	labelAdvanced.setText(lang.get("AdvancedGameOptions"));
 
 	labelPublishServer.setText(lang.get("PublishServer"));
 
-	labelGameNameLabel.setText(lang.get("MGGameTitle")+":");
+	labelGameNameLabel.setText(lang.get("MGGameTitle"));
 
 	labelGameName.setFont(CoreData::getInstance().getMenuFontBig());
 	labelGameName.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	if(this->headlessServerMode == false) {
-		labelGameName.setText(defaultPlayerName+"'s game");
+		labelGameName.setText(defaultPlayerGameName+" 's game");
 	}
 	else {
-		labelGameName.setText("headless ("+defaultPlayerName+")");
+		labelGameName.setText("headless ("+defaultPlayerGameName+")");
 	}
 
 	labelNetworkPauseGameForLaggedClients.setText(lang.get("NetworkPauseGameForLaggedClients"));
 
     for(int i=0; i < GameConstants::maxPlayers; ++i) {
         buttonBlockPlayers[i].setText(lang.get("BlockPlayer"));
     }
 
+	labelPlayer.setText(lang.get("Player"));
 	labelControl.setText(lang.get("Control"));
 
-    labelFaction.setText(lang.get("Faction"));
+	labelFaction.setText(lang.get("Faction"));
 
-    labelTeam.setText(lang.get("Team"));
+	labelTeam.setText(lang.get("Team"));
 
-    labelControl.setFont(CoreData::getInstance().getMenuFontBig());
-    labelControl.setFont3D(CoreData::getInstance().getMenuFontBig3D());
-    labelRMultiplier.setFont(CoreData::getInstance().getMenuFontBig());
-    labelRMultiplier.setFont3D(CoreData::getInstance().getMenuFontBig3D());
+	labelPlayer.setFont(CoreData::getInstance().getMenuFontBig());
+    	labelPlayer.setFont3D(CoreData::getInstance().getMenuFontBig3D());
+	labelControl.setFont(CoreData::getInstance().getMenuFontBig());
+	labelControl.setFont3D(CoreData::getInstance().getMenuFontBig3D());
+	labelRMultiplier.setFont(CoreData::getInstance().getMenuFontBig());
+	labelRMultiplier.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	labelFaction.setFont(CoreData::getInstance().getMenuFontBig());
 	labelFaction.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	labelTeam.setFont(CoreData::getInstance().getMenuFontBig());
 	labelTeam.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 
 	//texts
@@ -787,13 +804,13 @@
 		controlItems.push_back(lang.get("NetworkCpu"));
 	    controlItems.push_back(lang.get("NetworkCpuUltra"));
 	    controlItems.push_back(lang.get("NetworkCpuMega"));
 	}
 
 	for(int i=0; i < GameConstants::maxPlayers; ++i) {
-		labelPlayers[i].setText(lang.get("Player")+" "+intToStr(i));
+		labelPlayers[i].setText("|#"+intToStr(i)+"|");
 
 		listBoxControls[i].setItems(controlItems);
     }
 
     labelFallbackCpuMultiplier.setText(lang.get("FallbackCpuMultiplier"));
 
@@ -1318,13 +1335,13 @@
 									for(unsigned int j = 0; j < languageList.size(); ++j) {
 										char szMsg[8096]="";
 										if(lang.hasString("BlockPlayerServerMsg",languageList[j]) == true) {
 											snprintf(szMsg,8096,lang.get("BlockPlayerServerMsg",languageList[j]).c_str(),serverInterface->getSlot(i)->getIpAddress().c_str());
 										}
 										else {
-											snprintf(szMsg,8096,"The server has temporarily blocked IP Address [%s] from this game.",serverInterface->getSlot(i)->getIpAddress().c_str());
+											snprintf(szMsg,8096,"The server has temporarily blocked IP Address [%s] for this game.",serverInterface->getSlot(i)->getIpAddress().c_str());
 										}
 
 										serverInterface->sendTextMessage(szMsg,-1, true,languageList[j]);
 									}
 									sleep(1);
 									serverInterface->getSlot(i)->close();
@@ -1915,13 +1932,12 @@
 					listBoxTeams[i].setVisible(true);
 					labelNetStatus[i].setVisible(true);
 		    	}
 
 				if( hasNetworkGameSettings() == true &&
 					listBoxControls[i].getSelectedItemIndex() != ctClosed) {
-
 					renderer.renderLabel(&labelPlayerStatus[i]);
 				}
 
 				if(crcPlayerTextureCache[i] != NULL) {
 					// Render the player # label the player's color
 					Vec3f playerColor = crcPlayerTextureCache[i]->getPixmap()->getPixel3f(0, 0);
@@ -1994,12 +2010,13 @@
 			renderer.renderLabel(&labelAllowInGameJoinPlayer);
 			renderer.renderCheckBox(&checkBoxAllowInGameJoinPlayer);
 
 			renderer.renderLabel(&labelTileset);
 			renderer.renderLabel(&labelMapFilter);
 			renderer.renderLabel(&labelTechTree);
+			renderer.renderLabel(&labelPlayer);
 			renderer.renderLabel(&labelControl);
 			//renderer.renderLabel(&labelRMultiplier);
 			renderer.renderLabel(&labelFaction);
 			renderer.renderLabel(&labelTeam);
 			renderer.renderLabel(&labelMapInfo);
 			renderer.renderLabel(&labelAdvanced);
@@ -2008,12 +2025,16 @@
 			renderer.renderListBox(&listBoxTileset);
 			renderer.renderListBox(&listBoxMapFilter);
 			renderer.renderListBox(&listBoxTechTree);
 			//renderer.renderListBox(&listBoxAdvanced);
 			renderer.renderCheckBox(&checkBoxAdvanced);
 
+			renderer.renderLine(&lineHorizontal1);
+			renderer.renderLine(&lineHorizontal2);
+			renderer.renderLine(&lineHorizontal3);
+
 			if(checkBoxPublishServer.getEditable())
 			{
 				renderer.renderCheckBox(&checkBoxPublishServer);
 				renderer.renderLabel(&labelPublishServer);
 				renderer.renderLabel(&labelGameName);
 				renderer.renderLabel(&labelGameNameLabel);
@@ -2181,16 +2202,15 @@
 		if(serverInitError == true) {
 			if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 
 			if(showGeneralError) {
 				if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 
-
 				showGeneralError=false;
 				mainMessageBoxState=1;
-				showMessageBox( generalErrorToShow, "Error", false);
+				showMessageBox( generalErrorToShow, Lang::getInstance().get("ErrorDetected"), false);
 			}
 
 			if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 
 			if(this->headlessServerMode == false) {
 				return;
@@ -2269,13 +2289,13 @@
 		}
 		else if(showGeneralError) {
 			if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 
 			showGeneralError=false;
 			mainMessageBoxState=1;
-			showMessageBox( generalErrorToShow, "Error", false);
+			showMessageBox( generalErrorToShow, Lang::getInstance().get("ErrorDetected"), false);
 		}
 
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugPerformance).enabled && chrono.getMillis() > 0) SystemFlags::OutputDebug(SystemFlags::debugPerformance,"In [%s::%s Line: %d] took msecs: %lld\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,chrono.getMillis());
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugPerformance).enabled && chrono.getMillis() > 0) chrono.start();
 
 		if(this->headlessServerMode == true && serverInterface->getGameSettingsUpdateCount() > lastMasterServerSettingsUpdateCount &&
@@ -2846,13 +2866,13 @@
 	//?status=waiting&system=linux&info=titus
 	publishToServerInfo["glestVersion"] = glestVersionString;
 	publishToServerInfo["platform"] = getPlatformNameString() + "-" + getSVNRevisionString();
     publishToServerInfo["binaryCompileDate"] = getCompileDateTime();
 
 	//game info:
-	publishToServerInfo["serverTitle"] = getHumanPlayerName() + "'s game";
+	publishToServerInfo["serverTitle"] = getHumanPlayerName() + " 's game";
 	publishToServerInfo["serverTitle"] = labelGameName.getText();
 	//ip is automatically set
 
 	//game setup info:
 
 	//publishToServerInfo["tech"] = listBoxTechTree.getSelectedItem();
@@ -3502,13 +3522,13 @@
 				}
 			}
 		}
 
 		if(masterserver_admin_found == false)
 		{
-			labelGameName.setText("Headless: "+defaultPlayerName);
+			labelGameName.setText("Headless: "+defaultPlayerGameName);
 		}
 	}
 
 	if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s] Line: %d\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 }
 
@@ -3543,13 +3563,13 @@
 		setupUIFromGameSettings(gameSettings);
 	}
     catch(const exception &ex) {
     	SystemFlags::OutputDebug(SystemFlags::debugError,"In [%s::%s Line: %d] Error [%s]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,ex.what());
     	if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d] ERROR = [%s]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,ex.what());
 
-    	showMessageBox( ex.what(), "Error", false);
+	showMessageBox( ex.what(), Lang::getInstance().get("ErrorDetected"), false);
 
     	setupUIFromGameSettings(originalGameSettings);
     	gameSettings = originalGameSettings;
     }
 
     if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s] Line: %d\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
@@ -4416,13 +4436,13 @@
 		char szBuf[8096]="";
 		snprintf(szBuf,8096,"In [%s::%s %d]\nError detected:\n%s\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,ex.what());
 		SystemFlags::OutputDebug(SystemFlags::debugError,szBuf);
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"%s",szBuf);
 
 		mainMessageBoxState=1;
-		showMessageBox( szBuf, "Error detected", false);
+		showMessageBox( szBuf, Lang::getInstance().get("ErrorDetected"), false);
 	}
 }
 
 void MenuStateCustomGame::SetupUIForScenarios() {
 	try {
 		if(checkBoxScenario.getValue() == true) {
Index: source/glest_game/menu/menu_state_custom_game.h
===================================================================
--- source/glest_game/menu/menu_state_custom_game.h	(wersja 4583)
+++ source/glest_game/menu/menu_state_custom_game.h	(kopia robocza)
@@ -42,12 +42,13 @@
 
 class MenuStateCustomGame : public MenuState, public SimpleTaskCallbackInterface {
 private:
 	GraphicButton buttonReturn;
 	GraphicButton buttonPlayNow;
 	GraphicButton buttonRestoreLastSettings;
+	GraphicLabel labelPlayer;
 	GraphicLabel labelControl;
 	GraphicLabel labelRMultiplier;
 	GraphicLabel labelFaction;
 	GraphicLabel labelTeam;
 	GraphicLabel labelMap;
 	GraphicLabel labelFogOfWar;
@@ -65,12 +66,16 @@
 	GraphicListBox listBoxFogOfWar;
 	GraphicListBox listBoxTechTree;
 	GraphicListBox listBoxTileset;
 	//GraphicListBox listBoxEnableObserverMode;
 	//GraphicListBox listBoxEnableServerControlledAI;
 
+	GraphicLine lineHorizontal1;
+	GraphicLine lineHorizontal2;
+	GraphicLine lineHorizontal3;
+
 	vector<string> mapFiles;
 	vector<string> playerSortedMaps[GameConstants::maxPlayers+1];
 	vector<string> formattedPlayerSortedMaps[GameConstants::maxPlayers+1];
 	vector<string> techTreeFiles;
 	vector<string> tilesetFiles;
 	vector<string> factionFiles;
@@ -175,12 +180,13 @@
 
 	string lastMapDataSynchError;
 	string lastTileDataSynchError;
 	string lastTechtreeDataSynchError;
 
 	string defaultPlayerName;
+	string defaultPlayerGameName;
 	int8 switchSetupRequestFlagType;
 
 	bool enableFactionTexturePreview;
 	bool enableMapPreview;
 
 	string currentTechName_factionPreview;
Index: source/glest_game/menu/menu_state_graphic_info.cpp
===================================================================
--- source/glest_game/menu/menu_state_graphic_info.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_graphic_info.cpp	(kopia robocza)
@@ -29,21 +29,21 @@
 	MenuState(program, mainMenu, "info")
 {
 	Lang &lang= Lang::getInstance();
 
 	containerName = "GraphicInfo";
 	buttonReturn.registerGraphicComponent(containerName,"buttonReturn");
-	buttonReturn.init(100, 540, 125);
+	buttonReturn.init(100, 570, 135);
 
 	buttonReturn.setText(lang.get("Return"));
 
 	labelInfo.registerGraphicComponent(containerName,"labelInfo");
 	labelInfo.init(0, 730);
 
 	labelMoreInfo.registerGraphicComponent(containerName,"labelMoreInfo");
-	labelMoreInfo.init(0, 520);
+	labelMoreInfo.init(0, 540);
 	labelMoreInfo.setFont(CoreData::getInstance().getDisplayFontSmall());
 	labelMoreInfo.setFont3D(CoreData::getInstance().getDisplayFontSmall3D());
 
 	labelInternalInfo.registerGraphicComponent(containerName,"labelInternalInfo");
 	labelInternalInfo.init(300, 730);
 	labelInternalInfo.setFont(CoreData::getInstance().getDisplayFontSmall());
Index: source/glest_game/menu/menu_state_join_game.cpp
===================================================================
--- source/glest_game/menu/menu_state_join_game.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_join_game.cpp	(kopia robocza)
@@ -86,67 +86,70 @@
     if(fileExists(serversSavedFile) == true) {
     	servers.load(serversSavedFile);
     }
 
 	//buttons
 	buttonReturn.registerGraphicComponent(containerName,"buttonReturn");
-	buttonReturn.init(300, 300, 125);
+	buttonReturn.init(342, 250, 135);
 	buttonReturn.setText(lang.get("Return"));
 
 	buttonConnect.registerGraphicComponent(containerName,"buttonConnect");
-	buttonConnect.init(450, 300, 125);
+	buttonConnect.init(280+265+20, 300, 155);
 	buttonConnect.setText(lang.get("Connect"));
 
 	buttonCreateGame.registerGraphicComponent(containerName,"buttonCreateGame");
-	buttonCreateGame.init(450, 250, 125);
+	buttonCreateGame.init(342+135+20, 250, 160);
 	buttonCreateGame.setText(lang.get("HostGame"));
 
 	buttonAutoFindServers.registerGraphicComponent(containerName,"buttonAutoFindServers");
-	buttonAutoFindServers.init(595, 300, 225);
+	buttonAutoFindServers.init(280, 300, 265);
 	buttonAutoFindServers.setText(lang.get("FindLANGames"));
 	buttonAutoFindServers.setEnabled(true);
 
+	lineHorizontal1.init(277,515,448,1);
 	//server type label
 	labelServerType.registerGraphicComponent(containerName,"labelServerType");
-	labelServerType.init(330, 490);
-	labelServerType.setText(lang.get("ServerType") + ":");
+	labelServerType.init(287, 490);
+	labelServerType.setText(lang.get("ServerType"));
 
 	//server type list box
 	listBoxServerType.registerGraphicComponent(containerName,"listBoxServerType");
-	listBoxServerType.init(465, 490);
+	listBoxServerType.init(490, 490, 225);
 	listBoxServerType.pushBackItem(lang.get("ServerTypeNew"));
 	listBoxServerType.pushBackItem(lang.get("ServerTypePrevious"));
 	listBoxServerType.pushBackItem(lang.get("ServerTypeFound"));
 
+	lineHorizontal2.init(277,485,448,1);
 	//server label
 	labelServer.registerGraphicComponent(containerName,"labelServer");
-	labelServer.init(330, 460);
+	labelServer.init(287, 460);
 	labelServer.setText(lang.get("Server") + ": ");
 
 	//server listbox
 	listBoxServers.registerGraphicComponent(containerName,"listBoxServers");
-	listBoxServers.init(465, 460);
+	listBoxServers.init(490, 460, 225);
 	for(int i= 0; i<servers.getPropertyCount(); ++i){
 		listBoxServers.pushBackItem(servers.getKey(i));
 	}
 
 	// found servers listbox
 	listBoxFoundServers.registerGraphicComponent(containerName,"listBoxFoundServers");
-	listBoxFoundServers.init(465, 460);
+	listBoxFoundServers.init(490, 460, 225);
 
 	//server ip
 	labelServerIp.registerGraphicComponent(containerName,"labelServerIp");
-	labelServerIp.init(465, 460);
+	labelServerIp.init(490, 460);
 
+	lineHorizontal3.init(277,455,448,1);
 	// server port
 	labelServerPortLabel.registerGraphicComponent(containerName,"labelServerPortLabel");
-	labelServerPortLabel.init(330,430);
+	labelServerPortLabel.init(287,430);
 	labelServerPortLabel.setText(lang.get("ServerPort"));
 
 	labelServerPort.registerGraphicComponent(containerName,"labelServerPort");
-	labelServerPort.init(465,430);
+	labelServerPort.init(490,430);
 
 	string host = labelServerIp.getText();
 	int portNumber = config.getInt("PortServer",intToStr(GameConstants::serverPort).c_str());
 	std::vector<std::string> hostPartsList;
 	Tokenize(host,hostPartsList,":");
 	if(hostPartsList.size() > 1) {
@@ -155,19 +158,22 @@
 		portNumber = strToInt(hostPartsList[1]);
 	}
 
 	string port = " ("+intToStr(portNumber)+")";
 	labelServerPort.setText(port);
 
+	lineHorizontal4.init(277,425,448,1);
 	labelStatus.registerGraphicComponent(containerName,"labelStatus");
-	labelStatus.init(330, 400);
+	labelStatus.init(287, 400);
 	labelStatus.setText("");
 
+	lineHorizontal5.init(277,395,448,1);
 	labelInfo.registerGraphicComponent(containerName,"labelInfo");
-	labelInfo.init(330, 370);
+	labelInfo.init(287, 370);
 	labelInfo.setText("");
+	lineHorizontal6.init(277,365,448,1);
 
 	connected= false;
 	playerIndex= -1;
 
 	//server ip
 	if(connect == true) 	{
@@ -214,13 +220,13 @@
 	console.resetFonts();
 
 	buttonReturn.setText(lang.get("Return"));
 	buttonConnect.setText(lang.get("Connect"));
 	buttonCreateGame.setText(lang.get("HostGame"));
 	buttonAutoFindServers.setText(lang.get("FindLANGames"));
-	labelServerType.setText(lang.get("ServerType") + ":");
+	labelServerType.setText(lang.get("ServerType"));
 
 	std::vector<string> listboxData;
 	listboxData.push_back(lang.get("ServerTypeNew"));
 	listboxData.push_back(lang.get("ServerTypePrevious"));
 	listboxData.push_back(lang.get("ServerTypeFound"));
 	listBoxServerType.setItems(listboxData);
@@ -458,12 +464,19 @@
 	renderer.renderButton(&buttonConnect);
 	renderer.renderButton(&buttonCreateGame);
 
 	renderer.renderButton(&buttonAutoFindServers);
 	renderer.renderListBox(&listBoxServerType);
 
+	renderer.renderLine(&lineHorizontal1);
+	renderer.renderLine(&lineHorizontal2);
+	renderer.renderLine(&lineHorizontal3);
+	renderer.renderLine(&lineHorizontal4);
+	renderer.renderLine(&lineHorizontal5);
+	renderer.renderLine(&lineHorizontal6);
+
 	if(listBoxServerType.getSelectedItemIndex() == newServerIndex) {
 		renderer.renderLabel(&labelServerIp);
 	}
 	else if(listBoxServerType.getSelectedItemIndex() == newPrevServerIndex) {
 		renderer.renderListBox(&listBoxServers);
 	}
Index: source/glest_game/menu/menu_state_join_game.h
===================================================================
--- source/glest_game/menu/menu_state_join_game.h	(wersja 4583)
+++ source/glest_game/menu/menu_state_join_game.h	(kopia robocza)
@@ -54,13 +54,19 @@
 	GraphicLabel labelInfo;
 	GraphicListBox listBoxServerType;
 	GraphicListBox listBoxServers;
 	GraphicListBox listBoxFoundServers;
 	GraphicLabel labelServerPort;
 	GraphicLabel labelServerPortLabel;
-
+	
+	GraphicLine lineHorizontal1;
+	GraphicLine lineHorizontal2;
+	GraphicLine lineHorizontal3;
+	GraphicLine lineHorizontal4;
+	GraphicLine lineHorizontal5;
+	GraphicLine lineHorizontal6;
 
 	bool connected;
 	int playerIndex;
 	Properties servers;
 
 	//Console console;
Index: source/glest_game/menu/menu_state_keysetup.cpp
===================================================================
--- source/glest_game/menu/menu_state_keysetup.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_keysetup.cpp	(kopia robocza)
@@ -45,67 +45,67 @@
 		this->parentUI = parentUI;
 		this->console.setOnlyChatMessagesInStoredLines(false);
 		hotkeyIndex = -1;
 		hotkeyChar = SDLK_UNKNOWN;
 
 		Lang &lang= Lang::getInstance();
-		int buttonRowPos=80;
+		int buttonRowPos=50;
 		if(this->parentUI==NULL){
-			int tabButtonWidth=200;
+			int tabButtonWidth=165;
 			int tabButtonHeight=30;
 
 			buttonAudioSection.registerGraphicComponent(containerName,"buttonAudioSection");
-			buttonAudioSection.init(0, 720,tabButtonWidth,tabButtonHeight);
-			buttonAudioSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-			buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+			buttonAudioSection.init(5, 714,tabButtonWidth,tabButtonHeight);
+			buttonAudioSection.setFont(CoreData::getInstance().getMenuFontBig());
+			buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 			buttonAudioSection.setText(lang.get("Audio"));
 			// Video Section
 			buttonVideoSection.registerGraphicComponent(containerName,"labelVideoSection");
-			buttonVideoSection.init(200, 720,tabButtonWidth,tabButtonHeight);
-			buttonVideoSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-			buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+			buttonVideoSection.init(174, 714,tabButtonWidth,tabButtonHeight);
+			buttonVideoSection.setFont(CoreData::getInstance().getMenuFontBig());
+			buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 			buttonVideoSection.setText(lang.get("Video"));
 			//currentLine-=lineOffset;
 			//MiscSection
 			buttonMiscSection.registerGraphicComponent(containerName,"labelMiscSection");
-			buttonMiscSection.init(400, 720,tabButtonWidth,tabButtonHeight);
-			buttonMiscSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-			buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+			buttonMiscSection.init(343, 714,tabButtonWidth,tabButtonHeight);
+			buttonMiscSection.setFont(CoreData::getInstance().getMenuFontBig());
+			buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 			buttonMiscSection.setText(lang.get("Misc"));
 			//NetworkSettings
 			buttonNetworkSettings.registerGraphicComponent(containerName,"labelNetworkSettingsSection");
-			buttonNetworkSettings.init(600, 720,tabButtonWidth,tabButtonHeight);
-			buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontVeryBig());
-			buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+			buttonNetworkSettings.init(512, 714,tabButtonWidth,tabButtonHeight);
+			buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontBig());
+			buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 			buttonNetworkSettings.setText(lang.get("Network"));
 
 			//KeyboardSetup
 			buttonKeyboardSetup.registerGraphicComponent(containerName,"buttonKeyboardSetup");
-			buttonKeyboardSetup.init(800, 700,tabButtonWidth,tabButtonHeight+20);
+			buttonKeyboardSetup.init(681, 700,tabButtonWidth+99+50,tabButtonHeight+15);
 			buttonKeyboardSetup.setFont(CoreData::getInstance().getMenuFontVeryBig());
 			buttonKeyboardSetup.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
 			buttonKeyboardSetup.setText(lang.get("Keyboardsetup"));
 		}
 		// header
 		labelTitle.registerGraphicComponent(containerName,"labelTitle");
-		labelTitle.init(360,670);
-		labelTitle.setFont(CoreData::getInstance().getMenuFontBig());
-		labelTitle.setFont3D(CoreData::getInstance().getMenuFontBig3D());
+		labelTitle.init(380,640);
+		labelTitle.setFont(CoreData::getInstance().getMenuFontVeryBig());
+		labelTitle.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
 		labelTitle.setText(lang.get("Keyboardsetup"));
 
 		labelTestTitle.registerGraphicComponent(containerName,"labelTestTitle");
-		labelTestTitle.init(50,170);
+		labelTestTitle.init(222,162);
 		labelTestTitle.setFont(CoreData::getInstance().getMenuFontBig());
 		labelTestTitle.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		labelTestTitle.setText(lang.get("KeyboardsetupTest"));
 
 		labelTestValue.registerGraphicComponent(containerName,"labelTestValue");
-		labelTestValue.init(50,140);
+		labelTestValue.init(222,135);
 		labelTestValue.setFont(CoreData::getInstance().getMenuFontBig());
 		labelTestValue.setFont3D(CoreData::getInstance().getMenuFontBig3D());
-		labelTestValue.setText("");
+		labelTestValue.setText(". . .");
 
 		// mainMassegeBox
 		mainMessageBox.registerGraphicComponent(containerName,"mainMessageBox");
 		mainMessageBox.init(lang.get("Ok"));
 		mainMessageBox.setEnabled(false);
 		mainMessageBoxState=0;
@@ -113,33 +113,66 @@
 		keyScrollBar.init(800,200,false,200,20);
 		keyScrollBar.setLength(400);
 		keyScrollBar.setElementCount(0);
 		keyScrollBar.setVisibleSize(keyButtonsToRender);
 		keyScrollBar.setVisibleStart(0);
 
-
 		// buttons
 		buttonOk.registerGraphicComponent(containerName,"buttonOk");
-		buttonOk.init(200, buttonRowPos, 100);
+		buttonOk.init(150, buttonRowPos, 135);
 		buttonOk.setText(lang.get("Save"));
 
 		buttonDefaults.registerGraphicComponent(containerName,"buttonDefaults");
-		buttonDefaults.init(310, buttonRowPos, 100);
+		buttonDefaults.init(150+145+155, buttonRowPos, 135);
 		buttonDefaults.setText(lang.get("Defaults"));
 
 		buttonReturn.registerGraphicComponent(containerName,"buttonReturn");
-		buttonReturn.init(420, buttonRowPos, 100);
+		buttonReturn.init(150+145, buttonRowPos, 135);
 		buttonReturn.setText(lang.get("Return"));
 
 		keyButtonsLineHeight=30;
 		keyButtonsHeight=25;
 		keyButtonsWidth=400;
-		keyButtonsXBase=200;
-		keyButtonsYBase=200+400-keyButtonsLineHeight;
+		keyButtonsXBase=222;
+		keyButtonsYBase=210+400-keyButtonsLineHeight;
 		keyButtonsToRender=400/keyButtonsLineHeight;
-		int labelWidth=100;
+		int labelWidth=135;
+
+		//lines
+		int lineX=keyButtonsXBase+keyButtonsWidth+1;
+		int lineY=keyButtonsYBase+25;
+		int lineLength=labelWidth-5;
+		int lineSpa=30;
+
+		lineHorizontal1.init(lineX, lineY,lineLength,1);
+		lineY-=lineSpa;
+		lineHorizontal2.init(lineX, lineY,lineLength,1);
+		lineY-=lineSpa;
+		lineHorizontal3.init(lineX, lineY,lineLength,1);
+		lineY-=lineSpa;
+		lineHorizontal4.init(lineX, lineY,lineLength,1);
+		lineY-=lineSpa;
+		lineHorizontal5.init(lineX, lineY,lineLength,1);
+		lineY-=lineSpa;
+		lineHorizontal6.init(lineX, lineY,lineLength,1);
+		lineY-=lineSpa;
+		lineHorizontal7.init(lineX, lineY,lineLength,1);
+		lineY-=lineSpa;
+		lineHorizontal8.init(lineX, lineY,lineLength,1);
+		lineY-=lineSpa;
+		lineHorizontal9.init(lineX, lineY,lineLength,1);
+		lineY-=lineSpa;
+		lineHorizontal10.init(lineX, lineY,lineLength,1);
+		lineY-=lineSpa;
+		lineHorizontal11.init(lineX, lineY,lineLength,1);
+		lineY-=lineSpa;
+		lineHorizontal12.init(lineX, lineY,lineLength,1);
+		lineY-=lineSpa;
+		lineHorizontal13.init(lineX, lineY,lineLength,1);
+		lineY-=lineSpa;
+		lineHorizontal14.init(lineX, lineY,lineLength,1);
 
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",__FILE__,__FUNCTION__,__LINE__);
 
 		Config &configKeys = Config::getInstance(std::pair<ConfigType,ConfigType>(cfgMainKeys,cfgUserKeys));
 		mergedProperties=configKeys.getMergedProperties();
 		masterProperties=configKeys.getMasterProperties();
@@ -174,33 +207,35 @@
 
 			GraphicButton *button=new GraphicButton();
 			button->init(keyButtonsXBase, keyButtonsYBase, keyButtonsWidth,keyButtonsHeight);
 			button->setText(mergedProperties[i].first);
 			keyButtons.push_back(button);
 			GraphicLabel *label=new GraphicLabel();
-			label->init(keyButtonsXBase+keyButtonsWidth+10,keyButtonsYBase,labelWidth,20);
+			label->init(keyButtonsXBase+keyButtonsWidth+20,keyButtonsYBase,labelWidth,26);
 			label->setText(keyName);
+			label->setFont(CoreData::getInstance().getMenuFontBig());
+			label->setFont3D(CoreData::getInstance().getMenuFontBig3D());
 			labels.push_back(label);
 		}
 
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",__FILE__,__FUNCTION__,__LINE__);
 
-		keyScrollBar.init(keyButtonsXBase+keyButtonsWidth+labelWidth+20,200,false,200,20);
+		keyScrollBar.init(keyButtonsXBase+keyButtonsWidth+labelWidth,210,false,210,20);
 		keyScrollBar.setLength(400);
 		keyScrollBar.setElementCount(keyButtons.size());
 		keyScrollBar.setVisibleSize(keyButtonsToRender);
 		keyScrollBar.setVisibleStart(0);
 	}
 	catch(const std::exception &ex) {
 		char szBuf[8096]="";
 		snprintf(szBuf,8096,"In [%s::%s %d] Error detected:\n%s\n",__FILE__,__FUNCTION__,__LINE__,ex.what());
 		SystemFlags::OutputDebug(SystemFlags::debugError,szBuf);
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"%s",szBuf);
 
-        mainMessageBoxState=1;
-        showMessageBox( "Error: " + string(ex.what()), "Error detected", false);
+		mainMessageBoxState=1;
+		showMessageBox( "Error: " + string(ex.what()), Lang::getInstance().get("ErrorDetected"), false);
 	}
 }
 
 void MenuStateKeysetup::reloadUI() {
 	Lang &lang= Lang::getInstance();
 
@@ -212,13 +247,13 @@
 	labelTestTitle.setFont(CoreData::getInstance().getMenuFontBig());
 	labelTestTitle.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	labelTestTitle.setText(lang.get("KeyboardsetupTest"));
 
 	labelTestValue.setFont(CoreData::getInstance().getMenuFontBig());
 	labelTestValue.setFont3D(CoreData::getInstance().getMenuFontBig3D());
-	labelTestValue.setText("");
+	labelTestValue.setText(". . .");
 
 	// mainMassegeBox
 	mainMessageBox.init(lang.get("Ok"));
 
 	buttonOk.setText(lang.get("Save"));
 	buttonReturn.setText(lang.get("Return"));
@@ -407,12 +442,26 @@
 }
 
 void MenuStateKeysetup::render(){
 	Renderer &renderer= Renderer::getInstance();
 
 	//printf("MenuStateKeysetup::render A\n");
+		renderer.renderLine(&lineHorizontal1);
+		renderer.renderLine(&lineHorizontal2);
+		renderer.renderLine(&lineHorizontal3);
+		renderer.renderLine(&lineHorizontal4);
+		renderer.renderLine(&lineHorizontal5);
+		renderer.renderLine(&lineHorizontal6);
+		renderer.renderLine(&lineHorizontal7);
+		renderer.renderLine(&lineHorizontal8);
+		renderer.renderLine(&lineHorizontal9);
+		renderer.renderLine(&lineHorizontal10);
+		renderer.renderLine(&lineHorizontal11);
+		renderer.renderLine(&lineHorizontal12);
+		renderer.renderLine(&lineHorizontal13);
+		renderer.renderLine(&lineHorizontal14);
 
 	if(mainMessageBox.getEnabled()) {
 		//printf("MenuStateKeysetup::render B\n");
 		renderer.renderMessageBox(&mainMessageBox);
 	}
 	else {
@@ -441,13 +490,13 @@
 				}
 				renderer.renderLabel(labels[i]);
 			}
 		}
 		renderer.renderScrollBar(&keyScrollBar);
 	}
-
+	
 	renderer.renderConsole(&console,false,true);
 	if(program != NULL) program->renderProgramMsgBox();
 }
 
 void MenuStateKeysetup::update() {
 	//printf("MenuStateKeysetup::update A\n");
Index: source/glest_game/menu/menu_state_keysetup.h
===================================================================
--- source/glest_game/menu/menu_state_keysetup.h	(wersja 4583)
+++ source/glest_game/menu/menu_state_keysetup.h	(kopia robocza)
@@ -47,12 +47,27 @@
 	int keyButtonsYBase;
 	int keyButtonsXBase;
 	int keyButtonsLineHeight;
 	int	keyButtonsHeight;
 	int keyButtonsWidth;
 
+	GraphicLine lineHorizontal1;
+	GraphicLine lineHorizontal2;
+	GraphicLine lineHorizontal3;
+	GraphicLine lineHorizontal4;
+	GraphicLine lineHorizontal5;
+	GraphicLine lineHorizontal6;
+	GraphicLine lineHorizontal7;
+	GraphicLine lineHorizontal8;
+	GraphicLine lineHorizontal9;
+	GraphicLine lineHorizontal10;
+	GraphicLine lineHorizontal11;
+	GraphicLine lineHorizontal12;
+	GraphicLine lineHorizontal13;
+	GraphicLine lineHorizontal14;
+
 	GraphicMessageBox mainMessageBox;
 	int mainMessageBoxState;
 	vector<pair<string,string> > mergedProperties;
 	vector<pair<string,string> > masterProperties;
 	vector<pair<string,string> > userProperties;
 
Index: source/glest_game/menu/menu_state_load_game.cpp
===================================================================
--- source/glest_game/menu/menu_state_load_game.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_load_game.cpp	(kopia robocza)
@@ -32,15 +32,15 @@
 MenuStateLoadGame::MenuStateLoadGame(Program *program, MainMenu *mainMenu):
 	MenuState(program, mainMenu, "root")
 {
 	containerName = "LoadGame";
 	Lang &lang= Lang::getInstance();
 
-	int buttonWidth = 120;
+	int buttonWidth = 135;
 	int yPos=40;
-	int xPos=20;
+	int xPos=10;
 	int xSpacing=20;
 	int slotsToRender=20;
 	int slotWidth=200;
 
 	slotLinesYBase=650;
 	slotsLineHeight=30;
@@ -67,65 +67,65 @@
 
 	lines[0].init(0,slotLinesYBase+slotsLineHeight);
 	lines[1].init(0, slotLinesYBase-(slotsToRender-1)*slotsLineHeight-5);
 	//lines[1].setHorizontal(false);
 
 	headerLabel.registerGraphicComponent(containerName,"headerLabel");
-	headerLabel.init(400, 730);
+	headerLabel.init(400, 720);
 	headerLabel.setFont(CoreData::getInstance().getMenuFontBig());
 	headerLabel.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	headerLabel.setText(lang.get("LoadGameMenu"));
 
 	noSavedGamesLabel.registerGraphicComponent(containerName,"noSavedGamesLabel");
 	noSavedGamesLabel.init(20, 400);
 	noSavedGamesLabel.setFont(CoreData::getInstance().getMenuFontBig());
 	noSavedGamesLabel.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	noSavedGamesLabel.setText(lang.get("NoSavedGames"));
 
 	savedGamesLabel.registerGraphicComponent(containerName,"savedGamesLabel");
-	savedGamesLabel.init(120, slotLinesYBase+slotsLineHeight+10);
+	savedGamesLabel.init(175, slotLinesYBase+slotsLineHeight+12);
 	savedGamesLabel.setFont(CoreData::getInstance().getMenuFontBig());
 	savedGamesLabel.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	savedGamesLabel.setText(lang.get("SavedGames"));
 
 	infoHeaderLabel.registerGraphicComponent(containerName,"infoHeaderLabel");
-	infoHeaderLabel.init(650, slotLinesYBase+slotsLineHeight+10);
+	infoHeaderLabel.init(600, slotLinesYBase+slotsLineHeight+12);
 	infoHeaderLabel.setFont(CoreData::getInstance().getMenuFontBig());
 	infoHeaderLabel.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	infoHeaderLabel.setText(lang.get("SavegameInfo"));
 
 	infoTextLabel.registerGraphicComponent(containerName,"infoTextLabel");
-	infoTextLabel.init(550, 350);
+	infoTextLabel.init(510, 290);
 //	infoTextLabel.setFont(CoreData::getInstance().getMenuFontBig());
 //	infoTextLabel.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	//infoTextLabel.setText("Info block for the current slot, maybe screenshot above \ntest\ntest2");
 	infoTextLabel.setText("");
 
     abortButton.registerGraphicComponent(containerName,"abortButton");
     abortButton.init(xPos, yPos, buttonWidth);
 	abortButton.setText(lang.get("Abort"));
 	xPos+=buttonWidth+xSpacing;
     loadButton.registerGraphicComponent(containerName,"loadButton");
-    loadButton.init(xPos, yPos, buttonWidth);
+    loadButton.init(xPos, yPos, buttonWidth+45);
     loadButton.setText(lang.get("LoadGame"));
-	xPos+=buttonWidth+xSpacing;
+	xPos+=buttonWidth+45+xSpacing;
     deleteButton.registerGraphicComponent(containerName,"deleteButton");
     deleteButton.init(xPos, yPos, buttonWidth);
     deleteButton.setText(lang.get("Delete"));
 
-    slotsScrollBar.init(500-20,slotLinesYBase-slotsLineHeight*(slotsToRender-1),false,slotWidth,20);
+    slotsScrollBar.init(500-15,slotLinesYBase-slotsLineHeight*(slotsToRender-1),false,slotWidth,15);
     slotsScrollBar.setLength(slotsLineHeight*slotsToRender);
     slotsScrollBar.setElementCount(0);
     slotsScrollBar.setVisibleSize(slotsToRender);
     slotsScrollBar.setVisibleStart(0);
 
     listFiles();
     slotsScrollBar.setElementCount(filenames.size());
 
     mainMessageBox.registerGraphicComponent(containerName,"mainMessageBox");
-	mainMessageBox.init(lang.get("Ok"),450);
+	mainMessageBox.init(lang.get("Ok"));
 	mainMessageBox.setEnabled(false);
 
 	GraphicComponent::applyAllCustomProperties(containerName);
 }
 
 MenuStateLoadGame::~MenuStateLoadGame() {
@@ -151,13 +151,13 @@
 		slots.pop_back();
 		slotsGB.pop_back();
 	}
 }
 
 void MenuStateLoadGame::listFiles() {
-	int keyButtonsXBase = 20;
+	int keyButtonsXBase = 10;
 	int keyButtonsYBase = slotLinesYBase;
 	int keyButtonsWidth = 460;
 	int keyButtonsHeight = slotsLineHeight;
 
 	clearSlots();
 	// Save the file now
@@ -184,13 +184,13 @@
 	Lang &lang= Lang::getInstance();
 
 	abortButton.setText(lang.get("Abort"));
 	deleteButton.setText(lang.get("Delete"));
 	loadButton.setText(lang.get("LoadGame"));
 
-	mainMessageBox.init(lang.get("Ok"),450);
+	mainMessageBox.init(lang.get("Ok"));
 
 	GraphicComponent::reloadFontsForRegisterGraphicComponents(containerName);
 }
 
 void MenuStateLoadGame::mouseClick(int x, int y, MouseButton mouseButton){
 
@@ -201,13 +201,13 @@
 		soundRenderer.playFx(coreData.getClickSoundA());
 		int button= 0;
 		if(mainMessageBox.mouseClick(x, y, button)) {
 			mainMessageBox.setEnabled(false);
 
 			Lang &lang= Lang::getInstance();
-			mainMessageBox.init(lang.get("Ok"),450);
+			mainMessageBox.init(lang.get("Ok"));
 		}
 	}
     if(abortButton.mouseClick(x, y)) {
 		soundRenderer.playFx(coreData.getClickSoundA());
 		mainMenu->setState(new MenuStateRoot(program, mainMenu));
     }
@@ -406,13 +406,13 @@
 			}
 		}
 	}
 	renderer.renderScrollBar(&slotsScrollBar);
 
 	if(previewTexture != NULL) {
-		renderer.renderTextureQuad(550,slotLinesYBase-300+slotsLineHeight,400,300,previewTexture,1.0f);
+		renderer.renderTextureQuad(510,slotLinesYBase-365+slotsLineHeight,480,360,previewTexture,1.0f);
 	}
 
 	if(mainMessageBox.getEnabled()) {
 		renderer.renderMessageBox(&mainMessageBox);
 	}
 
Index: source/glest_game/menu/menu_state_masterserver.cpp
===================================================================
--- source/glest_game/menu/menu_state_masterserver.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_masterserver.cpp	(kopia robocza)
@@ -52,13 +52,13 @@
 	serverInfoString="empty";
 	if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 
 	Lang &lang= Lang::getInstance();
 
 	//Configure ConsolePosition
-	consoleIRC.setYPos(60);
+	consoleIRC.setYPos(50);
 	consoleIRC.setFont(CoreData::getInstance().getMenuFontNormal());
 	consoleIRC.setFont3D(CoreData::getInstance().getMenuFontNormal3D());
 	consoleIRC.setLineHeight(18);
 	consoleIRC.setOnlyChatMessagesInStoredLines(false);
 
 	serverLinesToRender=8;
@@ -69,21 +69,21 @@
 	userButtonsWidth=150;
 	userButtonsLineHeight=userButtonsHeight+2;
 	userButtonsYBase=serverLinesYBase-(serverLinesToRender)*serverLinesLineHeight-90;
 	userButtonsToRender=userButtonsYBase/userButtonsLineHeight;
 	userButtonsXBase=1000-userButtonsWidth;
 
-	userScrollBar.init(1000-20,0,false,200,20);
+	userScrollBar.init(1000-15,0,false,200,15);
 	userScrollBar.setLength(userButtonsYBase+userButtonsLineHeight);
 	userScrollBar.setElementCount(0);
 	userScrollBar.setVisibleSize(userButtonsToRender);
 	userScrollBar.setVisibleStart(0);
 
 	userButtonsXBase=1000-userButtonsWidth-userScrollBar.getW();
 
-	serverScrollBar.init(1000-20,serverLinesYBase-serverLinesLineHeight*(serverLinesToRender-1),false,200,20);
+	serverScrollBar.init(1000-15,serverLinesYBase-serverLinesLineHeight*(serverLinesToRender-1),false,200,15);
 	serverScrollBar.setLength(serverLinesLineHeight*serverLinesToRender);
 	serverScrollBar.setElementCount(0);
 	serverScrollBar.setVisibleSize(serverLinesToRender);
 	serverScrollBar.setVisibleStart(0);
 
 	lines[0].init(0, userButtonsYBase+userButtonsLineHeight+serverLinesLineHeight);
@@ -112,123 +112,124 @@
     versionInfoLabel.registerGraphicComponent(containerName,"versionInfoLabel");
     versionInfoLabel.init(10, 680);
     versionInfoLabel.setFont(CoreData::getInstance().getMenuFontBig());
     versionInfoLabel.setFont3D(CoreData::getInstance().getMenuFontBig3D());
     versionInfoLabel.setText("");
 
-	// header
-	labelTitle.registerGraphicComponent(containerName,"labelTitle");
-	labelTitle.init(330, serverLinesYBase+40);
-	labelTitle.setFont(CoreData::getInstance().getMenuFontBig());
-	labelTitle.setFont3D(CoreData::getInstance().getMenuFontBig3D());
-	labelTitle.setText(lang.get("AvailableServers"));
-
-	if(Config::getInstance().getString("Masterserver","") == "") {
-		labelTitle.setText("*** " + lang.get("AvailableServers"));
-	}
-
 	// bottom
 	int buttonPos=230;
 
 	// Titles for current games - START
 	int lineIndex = 0;
 	int lineOffset=25*lineIndex;
-	int i=7;
-	int startOffset=serverLinesYBase+23;
+	int i=2;
+	int startOffset=serverLinesYBase+32;
+	int CorrYSecLine=15;
 
 	//general info:
 	//i+=10;
 	glestVersionLabel.registerGraphicComponent(containerName,"glestVersionLabel");
-	glestVersionLabel.init(i,startOffset-lineOffset);
+	glestVersionLabel.init(i-1,startOffset-lineOffset-CorrYSecLine);
 	glestVersionLabel.setText(lang.get("MGVersion"));
 
-	i+=70;
+	i+=75;
 	platformLabel.registerGraphicComponent(containerName,"platformLabel");
 	platformLabel.init(i,startOffset-lineOffset);
 	platformLabel.setText(lang.get("MGPlatform"));
 
 //	i+=50;
 //	binaryCompileDateLabel.registerGraphicComponent(containerName,"binaryCompileDateLabel");
 //	binaryCompileDateLabel.init(i,startOffset-lineOffset);
 //	binaryCompileDateLabel.setText(lang.get("MGBuildDateTime"));
 
 	//game info:
-	i+=130;
+	i+=140;
 	serverTitleLabel.registerGraphicComponent(containerName,"serverTitleLabel");
-	serverTitleLabel.init(i,startOffset-lineOffset);
-	serverTitleLabel.setText(lang.get("MGGameTitle"));
+	serverTitleLabel.init(i,startOffset-lineOffset-CorrYSecLine);
+	serverTitleLabel.setText(lang.get("MGGameTitle2"));
 
-	i+=150;
+	i+=178;
 	countryLabel.registerGraphicComponent(containerName,"countryLabel");
-	countryLabel.init(i,startOffset-lineOffset);
+	countryLabel.init(i-8,startOffset-lineOffset);
 	countryLabel.setText(lang.get("MGGameCountry"));
 
-	i+=65;
+	i+=34;
 
 //	ipAddressLabel.registerGraphicComponent(containerName,"ipAddressLabel");
 //	ipAddressLabel.init(i,startOffset-lineOffset);
 //	ipAddressLabel.setText(lang.get("MGGameIP"));
 //	i+=100;
 
+	// header
+	labelTitle.registerGraphicComponent(containerName,"labelTitle");
+	labelTitle.init(i, serverLinesYBase+51);
+	labelTitle.setFont(CoreData::getInstance().getMenuFontBig());
+	labelTitle.setFont3D(CoreData::getInstance().getMenuFontBig3D());
+	labelTitle.setText(lang.get("AvailableServers"));
+	
+	if(Config::getInstance().getString("Masterserver","") == "") {
+		labelTitle.setText("*** " + lang.get("AvailableServers"));
+	}
+	
 	//game setup info:
 	techLabel.registerGraphicComponent(containerName,"techLabel");
-	techLabel.init(i,startOffset-lineOffset);
-	techLabel.setText(lang.get("TechTree"));
+	techLabel.init(i,startOffset-lineOffset-CorrYSecLine);
+	techLabel.setText(lang.get("TechTree2"));
 
-	i+=120;
+	i+=135;
 	mapLabel.registerGraphicComponent(containerName,"mapLabel");
 	mapLabel.init(i,startOffset-lineOffset);
-	mapLabel.setText(lang.get("Map"));
+	mapLabel.setText(lang.get("Map2"));
 
-	i+=120;
+	i+=162;
 //	tilesetLabel.registerGraphicComponent(containerName,"tilesetLabel");
 //	tilesetLabel.init(i,startOffset-lineOffset);
-//	tilesetLabel.setText(lang.get("Tileset"));
+//	tilesetLabel.setText(lang.get("Tileset2"));
 //	i+=100;
 
 	activeSlotsLabel.registerGraphicComponent(containerName,"activeSlotsLabel");
-	activeSlotsLabel.init(i,startOffset-lineOffset);
+	activeSlotsLabel.init(i,startOffset-lineOffset-CorrYSecLine);
 	activeSlotsLabel.setText(lang.get("MGGameSlots"));
 
-	i+=50;
-	externalConnectPort.registerGraphicComponent(containerName,"externalConnectPort");
-	externalConnectPort.init(i,startOffset-lineOffset);
-	externalConnectPort.setText(lang.get("Port"));
+	//i+=50;
+	//externalConnectPort.registerGraphicComponent(containerName,"externalConnectPort");
+	//externalConnectPort.init(i,startOffset-lineOffset);
+	//externalConnectPort.setText(lang.get("Port"));
 
-	i+=60;
+	i+=42;
 	statusLabel.registerGraphicComponent(containerName,"statusLabel");
-	statusLabel.init(i,startOffset-lineOffset);
+	statusLabel.init(i,startOffset-lineOffset+2);
 	statusLabel.setText(lang.get("MGGameStatus"));
 
-	i+=130;
+	i+=110;
 	selectButton.registerGraphicComponent(containerName,"selectButton");
-	selectButton.init(i, startOffset-lineOffset);
+	selectButton.init(i, startOffset-lineOffset-CorrYSecLine+5);
 	selectButton.setText(lang.get("MGJoinGameSlots"));
 
 	// Titles for current games - END
 
 	buttonReturn.registerGraphicComponent(containerName,"buttonReturn");
     buttonReturn.init(50, buttonPos, 150);
 
     buttonCreateGame.registerGraphicComponent(containerName,"buttonCreateGame");
-    buttonCreateGame.init(300, buttonPos, 150);
+    buttonCreateGame.init(50+220, buttonPos, 175);
 
     buttonRefresh.registerGraphicComponent(containerName,"buttonRefresh");
-    buttonRefresh.init(550, buttonPos, 150);
+    buttonRefresh.init(50+220+245, buttonPos, 175);
 
 	buttonRefresh.setText(lang.get("RefreshList"));
 	buttonReturn.setText(lang.get("Return"));
 	buttonCreateGame.setText(lang.get("HostGame"));
 	labelAutoRefresh.setText(lang.get("AutoRefreshRate"));
 
 	labelAutoRefresh.registerGraphicComponent(containerName,"labelAutoRefresh");
-	labelAutoRefresh.init(800,buttonPos+30);
+	labelAutoRefresh.init(50+220+245+245,buttonPos+25);
 
 	listBoxAutoRefresh.registerGraphicComponent(containerName,"listBoxAutoRefresh");
-	listBoxAutoRefresh.init(800,buttonPos);
-	listBoxAutoRefresh.pushBackItem(lang.get("Off"));
+	listBoxAutoRefresh.init(50+220+245+245,buttonPos,160);
+	listBoxAutoRefresh.pushBackItem(lang.get("Off2"));
 	listBoxAutoRefresh.pushBackItem("10 s");
 	listBoxAutoRefresh.pushBackItem("20 s");
 	listBoxAutoRefresh.pushBackItem("30 s");
 	listBoxAutoRefresh.setSelectedItemIndex(1);
 	autoRefreshTime=10*listBoxAutoRefresh.getSelectedItemIndex();
 
@@ -261,14 +262,14 @@
 
     currentIrcNick=ircname;
     consoleIRC.setStringToHighlight(currentIrcNick);
 
     lines[2].init(0,consoleIRC.getYPos()-10,userButtonsXBase,5);
     chatManager.init(&consoleIRC, -1, true, szIRCNick);
-    chatManager.setXPos(0);
-    chatManager.setYPos(consoleIRC.getYPos()-20);
+    chatManager.setXPos(5);
+    chatManager.setYPos(consoleIRC.getYPos()-25);
     chatManager.setFont(CoreData::getInstance().getMenuFontNormal());
     chatManager.setFont3D(CoreData::getInstance().getMenuFontNormal3D());
 
 	needUpdateFromServer = true;
 
 	static string mutexOwnerId = string(extractFileFromDirectoryPath(__FILE__).c_str()) + string("_") + intToStr(__LINE__);
@@ -305,41 +306,59 @@
     else {
     	ircArgs.push_back("");
     }
 
     MutexSafeWrapper safeMutexIRCPtr(&mutexIRCClient,string(extractFileFromDirectoryPath(__FILE__).c_str()) + "_" + intToStr(__LINE__));
 
-    if(SystemFlags::VERBOSE_MODE_ENABLED) printf("#1 IRCCLient Cache check\n");
+    if(SystemFlags::VERBOSE_MODE_ENABLED) printf("#0 IRCCLient Cache check\n");
     IRCThread * &ircThread = CacheManager::getCachedItem< IRCThread * >(GameConstants::ircClientCacheLookupKey);
 
     // Playername changed so restart the IRC Thread
     if(ircThread != NULL && netPlayerName != ircThread->getPlayerName()) {
+	if(SystemFlags::VERBOSE_MODE_ENABLED) printf("#1 IRCCLient Cache check\n");
     	if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
     	ircThread->leaveChannel();
     	ircThread->setCallbackObj(NULL);
     	ircThread->signalQuit();
         if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
         ircThread = NULL;
     }
 
+    if(ircThread != NULL && netPlayerName == ircThread->getPlayerName()) {
+	    if(SystemFlags::VERBOSE_MODE_ENABLED) printf("#2 IRCCLient Cache check\n");
+	    if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
+	    ircThread->leaveChannel();
+	    ircThread->setCallbackObj(NULL);
+	    ircThread->signalQuit();
+	    if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
+	    ircThread = NULL;
+	    
+	    static string mutexOwnerId = string(extractFileFromDirectoryPath(__FILE__).c_str()) + string("_") + intToStr(__LINE__);
+	    ircThread = new IRCThread(ircArgs,this);
+	    ircClient = ircThread;
+	    ircClient->setUniqueID(mutexOwnerId);
+	    ircClient->setPlayerName(netPlayerName);
+	    ircClient->start();
+    }
+
     if(ircThread == NULL) {
-    	if(SystemFlags::VERBOSE_MODE_ENABLED) printf("#2 IRCCLient Cache check\n");
+    	if(SystemFlags::VERBOSE_MODE_ENABLED) printf("#3 IRCCLient Cache check\n");
 
     	static string mutexOwnerId = string(extractFileFromDirectoryPath(__FILE__).c_str()) + string("_") + intToStr(__LINE__);
     	ircThread = new IRCThread(ircArgs,this);
     	ircClient = ircThread;
     	ircClient->setUniqueID(mutexOwnerId);
     	ircClient->setPlayerName(netPlayerName);
-		ircClient->start();
-    }
-    else {
-    	if(SystemFlags::VERBOSE_MODE_ENABLED) printf("#3 IRCCLient Cache check\n");
-    	ircClient = ircThread;
-    	ircClient->setCallbackObj(this);
-    	ircClient->joinChannel();
+	ircClient->start();
     }
+    //else {
+    //	if(SystemFlags::VERBOSE_MODE_ENABLED) printf("#3 IRCCLient Cache check\n");
+    //	ircClient = ircThread;
+    //	ircClient->setCallbackObj(this);
+    //	ircClient->joinChannel();
+    //}
 
     if(netPlayerName=="newbie"){
     	showMessageBox(lang.get("PlayerNameNotSetPrompt"),lang.get("PlayerNameNotSetTitle"),false);
     }
     //showMessageBox("Go back and set your name in the game options!\n\nAt the moment you are just called >>newbie<< !","Player name not set!",false);
 
@@ -370,19 +389,19 @@
 	}
 
 	glestVersionLabel.setText(lang.get("MGVersion"));
 
 	platformLabel.setText(lang.get("MGPlatform"));
 
-	serverTitleLabel.setText(lang.get("MGGameTitle"));
+	serverTitleLabel.setText(lang.get("MGGameTitle2"));
 
 	countryLabel.setText(lang.get("MGGameCountry"));
 
-	techLabel.setText(lang.get("TechTree"));
+	techLabel.setText(lang.get("TechTree2"));
 
-	mapLabel.setText(lang.get("Map"));
+	mapLabel.setText(lang.get("Map2"));
 
 	activeSlotsLabel.setText(lang.get("MGGameSlots"));
 
 	externalConnectPort.setText(lang.get("Port"));
 
 	statusLabel.setText(lang.get("MGGameStatus"));
@@ -565,13 +584,14 @@
 
 		soundRenderer.playFx(coreData.getClickSoundA());
 
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 		if (ircClient != NULL && ircClient->isConnected() == true
 					&& ircClient->getHasJoinedChannel() == true) {
-			ircClient->SendIRCCmdMessage(IRC_CHANNEL, "left the lobby");
+			ircClient->SendIRCCmdMessage(IRC_CHANNEL, " <<- / left the lobby /");
+			//this message should be visualy different than messages written by humans
 			sleep(30);
 		}
         cleanup();
 
         if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 
@@ -587,13 +607,13 @@
 		needUpdateFromServer = false;
 		safeMutex.ReleaseLock();
 
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 		if (ircClient != NULL && ircClient->isConnected() == true
 					&& ircClient->getHasJoinedChannel() == true) {
-			ircClient->SendIRCCmdMessage(IRC_CHANNEL, "tries to create a game");
+			ircClient->SendIRCCmdMessage(IRC_CHANNEL, " <<- / tries to create a game /");
 			sleep(30);
 		}
         cleanup();
         if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 
 		mainMenu->setState(new MenuStateCustomGame(program, mainMenu,true,pMasterServer));
@@ -621,13 +641,13 @@
 					safeMutex.ReleaseLock();
 					if(connected){
 						soundRenderer.playFx(coreData.getClickSoundB());
 
 						if (ircClient != NULL && ircClient->isConnected() == true
 									&& ircClient->getHasJoinedChannel() == true) {
-							ircClient->SendIRCCmdMessage(IRC_CHANNEL, "connecting to '"+serverLines[i]->getMasterServerInfo()->getServerTitle()+"'");
+							ircClient->SendIRCCmdMessage(IRC_CHANNEL, " <<- / connecting to '"+serverLines[i]->getMasterServerInfo()->getServerTitle()+"' /");
 							sleep(30);
 						}
 						cleanup();
 						if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__);
 						mainMenu->setState(new MenuStateConnectedGame(program, mainMenu,jmMasterserver));
 					}
@@ -724,13 +744,13 @@
 
 		//game setup info:
 		renderer.renderLabel(&techLabel,&titleLabelColor);
 		renderer.renderLabel(&mapLabel,&titleLabelColor);
 		//renderer.renderLabel(&tilesetLabel,&titleLabelColor);
 		renderer.renderLabel(&activeSlotsLabel,&titleLabelColor);
-		renderer.renderLabel(&externalConnectPort,&titleLabelColor);
+		//renderer.renderLabel(&externalConnectPort,&titleLabelColor);
 		renderer.renderLabel(&selectButton,&titleLabelColor);
 
 		Lang &lang= Lang::getInstance();
 		MutexSafeWrapper safeMutexIRCPtr(&mutexIRCClient,string(extractFileFromDirectoryPath(__FILE__).c_str()) + "_" + intToStr(__LINE__));
         if(ircClient != NULL &&
            ircClient->isConnected() == true &&
@@ -896,12 +916,14 @@
 			throw megaglest_runtime_error(sError.c_str());
 		}
 	}
 }
 
 void MenuStateMasterserver::simpleTask(BaseThread *callingThread) {
+	Lang &lang= Lang::getInstance();
+	
 	if(callingThread->getQuitStatus() == true) {
 		return;
 	}
 	MutexSafeWrapper safeMutex(callingThread->getMutexThreadObjectAccessor(),string(extractFileFromDirectoryPath(__FILE__).c_str()) + "_" + intToStr(__LINE__));
 	bool needUpdate = needUpdateFromServer;
 
@@ -962,18 +984,39 @@
                     }
                     safeMutex.Lock();
 
                     if(StartsWith(versionTxt,"Version info:") == true) {
                         int newlineCount=0;
                         size_t lastIndex=0;
+			string ConsoleVersionInfo="";
 
-                        //versionInfoLabel.setText(versionTxt);
-                        consoleIRC.addLine(versionTxt, true, Vec3f(1.0f,0.0f,0.0f));
+			//versionInfoLabel.setText(versionTxt);
+			
+			if(versionTxt.find("latest stable version")!=string::npos) {
+				if(versionTxt.find("pre-release version is available")!=string::npos) {
+					consoleIRC.addLine(ConsoleVersionInfo=lang.get("VersionInfo")+" "+lang.get("VersionLatestStable")+" "+lang.get("VersionNewerAvailable")+"\n", true, Vec3f(1.0f,1.0f,0.0f));
+				}
+				else {
+					consoleIRC.addLine(ConsoleVersionInfo=lang.get("VersionInfo")+" "+lang.get("VersionLatestStable")+"\n", true, Vec3f(0.0f,1.0f,0.0f));
+				}
+			}
+			else if(versionTxt.find("latest available PRE-RELEASE version")!=string::npos) { 
+				consoleIRC.addLine(ConsoleVersionInfo=lang.get("VersionInfo")+" "+lang.get("VersionLatestPrelease")+"\n", true, Vec3f(1.0f,0.6f,0.3f));
+			}
+			else if(versionTxt.find("VERSION IS OUTDATED")!=string::npos) {
+				consoleIRC.addLine(ConsoleVersionInfo=lang.get("VersionInfo")+" "+lang.get("VersionIsOutdated")+" "+getAboutString2(0)+"\n", true, Vec3f(1.0f,0.0f,0.0f));
+			}
+			else if(versionTxt.find("RUNNING A DEVELOPMENT SNAPSHOT")!=string::npos) {
+				consoleIRC.addLine(ConsoleVersionInfo=lang.get("VersionInfo")+" "+lang.get("VersionDevIsIncom")+"\n", true, Vec3f(0.0f,1.0f,1.0f));
+			}
+			else { 
+				consoleIRC.addLine(ConsoleVersionInfo=versionTxt, true, Vec3f(1.0f,0.0f,1.0f));
+			}
 
                         while(true) {
-                            lastIndex=versionTxt.find("\n",lastIndex+1);
+			    lastIndex=ConsoleVersionInfo.find("\n",lastIndex+1);
                             if(lastIndex==string::npos) {
                                 break;
                             }
                             else {
                                 newlineCount++;
                             }
@@ -986,12 +1029,22 @@
                 }
                 consoleIRC.addLine("---------------------------------------------");
                 // write hint to console:
                 Config &configKeys = Config::getInstance(std::pair<ConfigType,ConfigType>(cfgMainKeys,cfgUserKeys));
                 consoleIRC.addLine(Lang::getInstance().get("ToSwitchOffMusicPress")+" - \""+configKeys.getString("ToggleMusic")+"\"");
 
+		consoleIRC.addLine("---------------------------------------------");
+                // write welcome and current nick to console:
+                string netPlayerNameIRC=Config::getInstance().getString("NetPlayerName",Socket::getHostName().c_str());
+		if(netPlayerNameIRC != "newbie") {
+			consoleIRC.addLine(Lang::getInstance().get("HelloIRC1")+"  "+netPlayerNameIRC+".  "+Lang::getInstance().get("HelloIRC2")+"  "+currentIrcNick);
+		}
+		else {
+			consoleIRC.addLine(Lang::getInstance().get("HelloIRC2")+"  "+currentIrcNick);
+		}
+
                 announcementLoaded=true;
             }
 
             //Lang &lang= Lang::getInstance();
             try {
                 if(Config::getInstance().getString("Masterserver","") != "") {
Index: source/glest_game/menu/menu_state_mods.cpp
===================================================================
--- source/glest_game/menu/menu_state_mods.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_mods.cpp	(kopia robocza)
@@ -74,176 +74,178 @@
 	selectedMapName 		= "";
 	selectedScenarioName	= "";
 	modInfoSelected         = NULL;
 	showFullConsole			= false;
 	keyButtonsLineHeight	= 20;
 	keyButtonsHeight		= 20;
-	keyButtonsWidth			= 200;
+	keyButtonsWidth			= 250;
+	WidthXCorr1 			= 40;
+	WidthXCorr2 			= WidthXCorr1 - 9;
 	scrollListsYPos 		= 700;
 	listBoxLength 			= 200;
 	keyButtonsYBase			= scrollListsYPos;
 	keyButtonsToRender		= listBoxLength / keyButtonsLineHeight;
-	labelWidth				= 5;
+	labelWidth				= 10;
 	keyButtonsXBase			= 0;
 	modMenuState            = mmst_None;
 	oldMenuState            = mmst_None;
 
 	int installButtonYPos = scrollListsYPos-listBoxLength-20;
 
 	int returnLineY = 80;
 	enableMapPreview = config.getBool("MapPreview","true");
 	validMapPreview = false;
     mapPreviewTexture=NULL;
 
 	//create
-	techInfoXPos = 10;
+	techInfoXPos = 5;
 	keyTechScrollBarTitle1.registerGraphicComponent(containerName,"keyTechScrollBarTitle1");
-	keyTechScrollBarTitle1.init(techInfoXPos,scrollListsYPos + 25,labelWidth,20);
+	keyTechScrollBarTitle1.init(techInfoXPos,scrollListsYPos + 27,labelWidth,20);
 	keyTechScrollBarTitle1.setText(lang.get("TechTitle1"));
 	keyTechScrollBarTitle1.setFont(CoreData::getInstance().getMenuFontBig());
 	keyTechScrollBarTitle1.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	keyTechScrollBarTitle2.registerGraphicComponent(containerName,"keyTechScrollBarTitle2");
-	keyTechScrollBarTitle2.init(techInfoXPos + 200,scrollListsYPos + 25,labelWidth,20);
+	keyTechScrollBarTitle2.init(techInfoXPos + keyButtonsWidth - WidthXCorr1 - 18,scrollListsYPos + 20,labelWidth,20);
 	keyTechScrollBarTitle2.setText(lang.get("TechTitle2"));
 	keyTechScrollBarTitle2.setFont(CoreData::getInstance().getMenuFontNormal());
 	keyTechScrollBarTitle2.setFont3D(CoreData::getInstance().getMenuFontNormal3D());
 
-	mapInfoXPos = 270;
+	mapInfoXPos = techInfoXPos+keyButtonsWidth-WidthXCorr1+15+10;
 	keyMapScrollBarTitle1.registerGraphicComponent(containerName,"keyMapScrollBarTitle1");
-	keyMapScrollBarTitle1.init(mapInfoXPos,scrollListsYPos + 25,labelWidth,20);
+	keyMapScrollBarTitle1.init(mapInfoXPos + 50,scrollListsYPos + 27,labelWidth,20);
 	keyMapScrollBarTitle1.setText(lang.get("MapTitle1"));
 	keyMapScrollBarTitle1.setFont(CoreData::getInstance().getMenuFontBig());
 	keyMapScrollBarTitle1.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	keyMapScrollBarTitle2.registerGraphicComponent(containerName,"keyMapScrollBarTitle2");
-	keyMapScrollBarTitle2.init(mapInfoXPos + 200,scrollListsYPos + 25,labelWidth,20);
+	keyMapScrollBarTitle2.init(mapInfoXPos + keyButtonsWidth - 18,scrollListsYPos + 20,labelWidth,20);
 	keyMapScrollBarTitle2.setText(lang.get("MapTitle2"));
 	keyMapScrollBarTitle2.setFont(CoreData::getInstance().getMenuFontNormal());
 	keyMapScrollBarTitle2.setFont3D(CoreData::getInstance().getMenuFontNormal3D());
 
-	tilesetInfoXPos = 530;
+	tilesetInfoXPos = mapInfoXPos+keyButtonsWidth+15+10;
 	keyTilesetScrollBarTitle1.registerGraphicComponent(containerName,"keyTilesetScrollBarTitle1");
-	keyTilesetScrollBarTitle1.init(tilesetInfoXPos,scrollListsYPos + 25,labelWidth,20);
+	keyTilesetScrollBarTitle1.init(tilesetInfoXPos + 35,scrollListsYPos + 27,labelWidth,20);
 	keyTilesetScrollBarTitle1.setText(lang.get("TilesetTitle1"));
 	keyTilesetScrollBarTitle1.setFont(CoreData::getInstance().getMenuFontBig());
 	keyTilesetScrollBarTitle1.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 
 
-	scenarioInfoXPos = 760;
+	scenarioInfoXPos = tilesetInfoXPos+keyButtonsWidth-WidthXCorr2+10;
 	keyScenarioScrollBarTitle1.registerGraphicComponent(containerName,"keyScenarioScrollBarTitle1");
-	keyScenarioScrollBarTitle1.init(scenarioInfoXPos,scrollListsYPos + 25,labelWidth,20);
+	keyScenarioScrollBarTitle1.init(scenarioInfoXPos + 50,scrollListsYPos + 27,labelWidth,20);
 	keyScenarioScrollBarTitle1.setText(lang.get("ScenarioTitle1"));
 	keyScenarioScrollBarTitle1.setFont(CoreData::getInstance().getMenuFontBig());
 	keyScenarioScrollBarTitle1.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 
 	mainMessageBoxState = ftpmsg_None;
     mainMessageBox.registerGraphicComponent(containerName,"mainMessageBox");
-	mainMessageBox.init(lang.get("Yes"),lang.get("No"),450);
+	mainMessageBox.init(lang.get("Yes"),lang.get("No"));
 	mainMessageBox.setEnabled(false);
 
 	lineHorizontal.init(0,installButtonYPos-60);
-	lineVertical.init(500,returnLineY, 5,  installButtonYPos-60-returnLineY);
+	lineVertical.init(500,returnLineY, 4,  installButtonYPos-60-returnLineY);
 	lineVertical.setHorizontal(false);
 	lineReturn.init(0, returnLineY);
 
-	modDescrLabel.registerGraphicComponent(containerName,"modDescrLabel");
-	modDescrLabel.init(50,installButtonYPos-60 - 20,450,20);
+	modDescrLabel.registerGraphicComponent(containerName,"GraphicMessageBox");
+	modDescrLabel.init(10,installButtonYPos-60 - 25,450,20);
 	modDescrLabel.setWordWrap(true);
 	modDescrLabel.setText("description is empty");
 
 	pleaseWaitLabel.registerGraphicComponent(containerName,"pleaseWaitLabel");
-	pleaseWaitLabel.init(50,installButtonYPos-120,450,20);
+	pleaseWaitLabel.init(25,installButtonYPos-130,450,20);
 	pleaseWaitLabel.setText("");
 	pleaseWaitLabel.setFont(CoreData::getInstance().getMenuFontBig());
 	pleaseWaitLabel.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 
 	buttonReturn.registerGraphicComponent(containerName,"buttonReturn");
-	buttonReturn.init(800, returnLineY - 30, 125);
+	buttonReturn.init(800, returnLineY - 30, 135);
 	buttonReturn.setText(lang.get("Return"));
 
-	lineVerticalReturn.init(buttonReturn.getX() - 10, returnLineY-80, 5, 81);
+	lineVerticalReturn.init(buttonReturn.getX() - 11, returnLineY-80, 3, 81);
 	lineVerticalReturn.setHorizontal(false);
 
 	int buttonLineUpY=installButtonYPos+10;
-	int buttonLineDownY=installButtonYPos-20;
+	int buttonLineDownY=installButtonYPos-15;
 
 	int legendButtonY= buttonLineDownY-30;
 	buttonInstalled.registerGraphicComponent(containerName,"buttonInstalled");
-	buttonInstalled.init(techInfoXPos, legendButtonY, 200);
+	buttonInstalled.init(5, legendButtonY, 240);
 	buttonInstalled.setText(lang.get("ModInstalled"));
 	buttonInstalled.setUseCustomTexture(true);
 	buttonInstalled.setCustomTexture(CoreData::getInstance().getOnServerInstalledTexture());
 	buttonInstalled.setEnabled(false);
 
 	buttonAvailable.registerGraphicComponent(containerName,"buttonAvailable");
-	buttonAvailable.init(tilesetInfoXPos, legendButtonY, 200);
+	buttonAvailable.init(240+15, legendButtonY, 240);
 	buttonAvailable.setUseCustomTexture(true);
 	buttonAvailable.setCustomTexture(CoreData::getInstance().getOnServerTexture());
 	buttonAvailable.setText(lang.get("ModAvailable"));
 
 	buttonOnlyLocal.registerGraphicComponent(containerName,"buttonOnlyLocal");
-	buttonOnlyLocal.init(mapInfoXPos, legendButtonY, 200);
+	buttonOnlyLocal.init(240+15+240+10+240+10, legendButtonY, 240);
 	buttonOnlyLocal.setUseCustomTexture(true);
 	buttonOnlyLocal.setCustomTexture(CoreData::getInstance().getNotOnServerTexture());
 	buttonOnlyLocal.setText(lang.get("ModOnlyLocal"));
 
 	buttonConflict.registerGraphicComponent(containerName,"buttonConflict");
-	buttonConflict.init(scenarioInfoXPos, legendButtonY, 200);
+	buttonConflict.init(240+15+240+10, legendButtonY, 240);
 	buttonConflict.setUseCustomTexture(true);
 	buttonConflict.setCustomTexture(CoreData::getInstance().getOnServerDifferentTexture());
 	buttonConflict.setText(lang.get("ModHasConflict"));
 
 
 	buttonInstallTech.registerGraphicComponent(containerName,"buttonInstallTech");
-	buttonInstallTech.init(techInfoXPos + 40, buttonLineUpY, 125);
+	buttonInstallTech.init(techInfoXPos + ((keyButtonsWidth - WidthXCorr1)/2) - 67, buttonLineUpY, 135);
 	buttonInstallTech.setText(lang.get("Install"));
 	buttonRemoveTech.registerGraphicComponent(containerName,"buttonRemoveTech");
-	buttonRemoveTech.init(techInfoXPos + 40, buttonLineDownY, 125);
+	buttonRemoveTech.init(techInfoXPos + ((keyButtonsWidth - WidthXCorr1)/2) - 67, buttonLineDownY, 135);
 	buttonRemoveTech.setText(lang.get("Remove"));
 
 	buttonInstallTileset.registerGraphicComponent(containerName,"buttonInstallTileset");
-	buttonInstallTileset.init(tilesetInfoXPos + 20, buttonLineUpY, 125);
+	buttonInstallTileset.init(tilesetInfoXPos + ((keyButtonsWidth - WidthXCorr2 - 15)/2) - 67, buttonLineUpY, 135);
 	buttonInstallTileset.setText(lang.get("Install"));
 	buttonRemoveTileset.registerGraphicComponent(containerName,"buttonRemoveTileset");
-	buttonRemoveTileset.init(tilesetInfoXPos + 20, buttonLineDownY, 125);
+	buttonRemoveTileset.init(tilesetInfoXPos + ((keyButtonsWidth - WidthXCorr2 - 15)/2) - 67, buttonLineDownY, 135);
 	buttonRemoveTileset.setText(lang.get("Remove"));
 
 	buttonInstallMap.registerGraphicComponent(containerName,"buttonInstallMap");
-	buttonInstallMap.init(mapInfoXPos + 40, buttonLineUpY, 125);
+	buttonInstallMap.init(mapInfoXPos + (keyButtonsWidth/2) - 67, buttonLineUpY, 135);
 	buttonInstallMap.setText(lang.get("Install"));
 	buttonRemoveMap.registerGraphicComponent(containerName,"buttonRemoveMap");
-	buttonRemoveMap.init(mapInfoXPos + 40, buttonLineDownY, 125);
+	buttonRemoveMap.init(mapInfoXPos + (keyButtonsWidth/2) - 67, buttonLineDownY, 135);
 	buttonRemoveMap.setText(lang.get("Remove"));
 
 	buttonInstallScenario.registerGraphicComponent(containerName,"buttonInstallScenario");
-	buttonInstallScenario.init(scenarioInfoXPos + 20, buttonLineUpY, 125);
+	buttonInstallScenario.init(scenarioInfoXPos + ((keyButtonsWidth - 15)/2) - 67, buttonLineUpY, 135);
 	buttonInstallScenario.setText(lang.get("Install"));
 	buttonRemoveScenario.registerGraphicComponent(containerName,"buttonRemoveScenario");
-	buttonRemoveScenario.init(scenarioInfoXPos + 20, buttonLineDownY, 125);
+	buttonRemoveScenario.init(scenarioInfoXPos + ((keyButtonsWidth - 15)/2) - 67, buttonLineDownY, 135);
 	buttonRemoveScenario.setText(lang.get("Remove"));
 
 	if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",__FILE__,__FUNCTION__,__LINE__);
 
-	keyTilesetScrollBar.init(tilesetInfoXPos + keyButtonsWidth,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,20);
+	keyTilesetScrollBar.init(tilesetInfoXPos + keyButtonsWidth - WidthXCorr2 - 15,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,15);
 	keyTilesetScrollBar.setLength(listBoxLength);
 	keyTilesetScrollBar.setElementCount(0);
 	keyTilesetScrollBar.setVisibleSize(keyButtonsToRender);
 	keyTilesetScrollBar.setVisibleStart(0);
 
-	keyTechScrollBar.init(techInfoXPos + keyButtonsWidth + labelWidth + 20,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,20);
+	keyTechScrollBar.init(techInfoXPos + keyButtonsWidth - WidthXCorr1,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,15);
 	keyTechScrollBar.setLength(listBoxLength);
 	keyTechScrollBar.setElementCount(0);
 	keyTechScrollBar.setVisibleSize(keyButtonsToRender);
 	keyTechScrollBar.setVisibleStart(0);
 
-	keyMapScrollBar.init(mapInfoXPos + keyButtonsWidth + labelWidth + 20,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,20);
+	keyMapScrollBar.init(mapInfoXPos + keyButtonsWidth,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,15);
 	keyMapScrollBar.setLength(listBoxLength);
 	keyMapScrollBar.setElementCount(0);
 	keyMapScrollBar.setVisibleSize(keyButtonsToRender);
 	keyMapScrollBar.setVisibleStart(0);
 
-	keyScenarioScrollBar.init(scenarioInfoXPos + keyButtonsWidth,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,20);
+	keyScenarioScrollBar.init(scenarioInfoXPos + keyButtonsWidth - 15,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,15);
 	keyScenarioScrollBar.setLength(listBoxLength);
 	keyScenarioScrollBar.setElementCount(0);
 	keyScenarioScrollBar.setVisibleSize(keyButtonsToRender);
 	keyScenarioScrollBar.setVisibleStart(0);
 
 	GraphicComponent::applyAllCustomProperties(containerName);
@@ -360,13 +362,13 @@
 	pleaseWaitLabel.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 
 	keyScenarioScrollBarTitle1.setText(lang.get("ScenarioTitle1"));
 	keyScenarioScrollBarTitle1.setFont(CoreData::getInstance().getMenuFontBig());
 	keyScenarioScrollBarTitle1.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 
-	mainMessageBox.init(lang.get("Yes"),lang.get("No"),450);
+	mainMessageBox.init(lang.get("Yes"),lang.get("No"));
 
 	modDescrLabel.setText("description is empty");
 
 	buttonReturn.setText(lang.get("Return"));
 
 	buttonInstalled.setText(lang.get("ModInstalled"));
@@ -409,13 +411,13 @@
     Config &config = Config::getInstance();
     string fileArchiveExtractCommand = config.getString("FileArchiveExtractCommand","");
     int expectedResult = config.getInt("FileArchiveExtractCommandSuccessResult","0");
 	bool findArchive = executeShellCommand(fileArchiveExtractCommand,expectedResult);
 	if(findArchive == false) {
 		mainMessageBoxState = ftpmsg_None;
-		mainMessageBox.init(lang.get("Ok"),450);
+		mainMessageBox.init(lang.get("Ok"));
 		showMessageBox(lang.get("ModRequires7z"), lang.get("Notice"), true);
 	}
 
 	std::string techsMetaData = "";
 	std::string tilesetsMetaData = "";
 	std::string mapsMetaData = "";
@@ -523,13 +525,13 @@
 
 		string result=refreshTilesetModInfo(tilesetListRemote[i]);
 		if(result != "") {
 			ModInfo modinfo;
 			modinfo=tilesetCacheList[result];
 			GraphicButton *button=new GraphicButton();
-			button->init(tilesetInfoXPos, keyButtonsYBase, keyButtonsWidth,keyButtonsHeight);
+			button->init(tilesetInfoXPos, keyButtonsYBase, keyButtonsWidth-WidthXCorr2,keyButtonsHeight);
 			button->setText(modinfo.name);
 			button->setUseCustomTexture(true);
 			button->setCustomTexture(CoreData::getInstance().getCustomTexture());
 			keyTilesetButtons.push_back(button);
 		}
 	}
@@ -547,13 +549,13 @@
 	    }
 
 		string tilesetName = tilesetFilesUserData[i];
 		bool alreadyHasTileset = (tilesetCacheList.find(tilesetName) != tilesetCacheList.end());
 		if(alreadyHasTileset == false) {
 			GraphicButton *button=new GraphicButton();
-			button->init(tilesetInfoXPos, keyButtonsYBase, keyButtonsWidth,keyButtonsHeight);
+			button->init(tilesetInfoXPos, keyButtonsYBase, keyButtonsWidth-WidthXCorr2,keyButtonsHeight);
 			button->setText(tilesetName);
 			button->setUseCustomTexture(true);
 			button->setCustomTexture(CoreData::getInstance().getCustomTexture());
 			keyTilesetButtons.push_back(button);
 		}
 	}
@@ -586,20 +588,20 @@
 		string result=refreshTechModInfo(techListRemote[i]);
 		if(result != "") {
 			ModInfo modinfo;
 			modinfo=techCacheList[result];
 
 			GraphicButton *button=new GraphicButton();
-			button->init(techInfoXPos, keyButtonsYBase, keyButtonsWidth,keyButtonsHeight);
+			button->init(techInfoXPos, keyButtonsYBase, keyButtonsWidth-WidthXCorr1,keyButtonsHeight);
 			button->setText(modinfo.name);
 			button->setUseCustomTexture(true);
 			button->setCustomTexture(CoreData::getInstance().getCustomTexture());
 
 			keyTechButtons.push_back(button);
 			GraphicLabel *label=new GraphicLabel();
-			label->init(techInfoXPos + keyButtonsWidth+10,keyButtonsYBase,labelWidth,20);
+			label->init(techInfoXPos + keyButtonsWidth-WidthXCorr1 - 18,keyButtonsYBase,labelWidth,20);
 			label->setText(modinfo.count);
 			labelsTech.push_back(label);
 		}
 	}
 
     if(callingThread->getQuitStatus() == true || safeMutexThreadOwner.isValidMutex() == false) {
@@ -621,21 +623,21 @@
 	        string &techPath = techPaths[1];
 	        endPathWithSlash(techPath);
 	        vector<string> factions;
 	        findAll(techPath + techName + "/factions/*.", factions, false, false);
 
 			GraphicButton *button=new GraphicButton();
-			button->init(techInfoXPos, keyButtonsYBase, keyButtonsWidth,keyButtonsHeight);
+			button->init(techInfoXPos, keyButtonsYBase, keyButtonsWidth-WidthXCorr1,keyButtonsHeight);
 			button->setText(techName);
 			button->setUseCustomTexture(true);
 			button->setCustomTexture(CoreData::getInstance().getCustomTexture());
 			keyTechButtons.push_back(button);
 
 			int techFactionCount = factions.size();
 			GraphicLabel *label=new GraphicLabel();
-			label->init(techInfoXPos + keyButtonsWidth+10,keyButtonsYBase,labelWidth,20);
+			label->init(techInfoXPos + keyButtonsWidth-WidthXCorr1 - 18,keyButtonsYBase,labelWidth,20);
 			label->setText(intToStr(techFactionCount));
 			labelsTech.push_back(label);
 		}
 	}
 
 	if(SystemFlags::VERBOSE_MODE_ENABLED) printf("In [%s::%s Line %d]\n",__FILE__,__FUNCTION__,__LINE__);
@@ -668,13 +670,13 @@
 			button->setText(modinfo.name);
 			button->setUseCustomTexture(true);
 			button->setCustomTexture(CoreData::getInstance().getCustomTexture());
 			keyMapButtons.push_back(button);
 
 			GraphicLabel *label=new GraphicLabel();
-			label->init(mapInfoXPos + keyButtonsWidth + 10,keyButtonsYBase,labelWidth,20);
+			label->init(mapInfoXPos + keyButtonsWidth - 18,keyButtonsYBase,labelWidth,20);
 			label->setText(modinfo.count);
 			labelsMap.push_back(label);
 		}
 	}
 
     if(callingThread->getQuitStatus() == true || safeMutexThreadOwner.isValidMutex() == false) {
@@ -704,13 +706,13 @@
 			button->setUseCustomTexture(true);
 			button->setCustomTexture(CoreData::getInstance().getCustomTexture());
 			keyMapButtons.push_back(button);
 
 			int mapPlayerCount = mapInfo.players;
 			GraphicLabel *label=new GraphicLabel();
-			label->init(mapInfoXPos + keyButtonsWidth + 10,keyButtonsYBase,labelWidth,20);
+			label->init(mapInfoXPos + keyButtonsWidth - 18,keyButtonsYBase,labelWidth,20);
 			label->setText(intToStr(mapPlayerCount));
 			labelsMap.push_back(label);
 		}
 	}
 
     if(callingThread->getQuitStatus() == true || safeMutexThreadOwner.isValidMutex() == false) {
@@ -780,31 +782,31 @@
         return;
     }
 
     if(SystemFlags::VERBOSE_MODE_ENABLED) printf("In [%s::%s Line %d]\n",__FILE__,__FUNCTION__,__LINE__);
     if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",__FILE__,__FUNCTION__,__LINE__);
 
-	keyTilesetScrollBar.init(tilesetInfoXPos + keyButtonsWidth,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,20);
+	keyTilesetScrollBar.init(tilesetInfoXPos + keyButtonsWidth - WidthXCorr2 - 15,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,15);
 	keyTilesetScrollBar.setLength(listBoxLength);
 	keyTilesetScrollBar.setElementCount(keyTilesetButtons.size());
 	keyTilesetScrollBar.setVisibleSize(keyButtonsToRender);
 	keyTilesetScrollBar.setVisibleStart(0);
 
-	keyTechScrollBar.init(techInfoXPos + keyButtonsWidth + labelWidth + 20,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,20);
+	keyTechScrollBar.init(techInfoXPos + keyButtonsWidth - WidthXCorr1,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,15);
 	keyTechScrollBar.setLength(listBoxLength);
 	keyTechScrollBar.setElementCount(keyTechButtons.size());
 	keyTechScrollBar.setVisibleSize(keyButtonsToRender);
 	keyTechScrollBar.setVisibleStart(0);
 
-	keyMapScrollBar.init(mapInfoXPos + keyButtonsWidth + labelWidth + 20,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,20);
+	keyMapScrollBar.init(mapInfoXPos + keyButtonsWidth,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,15);
 	keyMapScrollBar.setLength(listBoxLength);
 	keyMapScrollBar.setElementCount(keyMapButtons.size());
 	keyMapScrollBar.setVisibleSize(keyButtonsToRender);
 	keyMapScrollBar.setVisibleStart(0);
 
-	keyScenarioScrollBar.init(scenarioInfoXPos + keyButtonsWidth,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,20);
+	keyScenarioScrollBar.init(scenarioInfoXPos + keyButtonsWidth - 15,scrollListsYPos-listBoxLength+keyButtonsLineHeight,false,200,15);
 	keyScenarioScrollBar.setLength(listBoxLength);
 	keyScenarioScrollBar.setElementCount(keyScenarioButtons.size());
 	keyScenarioScrollBar.setVisibleSize(keyButtonsToRender);
 	keyScenarioScrollBar.setVisibleStart(0);
 
 	modMenuState=mmst_None;
@@ -1247,13 +1249,13 @@
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line %d]\n",__FILE__,__FUNCTION__,__LINE__);
 
 		soundRenderer.playFx(coreData.getClickSoundA());
 
 		if(fileFTPProgressList.empty() == false) {
 			mainMessageBoxState = ftpmsg_Quit;
-			mainMessageBox.init(lang.get("Yes"),lang.get("No"),450);
+			mainMessageBox.init(lang.get("Yes"),lang.get("No"));
 			char szBuf[8096]="";
 			snprintf(szBuf,8096,lang.get("ModDownloadInProgressCancelQuestion").c_str(),fileFTPProgressList.size());
 			showMessageBox(szBuf, lang.get("Question"), true);
 		}
 		else {
 			cleanUp();
@@ -1263,13 +1265,13 @@
     }
 	else if(mainMessageBox.getEnabled()) {
 		int button= 0;
 		if(mainMessageBox.mouseClick(x, y, button)) {
 			soundRenderer.playFx(coreData.getClickSoundA());
 			mainMessageBox.setEnabled(false);
-			mainMessageBox.init(lang.get("Yes"),lang.get("No"),450);
+			mainMessageBox.init(lang.get("Yes"),lang.get("No"));
 			if(button == 0) {
 			    if(mainMessageBoxState == ftpmsg_Quit) {
 			    	mainMessageBoxState = ftpmsg_None;
 					mainMenu->setState(new MenuStateRoot(program, mainMenu));
 					return;
 			    }
@@ -1537,20 +1539,20 @@
 					bool forceRefresh = (mapCRCUpdateList.find(itemPath) == mapCRCUpdateList.end());
 					if( strToUInt(modInfo.crc) != 0 &&
 							strToUInt(modInfo.crc) != getFolderTreeContentsCheckSumRecursively(itemPath, ".xml", NULL,forceRefresh)) {
 						if(SystemFlags::VERBOSE_MODE_ENABLED) printf("In [%s::%s Line %d] local CRC [%u]\n",__FILE__,__FUNCTION__,__LINE__,getFolderTreeContentsCheckSumRecursively(itemPath, ".xml", NULL));
 
 						mainMessageBoxState = ftpmsg_ReplaceTechtree;
-						mainMessageBox.init(lang.get("Yes"),lang.get("No"),450);
+						mainMessageBox.init(lang.get("Yes"),lang.get("No"));
 						char szBuf[8096]="";
 						snprintf(szBuf,8096,lang.get("ModLocalRemoteMismatch").c_str(),selectedTechName.c_str());
 						showMessageBox(szBuf, lang.get("Notice"), true);
 					}
 					else {
 						mainMessageBoxState = ftpmsg_None;
-						mainMessageBox.init(lang.get("Ok"),450);
+						mainMessageBox.init(lang.get("Ok"));
 						char szBuf[8096]="";
 						snprintf(szBuf,8096,lang.get("ModTechAlreadyInstalled").c_str(),selectedTechName.c_str());
 						showMessageBox(szBuf, lang.get("Notice"), true);
 					}
 					mapCRCUpdateList[itemPath] = true;
 				}
@@ -1567,13 +1569,13 @@
 				safeMutexFTPProgress.ReleaseLock();
 				buttonInstallTech.setEnabled(false);
 			}
 		}
 		else {
 			mainMessageBoxState = ftpmsg_None;
-			mainMessageBox.init(lang.get("Ok"),450);
+			mainMessageBox.init(lang.get("Ok"));
 			showMessageBox(lang.get("ModSelectTechToInstall"), lang.get("Notice"), true);
 		}
 	}
 	else if(buttonRemoveTech.mouseClick(x, y) && buttonRemoveTech.getEnabled()) {
 		soundRenderer.playFx(coreData.getClickSoundB());
 		if(selectedTechName != "") {
@@ -1584,22 +1586,22 @@
 				char szBuf[8096]="";
 				snprintf(szBuf,8096,lang.get("ModRemoveTechConfirm").c_str(),selectedTechName.c_str());
 				showMessageBox(szBuf, lang.get("Question"), true);
 			}
 			else {
 				mainMessageBoxState = ftpmsg_None;
-				mainMessageBox.init(lang.get("Ok"),450);
+				mainMessageBox.init(lang.get("Ok"));
 
 				char szBuf[8096]="";
 				snprintf(szBuf,8096,lang.get("ModCannotRemoveTechNotInstalled").c_str(),selectedTechName.c_str());
 				showMessageBox(szBuf, lang.get("Notice"), true);
 			}
 		}
 		else {
 			mainMessageBoxState = ftpmsg_None;
-			mainMessageBox.init(lang.get("Ok"),450);
+			mainMessageBox.init(lang.get("Ok"));
 
 			showMessageBox(lang.get("ModSelectTechToRemove"), lang.get("Notice"), true);
 		}
 	}
 
 	else if(buttonInstallTileset.mouseClick(x, y) && buttonInstallTileset.getEnabled()) {
@@ -1618,20 +1620,20 @@
 
 					if( strToUInt(modInfo.crc) != 0 &&
 						strToUInt(modInfo.crc) != getFolderTreeContentsCheckSumRecursively(itemPath, ".xml", NULL,forceRefresh)) {
 						if(SystemFlags::VERBOSE_MODE_ENABLED) printf("In [%s::%s Line %d] local CRC [%u] [%s]\n",__FILE__,__FUNCTION__,__LINE__,getFolderTreeContentsCheckSumRecursively(itemPath, ".xml", NULL),itemPath.c_str());
 
 						mainMessageBoxState = ftpmsg_ReplaceTileset;
-						mainMessageBox.init(lang.get("Yes"),lang.get("No"),450);
+						mainMessageBox.init(lang.get("Yes"),lang.get("No"));
 						char szBuf[8096]="";
 						snprintf(szBuf,8096,lang.get("ModLocalRemoteMismatch").c_str(),selectedTilesetName.c_str());
 						showMessageBox(szBuf, lang.get("Notice"), true);
 					}
 					else {
 						mainMessageBoxState = ftpmsg_None;
-						mainMessageBox.init(lang.get("Ok"),450);
+						mainMessageBox.init(lang.get("Ok"));
 						char szBuf[8096]="";
 						snprintf(szBuf,8096,lang.get("ModTilesetAlreadyInstalled").c_str(),selectedTilesetName.c_str());
 						showMessageBox(szBuf, lang.get("Notice"), true);
 					}
 				}
 			}
@@ -1647,13 +1649,13 @@
 				safeMutexFTPProgress.ReleaseLock();
 				buttonInstallTileset.setEnabled(false);
 			}
 		}
 		else {
 			mainMessageBoxState = ftpmsg_None;
-			mainMessageBox.init(lang.get("Ok"),450);
+			mainMessageBox.init(lang.get("Ok"));
 			showMessageBox(lang.get("ModSelectTilesetToInstall"), lang.get("Notice"), true);
 		}
 	}
 	else if(buttonRemoveTileset.mouseClick(x, y) && buttonRemoveTileset.getEnabled()) {
 		soundRenderer.playFx(coreData.getClickSoundB());
 		if(selectedTilesetName != "") {
@@ -1664,22 +1666,22 @@
 				char szBuf[8096]="";
 				snprintf(szBuf,8096,lang.get("ModRemoveTilesetConfirm").c_str(),selectedTilesetName.c_str());
 				showMessageBox(szBuf, lang.get("Question"), true);
 			}
 			else {
 				mainMessageBoxState = ftpmsg_None;
-				mainMessageBox.init(lang.get("Ok"),450);
+				mainMessageBox.init(lang.get("Ok"));
 
 				char szBuf[8096]="";
 				snprintf(szBuf,8096,lang.get("ModCannotRemoveTilesetNotInstalled").c_str(),selectedTilesetName.c_str());
 				showMessageBox(szBuf, lang.get("Notice"), true);
 			}
 		}
 		else {
 			mainMessageBoxState = ftpmsg_None;
-			mainMessageBox.init(lang.get("Ok"),450);
+			mainMessageBox.init(lang.get("Ok"));
 			showMessageBox(lang.get("ModSelectTilesetToRemove"), lang.get("Notice"), true);
 		}
 	}
 
 	else if(buttonInstallMap.mouseClick(x, y) && buttonInstallMap.getEnabled()) {
 		soundRenderer.playFx(coreData.getClickSoundB());
@@ -1688,20 +1690,20 @@
 			if(alreadyHasMap == true) {
 				bool remoteHasMap = (mapCacheList.find(selectedMapName) != mapCacheList.end());
 				if(remoteHasMap){
 					ModInfo &modInfo = mapCacheList[selectedMapName];
 					if( modInfo.crc != modInfo.localCRC ) {
 						mainMessageBoxState = ftpmsg_ReplaceMap;
-						mainMessageBox.init(lang.get("Yes"),lang.get("No"),450);
+						mainMessageBox.init(lang.get("Yes"),lang.get("No"));
 						char szBuf[8096]="";
 						snprintf(szBuf,8096,lang.get("ModLocalRemoteMismatch").c_str(),selectedMapName.c_str());
 						showMessageBox(szBuf, lang.get("Notice"), true);
 					}
 					else {
 						mainMessageBoxState = ftpmsg_None;
-						mainMessageBox.init(lang.get("Ok"),450);
+						mainMessageBox.init(lang.get("Ok"));
 						char szBuf[8096]="";
 						snprintf(szBuf,8096,lang.get("ModMapAlreadyInstalled").c_str(),selectedMapName.c_str());
 						showMessageBox(szBuf, lang.get("Notice"), true);
 					}
 				}
 			}
@@ -1717,13 +1719,13 @@
 				safeMutexFTPProgress.ReleaseLock();
 				buttonInstallMap.setEnabled(false);
 			}
 		}
 		else {
 			mainMessageBoxState = ftpmsg_None;
-			mainMessageBox.init(lang.get("Ok"),450);
+			mainMessageBox.init(lang.get("Ok"));
 			showMessageBox(lang.get("ModSelectMapToInstall"), lang.get("Notice"), true);
 		}
 	}
 	else if(buttonRemoveMap.mouseClick(x, y) && buttonRemoveMap.getEnabled()) {
 		soundRenderer.playFx(coreData.getClickSoundB());
 		if(selectedMapName != "") {
@@ -1734,22 +1736,22 @@
 				char szBuf[8096]="";
 				snprintf(szBuf,8096,lang.get("ModRemoveMapConfirm").c_str(),selectedMapName.c_str());
 				showMessageBox(szBuf, lang.get("Question"), true);
 			}
 			else {
 				mainMessageBoxState = ftpmsg_None;
-				mainMessageBox.init(lang.get("Ok"),450);
+				mainMessageBox.init(lang.get("Ok"));
 
 				char szBuf[8096]="";
 				snprintf(szBuf,8096,lang.get("ModCannotRemoveMapNotInstalled").c_str(),selectedMapName.c_str());
 				showMessageBox(szBuf, lang.get("Notice"), true);
 			}
 		}
 		else {
 			mainMessageBoxState = ftpmsg_None;
-			mainMessageBox.init(lang.get("Ok"),450);
+			mainMessageBox.init(lang.get("Ok"));
 			showMessageBox(lang.get("ModSelectMapToRemove"), lang.get("Notice"), true);
 		}
 	}
 
 	else if(buttonInstallScenario.mouseClick(x, y) && buttonInstallScenario.getEnabled()) {
 		soundRenderer.playFx(coreData.getClickSoundB());
@@ -1767,20 +1769,20 @@
 
 					if( strToUInt(modInfo.crc) != 0 &&
 						strToUInt(modInfo.crc) != getFolderTreeContentsCheckSumRecursively(itemPath, "", NULL,forceRefresh)) {
 						if(SystemFlags::VERBOSE_MODE_ENABLED) printf("In [%s::%s Line %d] local CRC [%u]\n",__FILE__,__FUNCTION__,__LINE__,getFolderTreeContentsCheckSumRecursively(itemPath, "", NULL));
 
 						mainMessageBoxState = ftpmsg_ReplaceScenario;
-						mainMessageBox.init(lang.get("Yes"),lang.get("No"),450);
+						mainMessageBox.init(lang.get("Yes"),lang.get("No"));
 						char szBuf[8096]="";
 						snprintf(szBuf,8096,lang.get("ModLocalRemoteMismatch").c_str(),selectedScenarioName.c_str());
 						showMessageBox(szBuf, lang.get("Notice"), true);
 					}
 					else {
 						mainMessageBoxState = ftpmsg_None;
-						mainMessageBox.init(lang.get("Ok"),450);
+						mainMessageBox.init(lang.get("Ok"));
 						char szBuf[8096]="";
 						snprintf(szBuf,8096,lang.get("ModScenarioAlreadyInstalled").c_str(),selectedScenarioName.c_str());
 						showMessageBox(szBuf, lang.get("Notice"), true);
 					}
 				}
 			}
@@ -1798,13 +1800,13 @@
 				safeMutexFTPProgress.ReleaseLock();
 				buttonInstallScenario.setEnabled(false);
 			}
 		}
 		else {
 			mainMessageBoxState = ftpmsg_None;
-			mainMessageBox.init(lang.get("Ok"),450);
+			mainMessageBox.init(lang.get("Ok"));
 			showMessageBox(lang.get("ModSelectScenarioToInstall"), lang.get("Notice"), true);
 		}
 	}
 	else if(buttonRemoveScenario.mouseClick(x, y) && buttonRemoveScenario.getEnabled()) {
 		soundRenderer.playFx(coreData.getClickSoundB());
 		if(selectedScenarioName != "") {
@@ -1815,22 +1817,22 @@
 				char szBuf[8096]="";
 				snprintf(szBuf,8096,lang.get("ModRemoveScenarioConfirm").c_str(),selectedScenarioName.c_str());
 				showMessageBox(szBuf, lang.get("Question"), true);
 			}
 			else {
 				mainMessageBoxState = ftpmsg_None;
-				mainMessageBox.init(lang.get("Ok"),450);
+				mainMessageBox.init(lang.get("Ok"));
 
 				char szBuf[8096]="";
 				snprintf(szBuf,8096,lang.get("ModCannotRemoveScenarioNotInstalled").c_str(),selectedScenarioName.c_str());
 				showMessageBox(szBuf, lang.get("Notice"), true);
 			}
 		}
 		else {
 			mainMessageBoxState = ftpmsg_None;
-			mainMessageBox.init(lang.get("Ok"),450);
+			mainMessageBox.init(lang.get("Ok"));
 			showMessageBox(lang.get("ModSelectScenarioToRemove"), lang.get("Notice"), true);
 		}
 	}
 
     else {
     	if(keyMapScrollBar.getElementCount() != 0) {
@@ -2347,39 +2349,40 @@
 
 		static string mutexOwnerId = string(__FILE__) + string("_") + intToStr(__LINE__);
 		MutexSafeWrapper safeMutexFTPProgress((ftpClientThread != NULL ? ftpClientThread->getProgressMutex() : NULL),mutexOwnerId);
 		if(ftpClientThread != NULL && ftpClientThread->getProgressMutex() != NULL) ftpClientThread->getProgressMutex()->setOwnerId(mutexOwnerId);
         if(fileFTPProgressList.empty() == false) {
         	Lang &lang= Lang::getInstance();
-        	int xLocation = buttonReturn.getX();
-            int yLocation = buttonReturn.getY() - 12;
+        	int xLocation = buttonReturn.getX() - 2;
+		int yLocation = buttonReturn.getY() - 22;
+		int PBarWidth = 1000 - buttonReturn.getX() - 3;
             for(std::map<string,pair<int,string> >::iterator iterMap = fileFTPProgressList.begin();
                 iterMap != fileFTPProgressList.end(); ++iterMap) {
 
-                string progressLabelPrefix = lang.get("ModDownloading") + " " + extractFileFromDirectoryPath(iterMap->first) + " ";
-                //if(SystemFlags::VERBOSE_MODE_ENABLED) printf("\nRendering file progress with the following prefix [%s]\n",progressLabelPrefix.c_str());
+                string progressLabelPrefix = " " + extractFileFromDirectoryPath(iterMap->first) + "\n " + lang.get("ModDownloading") + "... ";
+		//if(SystemFlags::VERBOSE_MODE_ENABLED) printf("\nRendering file progress with the following prefix [%s]\n",progressLabelPrefix.c_str());
 
                 if(Renderer::renderText3DEnabled) {
 					renderer.renderProgressBar3D(
 						iterMap->second.first,
 						//10,
 						//yLocation,
 						xLocation,
 						yLocation,
 						CoreData::getInstance().getDisplayFontSmall3D(),
-						185,progressLabelPrefix,false);
+						PBarWidth,progressLabelPrefix,false);
                 }
                 else {
 					renderer.renderProgressBar(
 						iterMap->second.first,
 						//10,
 						//yLocation,
 						xLocation,
 						yLocation,
 						CoreData::getInstance().getDisplayFontSmall(),
-						185,progressLabelPrefix,false);
+						PBarWidth,progressLabelPrefix,false);
                 }
 
                 yLocation -= 14;
             }
         }
         safeMutexFTPProgress.ReleaseLock();
@@ -2430,12 +2433,16 @@
 	catch(const std::exception &ex) {
 		char szBuf[8096]="";
 		snprintf(szBuf,8096,"In [%s::%s %d] error [%s]\n",__FILE__,__FUNCTION__,__LINE__,ex.what());
 		SystemFlags::OutputDebug(SystemFlags::debugError,szBuf);
 		throw megaglest_runtime_error(szBuf);
 	}
+
+	if(program != NULL) {
+		program->renderProgramMsgBox();
+	}
 }
 
 void MenuStateMods::update() {
 	Chrono chrono;
 	chrono.start();
 
Index: source/glest_game/menu/menu_state_mods.h
===================================================================
--- source/glest_game/menu/menu_state_mods.h	(wersja 4583)
+++ source/glest_game/menu/menu_state_mods.h	(kopia robocza)
@@ -120,12 +120,16 @@
 	int keyButtonsToRender;
 	int keyButtonsYBase;
 	int keyButtonsXBase;
 	int keyButtonsLineHeight;
 	int	keyButtonsHeight;
 	int keyButtonsWidth;
+	int WidthXCorr1;
+	int WidthXCorr2;
+	int WidthXCorr3;
+	int WidthXCorr4;
 
 	//Console console;
 	bool showFullConsole;
 
 	string selectedTechName;
 	std::vector<std::string> techListRemote;
Index: source/glest_game/menu/menu_state_new_game.cpp
===================================================================
--- source/glest_game/menu/menu_state_new_game.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_new_game.cpp	(kopia robocza)
@@ -37,31 +37,34 @@
 MenuStateNewGame::MenuStateNewGame(Program *program, MainMenu *mainMenu):
 	MenuState(program, mainMenu, "root")
 {
 	containerName = "NewGame";
 	Lang &lang= Lang::getInstance();
 
-	int buttonWidth = 200;
+	int buttonWidth = 225;
 	int yPos=465;
+	int xPos=(1000-buttonWidth)/2;
+	int CyPos=40;
+
     buttonTutorial.registerGraphicComponent(containerName,"buttonTutorial");
-    buttonTutorial.init(425, yPos, buttonWidth);
-    yPos-=40;
+    buttonTutorial.init(xPos, yPos, buttonWidth);
+    yPos-=CyPos;
 	buttonScenario.registerGraphicComponent(containerName,"buttonScenario");
-    buttonScenario.init(425, yPos, buttonWidth);
-    yPos-=40;
+    buttonScenario.init(xPos, yPos, buttonWidth);
+    yPos-=CyPos;
 	buttonCustomGame.registerGraphicComponent(containerName,"buttonCustomGame");
-	buttonCustomGame.init(425, yPos, buttonWidth);
-	yPos-=40;
+	buttonCustomGame.init(xPos, yPos, buttonWidth);
+	yPos-=CyPos;
     buttonMasterserverGame.registerGraphicComponent(containerName,"buttonMasterserverGame");
-    buttonMasterserverGame.init(425, yPos, buttonWidth);
-    yPos-=40;
+    buttonMasterserverGame.init(xPos, yPos, buttonWidth);
+    yPos-=CyPos;
 	buttonJoinGame.registerGraphicComponent(containerName,"buttonJoinGame");
-    buttonJoinGame.init(425, yPos, buttonWidth);
-	yPos-=40;
+    buttonJoinGame.init(xPos, yPos, buttonWidth);
+	yPos-=CyPos;
     buttonReturn.registerGraphicComponent(containerName,"buttonReturn");
-    buttonReturn.init(425, yPos, buttonWidth);
+    buttonReturn.init(xPos, yPos, buttonWidth);
 
 	buttonCustomGame.setText(lang.get("CustomGame"));
 	buttonScenario.setText(lang.get("Scenario"));
 	buttonJoinGame.setText(lang.get("JoinGame"));
 	buttonMasterserverGame.setText(lang.get("JoinInternetGame"));
 	buttonTutorial.setText(lang.get("Tutorial"));
Index: source/glest_game/menu/menu_state_options.cpp
===================================================================
--- source/glest_game/menu/menu_state_options.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_options.cpp	(kopia robocza)
@@ -44,68 +44,72 @@
 		Lang &lang= Lang::getInstance();
 		Config &config= Config::getInstance();
 		this->console.setOnlyChatMessagesInStoredLines(false);
 		//modeinfos=list<ModeInfo> ();
 		activeInputLabel=NULL;
 
-		int leftLabelStart=50;
-		int leftColumnStart=leftLabelStart+280;
+		int leftLabelStart=150;
+		int leftColumnStart=leftLabelStart+350;
 		//int rightLabelStart=450;
 		//int rightColumnStart=rightLabelStart+280;
 		int buttonRowPos=50;
-		int buttonStartPos=170;
+		int buttonStartPos=150;
 		//int captionOffset=75;
 		//int currentLabelStart=leftLabelStart;
 		//int currentColumnStart=leftColumnStart;
 		//int currentLine=700;
 		int lineOffset=30;
-		int tabButtonWidth=200;
+		int tabButtonWidth=165;
 		int tabButtonHeight=30;
+		int lineLength=720;
 
 		mainMessageBox.registerGraphicComponent(containerName,"mainMessageBox");
 		mainMessageBox.init(lang.get("Ok"));
 		mainMessageBox.setEnabled(false);
 		mainMessageBoxState=0;
 
 		buttonAudioSection.registerGraphicComponent(containerName,"buttonAudioSection");
-		buttonAudioSection.init(0, 720,tabButtonWidth,tabButtonHeight);
-		buttonAudioSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonAudioSection.init(5, 714,tabButtonWidth,tabButtonHeight);
+		buttonAudioSection.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonAudioSection.setText(lang.get("Audio"));
+
 		// Video Section
 		buttonVideoSection.registerGraphicComponent(containerName,"labelVideoSection");
-		buttonVideoSection.init(200, 720,tabButtonWidth,tabButtonHeight);
-		buttonVideoSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonVideoSection.init(174, 714,tabButtonWidth,tabButtonHeight);
+		buttonVideoSection.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonVideoSection.setText(lang.get("Video"));
-		//currentLine-=lineOffset;
+
 		//MiscSection
 		buttonMiscSection.registerGraphicComponent(containerName,"labelMiscSection");
-		buttonMiscSection.init(400, 700,tabButtonWidth,tabButtonHeight+20);
+		buttonMiscSection.init(343, 700,tabButtonWidth+50,tabButtonHeight+15);
 		buttonMiscSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
 		buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
 		buttonMiscSection.setText(lang.get("Misc"));
+
 		//NetworkSettings
 		buttonNetworkSettings.registerGraphicComponent(containerName,"labelNetworkSettingsSection");
-		buttonNetworkSettings.init(600, 720,tabButtonWidth,tabButtonHeight);
-		buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonNetworkSettings.init(562, 714,tabButtonWidth,tabButtonHeight);
+		buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonNetworkSettings.setText(lang.get("Network"));
 
 		//KeyboardSetup
 		buttonKeyboardSetup.registerGraphicComponent(containerName,"buttonKeyboardSetup");
-		buttonKeyboardSetup.init(800, 720,tabButtonWidth,tabButtonHeight);
-		buttonKeyboardSetup.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonKeyboardSetup.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonKeyboardSetup.init(731, 714,tabButtonWidth+99,tabButtonHeight);
+		buttonKeyboardSetup.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonKeyboardSetup.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonKeyboardSetup.setText(lang.get("Keyboardsetup"));
 
-		int currentLine=650; // reset line pos
+		int currentLine=640; // reset line pos
 		int currentLabelStart=leftLabelStart; // set to right side
 		int currentColumnStart=leftColumnStart; // set to right side
 
 		//lang
+		lineHorizontal1.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelLang.registerGraphicComponent(containerName,"labelLang");
 		labelLang.init(currentLabelStart, currentLine);
 		labelLang.setText(lang.get("Language"));
 
 		listBoxLang.registerGraphicComponent(containerName,"listBoxLang");
 		listBoxLang.init(currentColumnStart, currentLine, 320);
@@ -140,12 +144,13 @@
 			defaultLang = Lang::getInstance().getNavtiveNameFromLanguageName(Lang::getInstance().getDefaultLanguage());
 		}
 		listBoxLang.setSelectedItem(defaultLang.second + "-" + defaultLang.first);
 		currentLine-=lineOffset;
 
 		//playerName
+		lineHorizontal2.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelPlayerNameLabel.registerGraphicComponent(containerName,"labelPlayerNameLabel");
 		labelPlayerNameLabel.init(currentLabelStart,currentLine);
 		labelPlayerNameLabel.setText(lang.get("Playername"));
 
 		labelPlayerName.registerGraphicComponent(containerName,"labelPlayerName");
 		labelPlayerName.init(currentColumnStart,currentLine);
@@ -154,12 +159,13 @@
 		labelPlayerName.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		labelPlayerName.setMaxEditWidth(16);
 		labelPlayerName.setMaxEditRenderWidth(200);
 		currentLine-=lineOffset;
 
 		//FontSizeAdjustment
+		lineHorizontal3.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelFontSizeAdjustment.registerGraphicComponent(containerName,"labelFontSizeAdjustment");
 		labelFontSizeAdjustment.init(currentLabelStart,currentLine);
 		labelFontSizeAdjustment.setText(lang.get("FontSizeAdjustment"));
 
 		listFontSizeAdjustment.registerGraphicComponent(containerName,"listFontSizeAdjustment");
 		listFontSizeAdjustment.init(currentColumnStart, currentLine, 80);
@@ -167,12 +173,13 @@
 			listFontSizeAdjustment.pushBackItem(intToStr(i));
 		}
 		listFontSizeAdjustment.setSelectedItem(intToStr(config.getInt("FontSizeAdjustment")));
 
 		currentLine-=lineOffset;
 		// Screenshot type flag
+		lineHorizontal4.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelScreenShotType.registerGraphicComponent(containerName,"labelScreenShotType");
 		labelScreenShotType.init(currentLabelStart ,currentLine);
 		labelScreenShotType.setText(lang.get("ScreenShotFileType"));
 
 		listBoxScreenShotType.registerGraphicComponent(containerName,"listBoxScreenShotType");
 		listBoxScreenShotType.init(currentColumnStart ,currentLine, 80 );
@@ -180,138 +187,142 @@
 		listBoxScreenShotType.pushBackItem("jpg");
 		listBoxScreenShotType.pushBackItem("png");
 		listBoxScreenShotType.pushBackItem("tga");
 		listBoxScreenShotType.setSelectedItem(config.getString("ScreenShotFileType","jpg"));
 
 		currentLine-=lineOffset;
-
+		lineHorizontal5.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelDisableScreenshotConsoleText.registerGraphicComponent(containerName,"lavelDisableScreenshotConsoleText");
 		labelDisableScreenshotConsoleText.init(currentLabelStart ,currentLine);
 		labelDisableScreenshotConsoleText.setText(lang.get("ScreenShotConsoleText"));
 
 		checkBoxDisableScreenshotConsoleText.registerGraphicComponent(containerName,"checkBoxDisableScreenshotConsoleText");
 		checkBoxDisableScreenshotConsoleText.init(currentColumnStart ,currentLine );
 		checkBoxDisableScreenshotConsoleText.setValue(!config.getBool("DisableScreenshotConsoleText","false"));
 
 		currentLine-=lineOffset;
-
+		lineHorizontal6.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelMouseMoveScrollsWorld.registerGraphicComponent(containerName,"labelMouseMoveScrollsWorld");
 		labelMouseMoveScrollsWorld.init(currentLabelStart ,currentLine);
 		labelMouseMoveScrollsWorld.setText(lang.get("MouseScrollsWorld"));
 
 		checkBoxMouseMoveScrollsWorld.registerGraphicComponent(containerName,"checkBoxMouseMoveScrollsWorld");
 		checkBoxMouseMoveScrollsWorld.init(currentColumnStart ,currentLine );
 		checkBoxMouseMoveScrollsWorld.setValue(config.getBool("MouseMoveScrollsWorld","true"));
-		currentLine-=lineOffset;
 
+		currentLine-=lineOffset;
+		lineHorizontal7.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelVisibleHud.registerGraphicComponent(containerName,"lavelVisibleHud");
 		labelVisibleHud.init(currentLabelStart ,currentLine);
 		labelVisibleHud.setText(lang.get("VisibleHUD"));
 
 		checkBoxVisibleHud.registerGraphicComponent(containerName,"checkBoxVisibleHud");
 		checkBoxVisibleHud.init(currentColumnStart ,currentLine );
 		checkBoxVisibleHud.setValue(config.getBool("VisibleHud","true"));
 
 		currentLine-=lineOffset;
-
+		lineHorizontal8.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelChatStaysActive.registerGraphicComponent(containerName,"labelChatStaysActive");
 		labelChatStaysActive.init(currentLabelStart ,currentLine);
 		labelChatStaysActive.setText(lang.get("ChatStaysActive"));
 
 		checkBoxChatStaysActive.registerGraphicComponent(containerName,"checkBoxChatStaysActive");
 		checkBoxChatStaysActive.init(currentColumnStart ,currentLine );
 		checkBoxChatStaysActive.setValue(config.getBool("ChatStaysActive","false"));
 
 		currentLine-=lineOffset;
-
+		lineHorizontal9.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelTimeDisplay.registerGraphicComponent(containerName,"labelTimeDisplay");
 		labelTimeDisplay.init(currentLabelStart ,currentLine);
 		labelTimeDisplay.setText(lang.get("TimeDisplay"));
 
 		checkBoxTimeDisplay.registerGraphicComponent(containerName,"checkBoxTimeDisplay");
 		checkBoxTimeDisplay.init(currentColumnStart ,currentLine );
 		checkBoxTimeDisplay.setValue(config.getBool("TimeDisplay","true"));
 
 		currentLine-=lineOffset;
-
+		lineHorizontal10.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelLuaDisableSecuritySandbox.registerGraphicComponent(containerName,"labelLuaDisableSecuritySandbox");
 		labelLuaDisableSecuritySandbox.init(currentLabelStart ,currentLine);
 		labelLuaDisableSecuritySandbox.setText(lang.get("LuaDisableSecuritySandbox"));
 
 		checkBoxLuaDisableSecuritySandbox.registerGraphicComponent(containerName,"checkBoxLuaDisableSecuritySandbox");
 		checkBoxLuaDisableSecuritySandbox.init(currentColumnStart ,currentLine );
 		checkBoxLuaDisableSecuritySandbox.setValue(config.getBool("DisableLuaSandbox","false"));
 
 		luaMessageBox.registerGraphicComponent(containerName,"luaMessageBox");
 		luaMessageBox.init(lang.get("Yes"),lang.get("No"));
 		luaMessageBox.setEnabled(false);
 		luaMessageBoxState=0;
+		lineHorizontal11.init(currentLabelStart-10, currentLine-5,lineLength,1);
 
 		currentLine-=lineOffset;
 
 		currentLine-=lineOffset/2;
 
 		// buttons
 		buttonOk.registerGraphicComponent(containerName,"buttonOk");
-		buttonOk.init(buttonStartPos, buttonRowPos, 100);
+		buttonOk.init(buttonStartPos, buttonRowPos, 135);
 		buttonOk.setText(lang.get("Save"));
 
 		buttonReturn.registerGraphicComponent(containerName,"buttonAbort");
-		buttonReturn.init(buttonStartPos+110, buttonRowPos, 100);
+		buttonReturn.init(buttonStartPos+145, buttonRowPos, 135);
 		buttonReturn.setText(lang.get("Return"));
 
 		// Transifex related UI
 		currentLine-=lineOffset*4;
+		lineHorizontal12.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelCustomTranslation.registerGraphicComponent(containerName,"labelCustomTranslation");
 		labelCustomTranslation.init(currentLabelStart ,currentLine);
 		labelCustomTranslation.setText(lang.get("CustomTranslation"));
 
 		checkBoxCustomTranslation.registerGraphicComponent(containerName,"checkBoxCustomTranslation");
 		checkBoxCustomTranslation.init(currentColumnStart ,currentLine );
 		checkBoxCustomTranslation.setValue(false);
-		currentLine-=lineOffset;
+		lineHorizontal13.init(currentLabelStart-10, currentLine-5,lineLength,1);
 
+		currentLine-=lineOffset;
 		labelTransifexUserLabel.registerGraphicComponent(containerName,"labelTransifexUserLabel");
 		labelTransifexUserLabel.init(currentLabelStart + 20,currentLine);
 		labelTransifexUserLabel.setText(lang.get("TransifexUserName"));
 
 		labelTransifexPwdLabel.registerGraphicComponent(containerName,"labelTransifexPwdLabel");
 		labelTransifexPwdLabel.init(currentLabelStart + 220 ,currentLine);
 		labelTransifexPwdLabel.setText(lang.get("TransifexPwd"));
 
 		labelTransifexI18NLabel.registerGraphicComponent(containerName,"labelTransifexI18NLabel");
-		labelTransifexI18NLabel.init(currentLabelStart + 380 ,currentLine);
+		labelTransifexI18NLabel.init(currentLabelStart + 220 + 220 ,currentLine);
 		labelTransifexI18NLabel.setText(lang.get("TransifexI18N"));
 
-		currentLine-=lineOffset;
+		currentLine-=(lineOffset-4);
 
 		labelTransifexUser.registerGraphicComponent(containerName,"labelTransifexUser");
 		labelTransifexUser.init(currentLabelStart + 20,currentLine);
-		labelTransifexUser.setMaxEditWidth(60);
-		labelTransifexUser.setMaxEditRenderWidth(120);
-		labelTransifexUser.setText(config.getString("TranslationGetURLUser","<none>"));
+		labelTransifexUser.setMaxEditWidth(25);
+		labelTransifexUser.setMaxEditRenderWidth(185);
+		labelTransifexUser.setText(config.getString("TranslationGetURLUser",">"));
 
 		labelTransifexPwd.registerGraphicComponent(containerName,"labelTransifexPwd");
 		labelTransifexPwd.init(currentLabelStart + 220 ,currentLine);
 		labelTransifexPwd.setIsPassword(true);
-		labelTransifexPwd.setMaxEditWidth(60);
-		labelTransifexPwd.setMaxEditRenderWidth(120);
-		labelTransifexPwd.setText(config.getString("TranslationGetURLPassword",""));
+		labelTransifexPwd.setMaxEditWidth(30);
+		labelTransifexPwd.setMaxEditRenderWidth(205);
+		labelTransifexPwd.setText(config.getString("TranslationGetURLPassword",">"));
 
 		labelTransifexI18N.registerGraphicComponent(containerName,"labelTransifexI18N");
-		labelTransifexI18N.init(currentLabelStart + 380 ,currentLine);
-		labelTransifexI18N.setMaxEditWidth(3);
+		labelTransifexI18N.init(currentLabelStart + 220 + 220 ,currentLine);
+		labelTransifexI18N.setMaxEditWidth(6);
 		labelTransifexI18N.setText(config.getString("TranslationGetURLLanguage","en"));
 		currentLine-=lineOffset;
 
 		buttonGetNewLanguageFiles.registerGraphicComponent(containerName,"buttonGetNewLanguageFiles");
-		buttonGetNewLanguageFiles.init(currentLabelStart+20, currentLine, 200);
+		buttonGetNewLanguageFiles.init(currentLabelStart+20, currentLine, 275);
 		buttonGetNewLanguageFiles.setText(lang.get("TransifexGetLanguageFiles"));
 
 		buttonDeleteNewLanguageFiles.registerGraphicComponent(containerName,"buttonDeleteNewLanguageFiles");
-		buttonDeleteNewLanguageFiles.init(currentLabelStart + 250, currentLine, 200);
+		buttonDeleteNewLanguageFiles.init(currentLabelStart+35+275, currentLine, 275);
 		buttonDeleteNewLanguageFiles.setText(lang.get("TransifexDeleteLanguageFiles"));
 
 		setupTransifexUI();
 
 		GraphicComponent::applyAllCustomProperties(containerName);
 	}
@@ -326,30 +337,30 @@
 
 	console.resetFonts();
 	GraphicComponent::reloadFontsForRegisterGraphicComponents(containerName);
 	mainMessageBox.init(lang.get("Ok"));
 	luaMessageBox.init(lang.get("Yes"),lang.get("No"));
 
-	buttonAudioSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-	buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+	buttonAudioSection.setFont(CoreData::getInstance().getMenuFontBig());
+	buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	buttonAudioSection.setText(lang.get("Audio"));
 
-	buttonVideoSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-	buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+	buttonVideoSection.setFont(CoreData::getInstance().getMenuFontBig());
+	buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	buttonVideoSection.setText(lang.get("Video"));
 
+	buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontBig());
+	buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontBig3D());
+	buttonNetworkSettings.setText(lang.get("Network"));
+
 	buttonMiscSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
 	buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
 	buttonMiscSection.setText(lang.get("Misc"));
 
-	buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontVeryBig());
-	buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
-	buttonNetworkSettings.setText(lang.get("Network"));
-
-	buttonKeyboardSetup.setFont(CoreData::getInstance().getMenuFontVeryBig());
-	buttonKeyboardSetup.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+	buttonKeyboardSetup.setFont(CoreData::getInstance().getMenuFontBig());
+	buttonKeyboardSetup.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	buttonKeyboardSetup.setText(lang.get("Keyboardsetup"));
 
 	labelVisibleHud.setText(lang.get("VisibleHUD"));
 	labelChatStaysActive.setText(lang.get("ChatStaysActive"));
 	labelTimeDisplay.setText(lang.get("TimeDisplay"));
 
@@ -512,28 +523,28 @@
 	else if(buttonKeyboardSetup.mouseClick(x, y)){
 		soundRenderer.playFx(coreData.getClickSoundA());
 		mainMenu->setState(new MenuStateKeysetup(program, mainMenu,this->parentUI)); // open keyboard shortcuts setup screen
 		//showMessageBox("Not implemented yet", "Keyboard setup", false);
 		return;
 	}
-	else if(buttonAudioSection.mouseClick(x, y)){ 
+	else if(buttonAudioSection.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			mainMenu->setState(new MenuStateOptionsSound(program, mainMenu,this->parentUI)); // open keyboard shortcuts setup screen
 			return;
 		}
-	else if(buttonNetworkSettings.mouseClick(x, y)){ 
+	else if(buttonNetworkSettings.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			mainMenu->setState(new MenuStateOptionsNetwork(program, mainMenu,this->parentUI)); // open keyboard shortcuts setup screen
 			return;
 		}
-	else if(buttonMiscSection.mouseClick(x, y)){ 
+	else if(buttonMiscSection.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			//mainMenu->setState(new MenuStateOptions(program, mainMenu,this->parentUI)); // open keyboard shortcuts setup screen
 			return;
 		}
-	else if(buttonVideoSection.mouseClick(x, y)){ 
+	else if(buttonVideoSection.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			mainMenu->setState(new MenuStateOptionsGraphics(program, mainMenu,this->parentUI)); // open keyboard shortcuts setup screen
 			return;
 		}
 	else if(checkBoxCustomTranslation.mouseClick(x, y)) {
 		setupTransifexUI();
@@ -981,14 +992,14 @@
 	{
 		renderer.renderButton(&buttonOk);
 		renderer.renderButton(&buttonReturn);
 		renderer.renderButton(&buttonKeyboardSetup);
 		renderer.renderButton(&buttonVideoSection);
 		renderer.renderButton(&buttonAudioSection);
-		renderer.renderButton(&buttonMiscSection);
 		renderer.renderButton(&buttonNetworkSettings);
+		renderer.renderButton(&buttonMiscSection);
 
 		renderer.renderLabel(&labelCustomTranslation);
 		renderer.renderCheckBox(&checkBoxCustomTranslation);
 
 		if(buttonGetNewLanguageFiles.getEnabled()) renderer.renderButton(&buttonGetNewLanguageFiles);
 		if(buttonDeleteNewLanguageFiles.getEnabled()) renderer.renderButton(&buttonDeleteNewLanguageFiles);
@@ -1003,12 +1014,26 @@
 		renderer.renderLabel(&labelLang);
 		renderer.renderLabel(&labelPlayerNameLabel);
 		renderer.renderLabel(&labelPlayerName);
 		renderer.renderListBox(&listFontSizeAdjustment);
 		renderer.renderLabel(&labelFontSizeAdjustment);
 
+		renderer.renderLine(&lineHorizontal1);
+		renderer.renderLine(&lineHorizontal2);
+		renderer.renderLine(&lineHorizontal3);
+		renderer.renderLine(&lineHorizontal4);
+		renderer.renderLine(&lineHorizontal5);
+		renderer.renderLine(&lineHorizontal6);
+		renderer.renderLine(&lineHorizontal7);
+		renderer.renderLine(&lineHorizontal8);
+		renderer.renderLine(&lineHorizontal9);
+		renderer.renderLine(&lineHorizontal10);
+		renderer.renderLine(&lineHorizontal11);
+		renderer.renderLine(&lineHorizontal12);
+		renderer.renderLine(&lineHorizontal13);
+
         renderer.renderLabel(&labelScreenShotType);
         renderer.renderListBox(&listBoxScreenShotType);
 
         renderer.renderLabel(&labelDisableScreenshotConsoleText);
         renderer.renderCheckBox(&checkBoxDisableScreenshotConsoleText);
 
Index: source/glest_game/menu/menu_state_options.h
===================================================================
--- source/glest_game/menu/menu_state_options.h	(wersja 4583)
+++ source/glest_game/menu/menu_state_options.h	(kopia robocza)
@@ -65,12 +65,26 @@
 	GraphicLabel labelChatStaysActive;
 	GraphicCheckBox checkBoxChatStaysActive;
 
 	GraphicLabel labelLuaDisableSecuritySandbox;
 	GraphicCheckBox checkBoxLuaDisableSecuritySandbox;
 
+	GraphicLine lineHorizontal1;
+	GraphicLine lineHorizontal2;
+	GraphicLine lineHorizontal3;
+	GraphicLine lineHorizontal4;
+	GraphicLine lineHorizontal5;
+	GraphicLine lineHorizontal6;
+	GraphicLine lineHorizontal7;
+	GraphicLine lineHorizontal8;
+	GraphicLine lineHorizontal9;
+	GraphicLine lineHorizontal10;
+	GraphicLine lineHorizontal11;
+	GraphicLine lineHorizontal12;
+	GraphicLine lineHorizontal13;
+
 	GraphicMessageBox luaMessageBox;
 	int luaMessageBoxState;
 
 	map<string,string> languageList;
 
 	GraphicLabel labelCustomTranslation;
Index: source/glest_game/menu/menu_state_options_graphics.cpp
===================================================================
--- source/glest_game/menu/menu_state_options_graphics.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_options_graphics.cpp	(kopia robocza)
@@ -46,74 +46,76 @@
 		Config &config= Config::getInstance();
 		this->console.setOnlyChatMessagesInStoredLines(false);
 		screenModeChangedTimer= time(NULL); // just init
 		//modeinfos=list<ModeInfo> ();
 		Shared::PlatformCommon::getFullscreenVideoModes(&modeInfos,!config.getBool("Windowed"));
 
-		int leftLabelStart=50;
-		int leftColumnStart=leftLabelStart+280;
+		int leftLabelStart=150;
+		int leftColumnStart=leftLabelStart+350;
 		//int rightLabelStart=450;
 		//int rightColumnStart=rightLabelStart+280;
 		int buttonRowPos=50;
-		int buttonStartPos=170;
+		int buttonStartPos=150;
 		//int captionOffset=75;
 		//int currentLabelStart=leftLabelStart;
 		//int currentColumnStart=leftColumnStart;
 		//int currentLine=700;
 		int lineOffset=30;
-		int tabButtonWidth=200;
+		int tabButtonWidth=165;
 		int tabButtonHeight=30;
+		int lineLength=720;
 
 		mainMessageBox.registerGraphicComponent(containerName,"mainMessageBox");
 		mainMessageBox.init(lang.get("Ok"));
 		mainMessageBox.setEnabled(false);
 		mainMessageBoxState=0;
 
 		buttonAudioSection.registerGraphicComponent(containerName,"buttonAudioSection");
-		buttonAudioSection.init(0, 720,tabButtonWidth,tabButtonHeight);
-		buttonAudioSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonAudioSection.init(5, 714,tabButtonWidth,tabButtonHeight);
+		buttonAudioSection.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonAudioSection.setText(lang.get("Audio"));
 		// Video Section
 		buttonVideoSection.registerGraphicComponent(containerName,"labelVideoSection");
-		buttonVideoSection.init(200, 700,tabButtonWidth,tabButtonHeight+20);
+		buttonVideoSection.init(174, 700,tabButtonWidth+50,tabButtonHeight+15);
 		buttonVideoSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
 		buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
 		buttonVideoSection.setText(lang.get("Video"));
 		//currentLine-=lineOffset;
 		//MiscSection
 		buttonMiscSection.registerGraphicComponent(containerName,"labelMiscSection");
-		buttonMiscSection.init(400, 720,tabButtonWidth,tabButtonHeight);
-		buttonMiscSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonMiscSection.init(393, 714,tabButtonWidth,tabButtonHeight);
+		buttonMiscSection.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonMiscSection.setText(lang.get("Misc"));
 		//NetworkSettings
 		buttonNetworkSettings.registerGraphicComponent(containerName,"labelNetworkSettingsSection");
-		buttonNetworkSettings.init(600, 720,tabButtonWidth,tabButtonHeight);
-		buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonNetworkSettings.init(562, 714,tabButtonWidth,tabButtonHeight);
+		buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonNetworkSettings.setText(lang.get("Network"));
 
 		//KeyboardSetup
 		buttonKeyboardSetup.registerGraphicComponent(containerName,"buttonKeyboardSetup");
-		buttonKeyboardSetup.init(800, 720,tabButtonWidth,tabButtonHeight);
-		buttonKeyboardSetup.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonKeyboardSetup.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonKeyboardSetup.init(731, 714,tabButtonWidth+99,tabButtonHeight);
+		buttonKeyboardSetup.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonKeyboardSetup.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonKeyboardSetup.setText(lang.get("Keyboardsetup"));
 
-		int currentLine=650; // reset line pos
+		int currentLine=640; // reset line pos
 		int currentLabelStart=leftLabelStart; // set to right side
 		int currentColumnStart=leftColumnStart; // set to right side
 
 		//resolution
+		lineHorizontal1.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelScreenModes.registerGraphicComponent(containerName,"labelScreenModes");
 		labelScreenModes.init(currentLabelStart, currentLine);
 		labelScreenModes.setText(lang.get("Resolution"));
 
 		listBoxScreenModes.registerGraphicComponent(containerName,"listBoxScreenModes");
-		listBoxScreenModes.init(currentColumnStart, currentLine, 200);
+		listBoxScreenModes.init(currentColumnStart, currentLine, 225);
 
 		string currentResString = config.getString("ScreenWidth") + "x" +
 								  config.getString("ScreenHeight") + "-" +
 								  intToStr(config.getInt("ColorBits"));
 		bool currentResolutionFound = false;
 		for(vector<ModeInfo>::const_iterator it= modeInfos.begin(); it!=modeInfos.end(); ++it){
@@ -127,56 +129,60 @@
 		}
 		listBoxScreenModes.setSelectedItem(currentResString);
 		currentLine-=lineOffset;
 
 
 		//FullscreenWindowed
+		lineHorizontal2.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelFullscreenWindowed.registerGraphicComponent(containerName,"labelFullscreenWindowed");
 		labelFullscreenWindowed.init(currentLabelStart, currentLine);
 
 		checkBoxFullscreenWindowed.registerGraphicComponent(containerName,"checkBoxFullscreenWindowed");
 		checkBoxFullscreenWindowed.init(currentColumnStart, currentLine);
 		labelFullscreenWindowed.setText(lang.get("Windowed"));
 		checkBoxFullscreenWindowed.setValue(config.getBool("Windowed"));
 		currentLine-=lineOffset;
 
 		//gammaCorrection
+		lineHorizontal3.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelGammaCorrection.registerGraphicComponent(containerName,"labelGammaCorrection");
 		labelGammaCorrection.init(currentLabelStart, currentLine);
 		labelGammaCorrection.setText(lang.get("GammaCorrection"));
 
 		listBoxGammaCorrection.registerGraphicComponent(containerName,"listBoxGammaCorrection");
-		listBoxGammaCorrection.init(currentColumnStart, currentLine, 200);
+		listBoxGammaCorrection.init(currentColumnStart, currentLine, 90);
 		for (float f=0.5;f<3.0f;f=f+0.1f) {
 			listBoxGammaCorrection.pushBackItem(floatToStr(f));
 		}
 		float gammaValue=config.getFloat("GammaValue","1.0");
 		if(gammaValue==0.0f) gammaValue=1.0f;
 		listBoxGammaCorrection.setSelectedItem(floatToStr(gammaValue),false);
 
 		currentLine-=lineOffset;
 
 		//filter
+		lineHorizontal4.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelFilter.registerGraphicComponent(containerName,"labelFilter");
 		labelFilter.init(currentLabelStart, currentLine);
 		labelFilter.setText(lang.get("Filter"));
 
 		listBoxFilter.registerGraphicComponent(containerName,"listBoxFilter");
-		listBoxFilter.init(currentColumnStart, currentLine, 200);
+		listBoxFilter.init(currentColumnStart, currentLine, 225);
 		listBoxFilter.pushBackItem("Bilinear");
 		listBoxFilter.pushBackItem("Trilinear");
 		listBoxFilter.setSelectedItem(config.getString("Filter"));
 		currentLine-=lineOffset;
 
 		//selectionType
+		lineHorizontal5.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelSelectionType.registerGraphicComponent(containerName,"labelSelectionType");
 		labelSelectionType.init(currentLabelStart, currentLine);
 		labelSelectionType.setText(lang.get("SelectionType"));
 
 		listBoxSelectionType.registerGraphicComponent(containerName,"listBoxSelectionType");
-		listBoxSelectionType.init(currentColumnStart, currentLine, 200);
+		listBoxSelectionType.init(currentColumnStart, currentLine, 225);
 		listBoxSelectionType.pushBackItem("SelectBuffer (nvidia)");
 		listBoxSelectionType.pushBackItem("ColorPicking (default)");
 		listBoxSelectionType.pushBackItem("FrustumPicking (bad)");
 
 		const string selectionType=toLower(config.getString("SelectionType",Config::colorPicking));
 		if( selectionType==Config::colorPicking)
@@ -185,32 +191,34 @@
 			listBoxSelectionType.setSelectedItemIndex(2);
 		else
 			listBoxSelectionType.setSelectedItemIndex(0);
 		currentLine-=lineOffset;
 
 		//shadows
+		lineHorizontal6.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelShadows.registerGraphicComponent(containerName,"labelShadows");
 		labelShadows.init(currentLabelStart, currentLine);
 		labelShadows.setText(lang.get("Shadows"));
 
 		listBoxShadows.registerGraphicComponent(containerName,"listBoxShadows");
-		listBoxShadows.init(currentColumnStart, currentLine, 200);
+		listBoxShadows.init(currentColumnStart, currentLine, 225);
 		for(int i= 0; i<Renderer::sCount; ++i){
 			listBoxShadows.pushBackItem(lang.get(Renderer::shadowsToStr(static_cast<Renderer::Shadows>(i))));
 		}
 		string str= config.getString("Shadows");
 		listBoxShadows.setSelectedItemIndex(clamp(Renderer::strToShadows(str), 0, Renderer::sCount-1));
 		currentLine-=lineOffset;
 
 		//shadows
+		lineHorizontal7.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelShadowTextureSize.registerGraphicComponent(containerName,"labelShadowTextureSize");
 		labelShadowTextureSize.init(currentLabelStart, currentLine);
 		labelShadowTextureSize.setText(lang.get("ShadowTextureSize"));
 
 		listBoxShadowTextureSize.registerGraphicComponent(containerName,"listBoxShadowTextureSize");
-		listBoxShadowTextureSize.init(currentColumnStart, currentLine, 200);
+		listBoxShadowTextureSize.init(currentColumnStart, currentLine, 90);
 		listBoxShadowTextureSize.pushBackItem("256");
 		listBoxShadowTextureSize.pushBackItem("512");
 		listBoxShadowTextureSize.pushBackItem("1024");
 		listBoxShadowTextureSize.setSelectedItemIndex(1,false);
 		listBoxShadowTextureSize.setSelectedItem(intToStr(config.getInt("ShadowTextureSize","512")),false);
 		currentLine-=lineOffset;
@@ -229,61 +237,66 @@
 		if(shadowIntensity<=0.0f) shadowIntensity=1.0f;
 		listBoxShadowIntensity.setSelectedItem(floatToStr(shadowIntensity),false);
 
 		currentLine-=lineOffset;
 
 		//textures 3d
+		lineHorizontal8.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelTextures3D.registerGraphicComponent(containerName,"labelTextures3D");
 		labelTextures3D.init(currentLabelStart, currentLine);
 
 		checkBoxTextures3D.registerGraphicComponent(containerName,"checkBoxTextures3D");
 		checkBoxTextures3D.init(currentColumnStart, currentLine);
 		labelTextures3D.setText(lang.get("Textures3D"));
 		checkBoxTextures3D.setValue(config.getBool("Textures3D"));
 		currentLine-=lineOffset;
 
 		//lights
+		lineHorizontal9.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelLights.registerGraphicComponent(containerName,"labelLights");
 		labelLights.init(currentLabelStart, currentLine);
 		labelLights.setText(lang.get("MaxLights"));
 
 		listBoxLights.registerGraphicComponent(containerName,"listBoxLights");
-		listBoxLights.init(currentColumnStart, currentLine, 80);
+		listBoxLights.init(currentColumnStart, currentLine, 90);
 		for(int i= 1; i<=8; ++i){
 			listBoxLights.pushBackItem(intToStr(i));
 		}
 		listBoxLights.setSelectedItemIndex(clamp(config.getInt("MaxLights")-1, 0, 7));
 		currentLine-=lineOffset;
 
 		//unit particles
+		lineHorizontal10.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelUnitParticles.registerGraphicComponent(containerName,"labelUnitParticles");
 		labelUnitParticles.init(currentLabelStart,currentLine);
 		labelUnitParticles.setText(lang.get("ShowUnitParticles"));
 
 		checkBoxUnitParticles.registerGraphicComponent(containerName,"checkBoxUnitParticles");
 		checkBoxUnitParticles.init(currentColumnStart,currentLine);
 		checkBoxUnitParticles.setValue(config.getBool("UnitParticles","true"));
 		currentLine-=lineOffset;
 
 		//tileset particles
+		lineHorizontal11.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelTilesetParticles.registerGraphicComponent(containerName,"labelTilesetParticles");
 		labelTilesetParticles.init(currentLabelStart,currentLine);
 		labelTilesetParticles.setText(lang.get("ShowTilesetParticles"));
 
 		checkBoxTilesetParticles.registerGraphicComponent(containerName,"checkBoxTilesetParticles");
 		checkBoxTilesetParticles.init(currentColumnStart,currentLine);
 		checkBoxTilesetParticles.setValue(config.getBool("TilesetParticles","true"));
 		currentLine-=lineOffset;
 
 		//animated tileset objects
+		lineHorizontal12.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelAnimatedTilesetObjects.registerGraphicComponent(containerName,"labelAnimatedTilesetObjects");
 		labelAnimatedTilesetObjects.init(currentLabelStart,currentLine);
 		labelAnimatedTilesetObjects.setText(lang.get("AnimatedTilesetObjects"));
 
 		listBoxAnimatedTilesetObjects.registerGraphicComponent(containerName,"listBoxAnimatedTilesetObjects");
-		listBoxAnimatedTilesetObjects.init(currentColumnStart, currentLine, 80);
+		listBoxAnimatedTilesetObjects.init(currentColumnStart, currentLine, 90);
 		listBoxAnimatedTilesetObjects.pushBackItem("0");
 		listBoxAnimatedTilesetObjects.pushBackItem("10");
 		listBoxAnimatedTilesetObjects.pushBackItem("25");
 		listBoxAnimatedTilesetObjects.pushBackItem("50");
 		listBoxAnimatedTilesetObjects.pushBackItem("100");
 		listBoxAnimatedTilesetObjects.pushBackItem("300");
@@ -291,31 +304,34 @@
 		listBoxAnimatedTilesetObjects.pushBackItem("∞");
 		listBoxAnimatedTilesetObjects.setSelectedItem("∞",true);
 		listBoxAnimatedTilesetObjects.setSelectedItem(config.getString("AnimatedTilesetObjects","-1"),false);
 		currentLine-=lineOffset;
 
 		//unit particles
+		lineHorizontal13.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelMapPreview.registerGraphicComponent(containerName,"labelMapPreview");
 		labelMapPreview.init(currentLabelStart,currentLine);
 		labelMapPreview.setText(lang.get("ShowMapPreview"));
 
 		checkBoxMapPreview.registerGraphicComponent(containerName,"checkBoxMapPreview");
 		checkBoxMapPreview.init(currentColumnStart,currentLine);
 		checkBoxMapPreview.setValue(config.getBool("MapPreview","true"));
 		currentLine-=lineOffset;
 
 		// Texture Compression flag
+		lineHorizontal14.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelEnableTextureCompression.registerGraphicComponent(containerName,"labelEnableTextureCompression");
 		labelEnableTextureCompression.init(currentLabelStart ,currentLine);
 		labelEnableTextureCompression.setText(lang.get("EnableTextureCompression"));
 
 		checkBoxEnableTextureCompression.registerGraphicComponent(containerName,"checkBoxEnableTextureCompression");
 		checkBoxEnableTextureCompression.init(currentColumnStart ,currentLine );
 		checkBoxEnableTextureCompression.setValue(config.getBool("EnableTextureCompression","false"));
 		currentLine-=lineOffset;
 
+		lineHorizontal15.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelRainEffect.registerGraphicComponent(containerName,"labelRainEffect");
 		labelRainEffect.init(currentLabelStart ,currentLine);
 		labelRainEffect.setText(lang.get("RainEffectMenuGame"));
 
 		checkBoxRainEffectMenu.registerGraphicComponent(containerName,"checkBoxRainEffectMenu");
 		checkBoxRainEffectMenu.init(currentColumnStart ,currentLine );
@@ -327,41 +343,43 @@
 
 		checkBoxRainEffect.registerGraphicComponent(containerName,"checkBoxRainEffect");
 		checkBoxRainEffect.init(currentColumnStart+42 ,currentLine );
 		checkBoxRainEffect.setValue(config.getBool("RainEffect","true"));
 		currentLine-=lineOffset;
 
+		lineHorizontal16.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelVideos.registerGraphicComponent(containerName,"labelVideos");
 		labelVideos.init(currentLabelStart ,currentLine);
 		labelVideos.setText(lang.get("EnableVideos"));
 
 		checkBoxVideos.registerGraphicComponent(containerName,"checkBoxVideos");
 		checkBoxVideos.init(currentColumnStart ,currentLine );
 		checkBoxVideos.setValue(config.getBool("EnableVideos","true"));
+		lineHorizontal17.init(currentLabelStart-10, currentLine-5,lineLength,1);
 
 		// end
 
 		// external server port
 		//currentLine-=lineOffset;
 
 		// buttons
 		buttonOk.registerGraphicComponent(containerName,"buttonOk");
-		buttonOk.init(buttonStartPos, buttonRowPos, 100);
+		buttonOk.init(buttonStartPos, buttonRowPos, 135);
 		buttonOk.setText(lang.get("Save"));
 		buttonReturn.setText(lang.get("Return"));
 
 		buttonReturn.registerGraphicComponent(containerName,"buttonAbort");
-		buttonReturn.init(buttonStartPos+110, buttonRowPos, 100);
+		buttonReturn.init(buttonStartPos+145, buttonRowPos, 135);
 		buttonAutoConfig.setText(lang.get("AutoConfig"));
 
 		buttonAutoConfig.registerGraphicComponent(containerName,"buttonAutoConfig");
-		buttonAutoConfig.init(buttonStartPos+250, buttonRowPos, 125);
+		buttonAutoConfig.init(buttonStartPos+145+145+20, buttonRowPos, 200);
 
 		buttonVideoInfo.setText(lang.get("VideoInfo"));
 		buttonVideoInfo.registerGraphicComponent(containerName,"buttonVideoInfo");
-		buttonVideoInfo.init(buttonStartPos+385, buttonRowPos, 125); // was 620
+		buttonVideoInfo.init(buttonStartPos+145+145+20+210, buttonRowPos, 200); // was 620
 
 		GraphicComponent::applyAllCustomProperties(containerName);
 	}
 	catch(exception &e) {
 		SystemFlags::OutputDebug(SystemFlags::debugError,"In [%s::%s Line: %d] Error loading options: %s\n",__FILE__,__FUNCTION__,__LINE__,e.what());
 		throw megaglest_runtime_error(string("Error loading options msg: ") + e.what());
@@ -371,26 +389,26 @@
 void MenuStateOptionsGraphics::reloadUI() {
 	Lang &lang= Lang::getInstance();
 
 	console.resetFonts();
 	mainMessageBox.init(lang.get("Ok"));
 
-	buttonAudioSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-	buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+	buttonAudioSection.setFont(CoreData::getInstance().getMenuFontBig());
+	buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	buttonAudioSection.setText(lang.get("Audio"));
 
 	buttonVideoSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
 	buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
 	buttonVideoSection.setText(lang.get("Video"));
 
-	buttonMiscSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-	buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+	buttonMiscSection.setFont(CoreData::getInstance().getMenuFontBig());
+	buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	buttonMiscSection.setText(lang.get("Misc"));
 
-	buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontVeryBig());
-	buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+	buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontBig());
+	buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	buttonNetworkSettings.setText(lang.get("Network"));
 
 	std::vector<string> listboxData;
 	listboxData.push_back("None");
 	listboxData.push_back("OpenAL");
 // deprecated as of 3.6.1
@@ -405,18 +423,18 @@
 
 	listboxData.clear();
 	listboxData.push_back("Bilinear");
 	listboxData.push_back("Trilinear");
 	listBoxFilter.setItems(listboxData);
 
-	listboxData.clear();
-	for (float f=0.0;f<2.1f;f=f+0.1f) {
-		listboxData.push_back(floatToStr(f));
-	}
-	listBoxGammaCorrection.setItems(listboxData);
-
+	// > this fragment incorretctly sets Brigtness to "0.00"
+	//listboxData.clear();
+	//for (float f=0.0;f<2.1f;f=f+0.1f) {
+	//	listboxData.push_back(floatToStr(f));
+	//}
+	//listBoxGammaCorrection.setItems(listboxData);
 
 	listboxData.clear();
 	for (float f=0.5;f<3.0f;f=f+0.1f) {
 		listboxData.push_back(floatToStr(f));
 	}
 	listBoxShadowIntensity.setItems(listboxData);
@@ -442,13 +460,13 @@
 
 	labelMapPreview.setText(lang.get("ShowMapPreview"));
 
 	labelEnableTextureCompression.setText(lang.get("EnableTextureCompression"));
 
 
-	labelRainEffect.setText(lang.get("RainEffect"));
+	labelRainEffect.setText(lang.get("RainEffectMenuGame"));
 
 	labelVideos.setText(lang.get("EnableVideos"));
 
 	buttonOk.setText(lang.get("Save"));
 	buttonReturn.setText(lang.get("Return"));
 
@@ -643,28 +661,28 @@
 		//mainMenu->setState(new MenuStateOptionsGraphics(program, mainMenu)); // open keyboard shortcuts setup screen
 		//mainMenu->setState(new MenuStateOptionsNetwork(program, mainMenu)); // open keyboard shortcuts setup screen
 		mainMenu->setState(new MenuStateKeysetup(program, mainMenu,this->parentUI)); // open keyboard shortcuts setup screen
 		//showMessageBox("Not implemented yet", "Keyboard setup", false);
 		return;
 	}
-	else if(buttonAudioSection.mouseClick(x, y)){ 
+	else if(buttonAudioSection.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			mainMenu->setState(new MenuStateOptionsSound(program, mainMenu,this->parentUI)); // open keyboard shortcuts setup screen
 			return;
 		}
-	else if(buttonNetworkSettings.mouseClick(x, y)){ 
+	else if(buttonNetworkSettings.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			mainMenu->setState(new MenuStateOptionsNetwork(program, mainMenu,this->parentUI)); // open keyboard shortcuts setup screen
 			return;
 		}
-	else if(buttonMiscSection.mouseClick(x, y)){ 
+	else if(buttonMiscSection.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			mainMenu->setState(new MenuStateOptions(program, mainMenu,this->parentUI)); // open keyboard shortcuts setup screen
 			return;
 		}
-	else if(buttonVideoSection.mouseClick(x, y)){ 
+	else if(buttonVideoSection.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			//mainMenu->setState(new MenuStateOptionsGraphics(program, mainMenu,this->parentUI)); // open keyboard shortcuts setup screen
 			return;
 		}
 	else if(buttonAutoConfig.mouseClick(x, y)){
 		soundRenderer.playFx(coreData.getClickSoundA());
@@ -830,12 +848,30 @@
 
 		renderer.renderLabel(&labelSelectionType);
 		renderer.renderListBox(&listBoxSelectionType);
 
         renderer.renderLabel(&labelVideos);
         renderer.renderCheckBox(&checkBoxVideos);
+
+		renderer.renderLine(&lineHorizontal1);
+		renderer.renderLine(&lineHorizontal2);
+		renderer.renderLine(&lineHorizontal3);
+		renderer.renderLine(&lineHorizontal4);
+		renderer.renderLine(&lineHorizontal5);
+		renderer.renderLine(&lineHorizontal6);
+		renderer.renderLine(&lineHorizontal7);
+		renderer.renderLine(&lineHorizontal8);
+		renderer.renderLine(&lineHorizontal9);
+		renderer.renderLine(&lineHorizontal10);
+		renderer.renderLine(&lineHorizontal11);
+		renderer.renderLine(&lineHorizontal12);
+		renderer.renderLine(&lineHorizontal13);
+		renderer.renderLine(&lineHorizontal14);
+		renderer.renderLine(&lineHorizontal15);
+		renderer.renderLine(&lineHorizontal16);
+		renderer.renderLine(&lineHorizontal17);
 	}
 
 	renderer.renderConsole(&console,false,true);
 	if(program != NULL) program->renderProgramMsgBox();
 }
 
Index: source/glest_game/menu/menu_state_options_graphics.h
===================================================================
--- source/glest_game/menu/menu_state_options_graphics.h	(wersja 4583)
+++ source/glest_game/menu/menu_state_options_graphics.h	(kopia robocza)
@@ -86,12 +86,30 @@
 	GraphicLabel labelVideos;
 	GraphicCheckBox checkBoxVideos;
 
 	GraphicLabel labelSelectionType;
 	GraphicListBox listBoxSelectionType;
 
+	GraphicLine lineHorizontal1;
+	GraphicLine lineHorizontal2;
+	GraphicLine lineHorizontal3;
+	GraphicLine lineHorizontal4;
+	GraphicLine lineHorizontal5;
+	GraphicLine lineHorizontal6;
+	GraphicLine lineHorizontal7;
+	GraphicLine lineHorizontal8;
+	GraphicLine lineHorizontal9;
+	GraphicLine lineHorizontal10;
+	GraphicLine lineHorizontal11;
+	GraphicLine lineHorizontal12;
+	GraphicLine lineHorizontal13;
+	GraphicLine lineHorizontal14;
+	GraphicLine lineHorizontal15;
+	GraphicLine lineHorizontal16;
+	GraphicLine lineHorizontal17;
+
 	ProgramState **parentUI;
 	time_t screenModeChangedTimer;
 
 public:
 	MenuStateOptionsGraphics(Program *program, MainMenu *mainMenu, ProgramState **parentUI=NULL);
 
Index: source/glest_game/menu/menu_state_options_network.cpp
===================================================================
--- source/glest_game/menu/menu_state_options_network.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_options_network.cpp	(kopia robocza)
@@ -42,91 +42,94 @@
 		containerName = "Options";
 		Lang &lang= Lang::getInstance();
 		Config &config= Config::getInstance();
 		this->parentUI=parentUI;
 		this->console.setOnlyChatMessagesInStoredLines(false);
 		//modeinfos=list<ModeInfo> ();
-		int leftLabelStart=50;
-		int leftColumnStart=leftLabelStart+280;
+		int leftLabelStart=150;
+		int leftColumnStart=leftLabelStart+350;
 		//int rightLabelStart=450;
 		//int rightColumnStart=rightLabelStart+280;
 		int buttonRowPos=50;
-		int buttonStartPos=170;
+		int buttonStartPos=150;
 		//int captionOffset=75;
 		//int currentLabelStart=leftLabelStart;
 		//int currentColumnStart=leftColumnStart;
 		//int currentLine=700;
 		int lineOffset=30;
-		int tabButtonWidth=200;
+		int tabButtonWidth=165;
 		int tabButtonHeight=30;
+		int lineLength=720;
 
 		mainMessageBox.registerGraphicComponent(containerName,"mainMessageBox");
 		mainMessageBox.init(lang.get("Ok"));
 		mainMessageBox.setEnabled(false);
 		mainMessageBoxState=0;
 
 		buttonAudioSection.registerGraphicComponent(containerName,"buttonAudioSection");
-		buttonAudioSection.init(0, 720,tabButtonWidth,tabButtonHeight);
-		buttonAudioSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonAudioSection.init(5, 714,tabButtonWidth,tabButtonHeight);
+		buttonAudioSection.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonAudioSection.setText(lang.get("Audio"));
 		// Video Section
 		buttonVideoSection.registerGraphicComponent(containerName,"labelVideoSection");
-		buttonVideoSection.init(200, 720,tabButtonWidth,tabButtonHeight);
-		buttonVideoSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonVideoSection.init(174, 714,tabButtonWidth,tabButtonHeight);
+		buttonVideoSection.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonVideoSection.setText(lang.get("Video"));
 		//currentLine-=lineOffset;
 		//MiscSection
 		buttonMiscSection.registerGraphicComponent(containerName,"labelMiscSection");
-		buttonMiscSection.init(400, 720,tabButtonWidth,tabButtonHeight);
-		buttonMiscSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonMiscSection.init(343, 714,tabButtonWidth,tabButtonHeight);
+		buttonMiscSection.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonMiscSection.setText(lang.get("Misc"));
 		//NetworkSettings
 		buttonNetworkSettings.registerGraphicComponent(containerName,"labelNetworkSettingsSection");
-		buttonNetworkSettings.init(600, 700,tabButtonWidth,tabButtonHeight+20);
+		buttonNetworkSettings.init(512, 700,tabButtonWidth+50,tabButtonHeight+15);
 		buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontVeryBig());
 		buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
 		buttonNetworkSettings.setText(lang.get("Network"));
 
 		//KeyboardSetup
 		buttonKeyboardSetup.registerGraphicComponent(containerName,"buttonKeyboardSetup");
-		buttonKeyboardSetup.init(800, 720,tabButtonWidth,tabButtonHeight);
-		buttonKeyboardSetup.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonKeyboardSetup.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonKeyboardSetup.init(731, 714,tabButtonWidth+99,tabButtonHeight);
+		buttonKeyboardSetup.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonKeyboardSetup.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonKeyboardSetup.setText(lang.get("Keyboardsetup"));
 
-		int currentLine=650; // reset line pos
+		int currentLine=640; // reset line pos
 		int currentLabelStart=leftLabelStart; // set to right side
 		int currentColumnStart=leftColumnStart; // set to right side
 
 
 		// external server port
+		lineHorizontal1.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelPublishServerExternalPort.registerGraphicComponent(containerName,"labelPublishServerExternalPort");
 		labelPublishServerExternalPort.init(currentLabelStart, currentLine, 150);
 		labelPublishServerExternalPort.setText(lang.get("PublishServerExternalPort"));
 
 		labelExternalPort.init(currentColumnStart,currentLine);
 		string extPort= config.getString("PortExternal","not set");
 		if(extPort == "not set" || extPort == "0"){
-			extPort="   ---   ";
+			extPort="---   ";
 		}
 		else{
 			extPort="!!! "+extPort+" !!!";
 		}
 		labelExternalPort.setText(extPort);
 
 		currentLine-=lineOffset;
 		// server port
+		lineHorizontal2.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelServerPortLabel.registerGraphicComponent(containerName,"labelServerPortLabel");
 		labelServerPortLabel.init(currentLabelStart,currentLine);
 		labelServerPortLabel.setText(lang.get("ServerPort"));
 
 		listBoxServerPort.registerGraphicComponent(containerName,"listBoxPublishServerExternalPort");
-		listBoxServerPort.init(currentColumnStart, currentLine, 170);
+		listBoxServerPort.init(currentColumnStart, currentLine, 150);
 
 		string portListString = config.getString("PortList",intToStr(GameConstants::serverPort).c_str());
 		std::vector<std::string> portList;
 		Tokenize(portListString,portList,",");
 
 		string currentPort=config.getString("PortServer", intToStr(GameConstants::serverPort).c_str());
@@ -140,92 +143,99 @@
 				}
 			}
 		}
 		listBoxServerPort.setSelectedItemIndex(portSelectionIndex);
 
 		currentLine-=lineOffset;
+		lineHorizontal3.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelFTPServerPortLabel.registerGraphicComponent(containerName,"labelFTPServerPortLabel");
 		labelFTPServerPortLabel.init(currentLabelStart ,currentLine );
 		labelFTPServerPortLabel.setText(lang.get("FTPServerPort"));
 
 		int FTPPort = config.getInt("FTPServerPort",intToStr(ServerSocket::getFTPServerPort()).c_str());
 		labelFTPServerPort.registerGraphicComponent(containerName,"labelFTPServerPort");
 		labelFTPServerPort.init(currentColumnStart ,currentLine );
 		labelFTPServerPort.setText(intToStr(FTPPort));
+
 		currentLine-=lineOffset;
+		lineHorizontal4.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelFTPServerDataPortsLabel.registerGraphicComponent(containerName,"labelFTPServerDataPortsLabel");
 		labelFTPServerDataPortsLabel.init(currentLabelStart ,currentLine );
 		labelFTPServerDataPortsLabel.setText(lang.get("FTPServerDataPort"));
 
 		char szBuf[8096]="";
 		snprintf(szBuf,8096,"%d - %d",FTPPort + 1, FTPPort + GameConstants::maxPlayers);
 
 		labelFTPServerDataPorts.registerGraphicComponent(containerName,"labelFTPServerDataPorts");
 		labelFTPServerDataPorts.init(currentColumnStart,currentLine );
 		labelFTPServerDataPorts.setText(szBuf);
+
 		currentLine-=lineOffset;
+		lineHorizontal5.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelEnableFTPServer.registerGraphicComponent(containerName,"labelEnableFTPServer");
 		labelEnableFTPServer.init(currentLabelStart ,currentLine);
 		labelEnableFTPServer.setText(lang.get("EnableFTPServer"));
 
 		checkBoxEnableFTPServer.registerGraphicComponent(containerName,"checkBoxEnableFTPServer");
 		checkBoxEnableFTPServer.init(currentColumnStart ,currentLine );
 		checkBoxEnableFTPServer.setValue(config.getBool("EnableFTPServer","true"));
+
 		currentLine-=lineOffset;
 		// FTP Config - start
+		lineHorizontal6.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelEnableFTP.registerGraphicComponent(containerName,"labelEnableFTP");
 		labelEnableFTP.init(currentLabelStart ,currentLine);
 		labelEnableFTP.setText(lang.get("EnableFTP"));
 
 		checkBoxEnableFTP.registerGraphicComponent(containerName,"checkBoxEnableFTP");
 		checkBoxEnableFTP.init(currentColumnStart ,currentLine );
 		checkBoxEnableFTP.setValue(config.getBool("EnableFTPXfer","true"));
-		currentLine-=lineOffset;
 
+		currentLine-=lineOffset;
+		lineHorizontal7.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelEnableFTPServerInternetTilesetXfer.registerGraphicComponent(containerName,"labelEnableFTPServerInternetTilesetXfer");
 		labelEnableFTPServerInternetTilesetXfer.init(currentLabelStart ,currentLine );
 		labelEnableFTPServerInternetTilesetXfer.setText(lang.get("EnableFTPServerInternetTilesetXfer"));
 
 		checkBoxEnableFTPServerInternetTilesetXfer.registerGraphicComponent(containerName,"checkBoxEnableFTPServerInternetTilesetXfer");
 		checkBoxEnableFTPServerInternetTilesetXfer.init(currentColumnStart ,currentLine );
 		checkBoxEnableFTPServerInternetTilesetXfer.setValue(config.getBool("EnableFTPServerInternetTilesetXfer","true"));
 
 		currentLine-=lineOffset;
-
+		lineHorizontal8.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelEnableFTPServerInternetTechtreeXfer.registerGraphicComponent(containerName,"labelEnableFTPServerInternetTechtreeXfer");
 		labelEnableFTPServerInternetTechtreeXfer.init(currentLabelStart ,currentLine );
 		labelEnableFTPServerInternetTechtreeXfer.setText(lang.get("EnableFTPServerInternetTechtreeXfer"));
 
 		checkBoxEnableFTPServerInternetTechtreeXfer.registerGraphicComponent(containerName,"checkBoxEnableFTPServerInternetTechtreeXfer");
 		checkBoxEnableFTPServerInternetTechtreeXfer.init(currentColumnStart ,currentLine );
 		checkBoxEnableFTPServerInternetTechtreeXfer.setValue(config.getBool("EnableFTPServerInternetTechtreeXfer","true"));
 
 		currentLine-=lineOffset;
-
-
 		// FTP config end
-
 		// Privacy flag
+		lineHorizontal9.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelEnablePrivacy.registerGraphicComponent(containerName,"labelEnablePrivacy");
 		labelEnablePrivacy.init(currentLabelStart ,currentLine);
 		labelEnablePrivacy.setText(lang.get("PrivacyPlease"));
 
 		checkBoxEnablePrivacy.registerGraphicComponent(containerName,"checkBoxEnablePrivacy");
 		checkBoxEnablePrivacy.init(currentColumnStart ,currentLine );
 		checkBoxEnablePrivacy.setValue(config.getBool("PrivacyPlease","false"));
+		lineHorizontal10.init(currentLabelStart-10, currentLine-5,lineLength,1);
 		//currentLine-=lineOffset;
 		// end
 
 		// buttons
 		buttonOk.registerGraphicComponent(containerName,"buttonOk");
-		buttonOk.init(buttonStartPos, buttonRowPos, 100);
+		buttonOk.init(buttonStartPos, buttonRowPos, 135);
 		buttonOk.setText(lang.get("Save"));
 		buttonReturn.setText(lang.get("Return"));
 
 		buttonReturn.registerGraphicComponent(containerName,"buttonAbort");
-		buttonReturn.init(buttonStartPos+110, buttonRowPos, 100);
+		buttonReturn.init(buttonStartPos+145, buttonRowPos, 135);
 
 		GraphicComponent::applyAllCustomProperties(containerName);
 	}
 	catch(exception &e) {
 		SystemFlags::OutputDebug(SystemFlags::debugError,"In [%s::%s Line: %d] Error loading options: %s\n",__FILE__,__FUNCTION__,__LINE__,e.what());
 		throw megaglest_runtime_error(string("Error loading options msg: ") + e.what());
@@ -235,22 +245,22 @@
 void MenuStateOptionsNetwork::reloadUI() {
 	Lang &lang= Lang::getInstance();
 
 	console.resetFonts();
 	mainMessageBox.init(lang.get("Ok"));
 
-	buttonAudioSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-	buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+	buttonAudioSection.setFont(CoreData::getInstance().getMenuFontBig());
+	buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	buttonAudioSection.setText(lang.get("Audio"));
 
-	buttonVideoSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-	buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+	buttonVideoSection.setFont(CoreData::getInstance().getMenuFontBig());
+	buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	buttonVideoSection.setText(lang.get("Video"));
 
-	buttonMiscSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-	buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+	buttonMiscSection.setFont(CoreData::getInstance().getMenuFontBig());
+	buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	buttonMiscSection.setText(lang.get("Misc"));
 
 	buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontVeryBig());
 	buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
 	buttonNetworkSettings.setText(lang.get("Network"));
 
@@ -359,28 +369,28 @@
 			*this->parentUI = NULL;
 			delete *this->parentUI;
 		}
 		mainMenu->setState(new MenuStateRoot(program, mainMenu));
 		return;
     }
-	else if(buttonAudioSection.mouseClick(x, y)){ 
+	else if(buttonAudioSection.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			mainMenu->setState(new MenuStateOptionsSound(program, mainMenu,this->parentUI)); // open keyboard shortcuts setup screen
 			return;
 		}
-	else if(buttonNetworkSettings.mouseClick(x, y)){ 
+	else if(buttonNetworkSettings.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			//mainMenu->setState(new MenuStateOptionsNetwork(program, mainMenu,this->parentUI)); // open keyboard shortcuts setup screen
 			return;
 		}
-	else if(buttonMiscSection.mouseClick(x, y)){ 
+	else if(buttonMiscSection.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			mainMenu->setState(new MenuStateOptions(program, mainMenu,this->parentUI)); // open keyboard shortcuts setup screen
 			return;
 		}
-	else if(buttonVideoSection.mouseClick(x, y)){ 
+	else if(buttonVideoSection.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			mainMenu->setState(new MenuStateOptionsGraphics(program, mainMenu,this->parentUI)); // open keyboard shortcuts setup screen
 			return;
 		}
 	else if(buttonKeyboardSetup.mouseClick(x, y)){
 		soundRenderer.playFx(coreData.getClickSoundA());
@@ -499,12 +509,23 @@
         renderer.renderLabel(&labelEnableFTPServerInternetTechtreeXfer);
         renderer.renderCheckBox(&checkBoxEnableFTPServerInternetTechtreeXfer);
 
         renderer.renderLabel(&labelEnablePrivacy);
         renderer.renderCheckBox(&checkBoxEnablePrivacy);
 
+	renderer.renderLine(&lineHorizontal1);
+	renderer.renderLine(&lineHorizontal2);
+	renderer.renderLine(&lineHorizontal3);
+	renderer.renderLine(&lineHorizontal4);
+	renderer.renderLine(&lineHorizontal5);
+	renderer.renderLine(&lineHorizontal6);
+	renderer.renderLine(&lineHorizontal7);
+	renderer.renderLine(&lineHorizontal8);
+	renderer.renderLine(&lineHorizontal9);
+	renderer.renderLine(&lineHorizontal10);
+
 	}
 
 	renderer.renderConsole(&console,false,true);
 	if(program != NULL) program->renderProgramMsgBox();
 }
 
Index: source/glest_game/menu/menu_state_options_network.h
===================================================================
--- source/glest_game/menu/menu_state_options_network.h	(wersja 4583)
+++ source/glest_game/menu/menu_state_options_network.h	(kopia robocza)
@@ -61,12 +61,23 @@
 	GraphicLabel labelEnableFTPServerInternetTechtreeXfer;
 	GraphicCheckBox checkBoxEnableFTPServerInternetTechtreeXfer;
 
 	GraphicLabel labelEnablePrivacy;
 	GraphicCheckBox checkBoxEnablePrivacy;
 
+	GraphicLine lineHorizontal1;
+	GraphicLine lineHorizontal2;
+	GraphicLine lineHorizontal3;
+	GraphicLine lineHorizontal4;
+	GraphicLine lineHorizontal5;
+	GraphicLine lineHorizontal6;
+	GraphicLine lineHorizontal7;
+	GraphicLine lineHorizontal8;
+	GraphicLine lineHorizontal9;
+	GraphicLine lineHorizontal10;
+
 	ProgramState **parentUI;
 
 public:
 	MenuStateOptionsNetwork(Program *program, MainMenu *mainMenu, ProgramState **parentUI=NULL);
 
 	void mouseClick(int x, int y, MouseButton mouseButton);
Index: source/glest_game/menu/menu_state_options_sound.cpp
===================================================================
--- source/glest_game/menu/menu_state_options_sound.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_options_sound.cpp	(kopia robocza)
@@ -42,106 +42,112 @@
 		containerName = "Options";
 		this->parentUI=parentUI;
 		Lang &lang= Lang::getInstance();
 		Config &config= Config::getInstance();
 		this->console.setOnlyChatMessagesInStoredLines(false);
 
-		int leftLabelStart=50;
-		int leftColumnStart=leftLabelStart+280;
+		int leftLabelStart=150;
+		int leftColumnStart=leftLabelStart+350;
 		//int rightLabelStart=450;
 		//int rightColumnStart=rightLabelStart+280;
 		int buttonRowPos=50;
-		int buttonStartPos=170;
+		int buttonStartPos=150;
 		//int captionOffset=75;
 		//int currentLabelStart=leftLabelStart;
 		//int currentColumnStart=leftColumnStart;
 		//int currentLine=700;
 		int lineOffset=30;
-		int tabButtonWidth=200;
+		int tabButtonWidth=165;
 		int tabButtonHeight=30;
+		int lineLength=720;
 
 		mainMessageBox.registerGraphicComponent(containerName,"mainMessageBox");
 		mainMessageBox.init(lang.get("Ok"));
 		mainMessageBox.setEnabled(false);
 		mainMessageBoxState=0;
 
 		buttonAudioSection.registerGraphicComponent(containerName,"buttonAudioSection");
-		buttonAudioSection.init(0, 700,tabButtonWidth,tabButtonHeight+20);
+		buttonAudioSection.init(5, 700,tabButtonWidth+50,tabButtonHeight+15);
 		buttonAudioSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
 		buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
 		buttonAudioSection.setText(lang.get("Audio"));
 		// Video Section
 		buttonVideoSection.registerGraphicComponent(containerName,"labelVideoSection");
-		buttonVideoSection.init(200, 720,tabButtonWidth,tabButtonHeight);
-		buttonVideoSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonVideoSection.init(224, 714,tabButtonWidth,tabButtonHeight);
+		buttonVideoSection.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonVideoSection.setText(lang.get("Video"));
 		//currentLine-=lineOffset;
 		//MiscSection
 		buttonMiscSection.registerGraphicComponent(containerName,"labelMiscSection");
-		buttonMiscSection.init(400, 720,tabButtonWidth,tabButtonHeight);
-		buttonMiscSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonMiscSection.init(393, 714,tabButtonWidth,tabButtonHeight);
+		buttonMiscSection.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonMiscSection.setText(lang.get("Misc"));
 		//NetworkSettings
 		buttonNetworkSettings.registerGraphicComponent(containerName,"labelNetworkSettingsSection");
-		buttonNetworkSettings.init(600, 720,tabButtonWidth,tabButtonHeight);
-		buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonNetworkSettings.init(562, 714,tabButtonWidth,tabButtonHeight);
+		buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonNetworkSettings.setText(lang.get("Network"));
 
 		//KeyboardSetup
 		buttonKeyboardSetup.registerGraphicComponent(containerName,"buttonKeyboardSetup");
-		buttonKeyboardSetup.init(800, 720,tabButtonWidth,tabButtonHeight);
-		buttonKeyboardSetup.setFont(CoreData::getInstance().getMenuFontVeryBig());
-		buttonKeyboardSetup.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+		buttonKeyboardSetup.init(731, 714,tabButtonWidth+99,tabButtonHeight);
+		buttonKeyboardSetup.setFont(CoreData::getInstance().getMenuFontBig());
+		buttonKeyboardSetup.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 		buttonKeyboardSetup.setText(lang.get("Keyboardsetup"));
 
-		int currentLine=650; // reset line pos
+		int currentLine=640; // reset line pos
 		int currentLabelStart=leftLabelStart; // set to right side
 		int currentColumnStart=leftColumnStart; // set to right side
 
 		//soundboxes
+		lineHorizontal1.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelSoundFactory.registerGraphicComponent(containerName,"labelSoundFactory");
 		labelSoundFactory.init(currentLabelStart, currentLine);
 		labelSoundFactory.setText(lang.get("SoundAndMusic"));
 
 		listBoxSoundFactory.registerGraphicComponent(containerName,"listBoxSoundFactory");
-		listBoxSoundFactory.init(currentColumnStart, currentLine, 100);
-		listBoxSoundFactory.pushBackItem("None");
+		listBoxSoundFactory.init(currentColumnStart, currentLine, 175);
+		listBoxSoundFactory.pushBackItem(lang.get("None"));
 		listBoxSoundFactory.pushBackItem("OpenAL");
 	// deprecated as of 3.6.1
 	//#ifdef WIN32
 		//listBoxSoundFactory.pushBackItem("DirectSound8");
 	//#endif
 
 		listBoxSoundFactory.setSelectedItem(config.getString("FactorySound"));
 		currentLine-=lineOffset;
 
+		lineHorizontal2.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelVolumeFx.registerGraphicComponent(containerName,"labelVolumeFx");
 		labelVolumeFx.init(currentLabelStart, currentLine);
 		labelVolumeFx.setText(lang.get("FxVolume"));
 
 		listBoxVolumeFx.registerGraphicComponent(containerName,"listBoxVolumeFx");
 		listBoxVolumeFx.init(currentColumnStart, currentLine, 80);
 		currentLine-=lineOffset;
 
+		lineHorizontal3.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelVolumeAmbient.registerGraphicComponent(containerName,"labelVolumeAmbient");
 		labelVolumeAmbient.init(currentLabelStart, currentLine);
 
 		listBoxVolumeAmbient.registerGraphicComponent(containerName,"listBoxVolumeAmbient");
 		listBoxVolumeAmbient.init(currentColumnStart, currentLine, 80);
 		labelVolumeAmbient.setText(lang.get("AmbientVolume"));
 		currentLine-=lineOffset;
 
+		lineHorizontal4.init(currentLabelStart-10, currentLine+25,lineLength,1);
 		labelVolumeMusic.registerGraphicComponent(containerName,"labelVolumeMusic");
 		labelVolumeMusic.init(currentLabelStart, currentLine);
 
 		listBoxVolumeMusic.registerGraphicComponent(containerName,"listBoxVolumeMusic");
 		listBoxVolumeMusic.init(currentColumnStart, currentLine, 80);
 		labelVolumeMusic.setText(lang.get("MusicVolume"));
+		lineHorizontal5.init(currentLabelStart-10, currentLine-5,lineLength,1);
 		//currentLine-=lineOffset;
 
 		for(int i=0; i<=100; i+=5){
 			listBoxVolumeFx.pushBackItem(intToStr(i));
 			listBoxVolumeAmbient.pushBackItem(intToStr(i));
 			listBoxVolumeMusic.pushBackItem(intToStr(i));
@@ -162,18 +168,18 @@
 		//currentLabelStart=rightLabelStart; // set to right side
 		//currentColumnStart=rightColumnStart; // set to right side
 
 
 		// buttons
 		buttonOk.registerGraphicComponent(containerName,"buttonOk");
-		buttonOk.init(buttonStartPos, buttonRowPos, 100);
+		buttonOk.init(buttonStartPos, buttonRowPos, 135);
 		buttonOk.setText(lang.get("Save"));
 		buttonReturn.setText(lang.get("Return"));
 
 		buttonReturn.registerGraphicComponent(containerName,"buttonAbort");
-		buttonReturn.init(buttonStartPos+110, buttonRowPos, 100);
+		buttonReturn.init(buttonStartPos+145, buttonRowPos, 135);
 
 		GraphicComponent::applyAllCustomProperties(containerName);
 	}
 	catch(exception &e) {
 		SystemFlags::OutputDebug(SystemFlags::debugError,"In [%s::%s Line: %d] Error loading options: %s\n",__FILE__,__FUNCTION__,__LINE__,e.what());
 		throw megaglest_runtime_error(string("Error loading options msg: ") + e.what());
@@ -187,43 +193,43 @@
 	mainMessageBox.init(lang.get("Ok"));
 
 	buttonAudioSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
 	buttonAudioSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
 	buttonAudioSection.setText(lang.get("Audio"));
 
-	buttonVideoSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-	buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+	buttonVideoSection.setFont(CoreData::getInstance().getMenuFontBig());
+	buttonVideoSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	buttonVideoSection.setText(lang.get("Video"));
 
-	buttonMiscSection.setFont(CoreData::getInstance().getMenuFontVeryBig());
-	buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+	buttonMiscSection.setFont(CoreData::getInstance().getMenuFontBig());
+	buttonMiscSection.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	buttonMiscSection.setText(lang.get("Misc"));
 
-	buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontVeryBig());
-	buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontVeryBig3D());
+	buttonNetworkSettings.setFont(CoreData::getInstance().getMenuFontBig());
+	buttonNetworkSettings.setFont3D(CoreData::getInstance().getMenuFontBig3D());
 	buttonNetworkSettings.setText(lang.get("Network"));
 
 	labelSoundFactory.setText(lang.get("SoundAndMusic"));
 
-	std::vector<string> listboxData;
-	listboxData.push_back("None");
-	listboxData.push_back("OpenAL");
+	//std::vector<string> listboxData;
+	//listboxData.push_back("None");
+	//listboxData.push_back("OpenAL");
 // deprecated as of 3.6.1
 //#ifdef WIN32
 //	listboxData.push_back("DirectSound8");
 //#endif
 
-	listBoxSoundFactory.setItems(listboxData);
+	//listBoxSoundFactory.setItems(listboxData);
 
 	labelVolumeFx.setText(lang.get("FxVolume"));
 
 	labelVolumeAmbient.setText(lang.get("AmbientVolume"));
 	labelVolumeMusic.setText(lang.get("MusicVolume"));
 
 
-	listboxData.clear();
+	//listboxData.clear();
 
 	buttonOk.setText(lang.get("Save"));
 	buttonReturn.setText(lang.get("Return"));
 
 	GraphicComponent::reloadFontsForRegisterGraphicComponents(containerName);
 }
@@ -308,28 +314,28 @@
 		//mainMenu->setState(new MenuStateOptionsGraphics(program, mainMenu)); // open keyboard shortcuts setup screen
 		//mainMenu->setState(new MenuStateOptionsNetwork(program, mainMenu)); // open keyboard shortcuts setup screen
 		mainMenu->setState(new MenuStateKeysetup(program, mainMenu)); // open keyboard shortcuts setup screen
 		//showMessageBox("Not implemented yet", "Keyboard setup", false);
 		return;
 	}
-	else if(buttonAudioSection.mouseClick(x, y)){ 
+	else if(buttonAudioSection.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			//mainMenu->setState(new MenuStateOptionsSound(program, mainMenu)); // open keyboard shortcuts setup screen
 			return;
 		}
-	else if(buttonNetworkSettings.mouseClick(x, y)){ 
+	else if(buttonNetworkSettings.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			mainMenu->setState(new MenuStateOptionsNetwork(program, mainMenu)); // open keyboard shortcuts setup screen
 			return;
 		}
-	else if(buttonMiscSection.mouseClick(x, y)){ 
+	else if(buttonMiscSection.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			mainMenu->setState(new MenuStateOptions(program, mainMenu)); // open keyboard shortcuts setup screen
 			return;
 		}
-	else if(buttonVideoSection.mouseClick(x, y)){ 
+	else if(buttonVideoSection.mouseClick(x, y)){
 			soundRenderer.playFx(coreData.getClickSoundA());
 			mainMenu->setState(new MenuStateOptionsGraphics(program, mainMenu)); // open keyboard shortcuts setup screen
 			return;
 		}
 	else
 	{
@@ -403,22 +409,24 @@
 		renderer.renderButton(&buttonAudioSection);
 		renderer.renderButton(&buttonMiscSection);
 		renderer.renderButton(&buttonNetworkSettings);
 		renderer.renderListBox(&listBoxSoundFactory);
 		renderer.renderLabel(&labelSoundFactory);
 
-
 		renderer.renderListBox(&listBoxVolumeFx);
 		renderer.renderLabel(&labelVolumeFx);
 		renderer.renderListBox(&listBoxVolumeAmbient);
 		renderer.renderLabel(&labelVolumeAmbient);
 		renderer.renderListBox(&listBoxVolumeMusic);
 		renderer.renderLabel(&labelVolumeMusic);
 
-
-
+		renderer.renderLine(&lineHorizontal1);
+		renderer.renderLine(&lineHorizontal2);
+		renderer.renderLine(&lineHorizontal3);
+		renderer.renderLine(&lineHorizontal4);
+		renderer.renderLine(&lineHorizontal5);
 	}
 
 	renderer.renderConsole(&console,false,true);
 	if(program != NULL) program->renderProgramMsgBox();
 }
 
Index: source/glest_game/menu/menu_state_options_sound.h
===================================================================
--- source/glest_game/menu/menu_state_options_sound.h	(wersja 4583)
+++ source/glest_game/menu/menu_state_options_sound.h	(kopia robocza)
@@ -42,12 +42,18 @@
 	GraphicLabel labelVolumeAmbient;
 	GraphicListBox listBoxVolumeAmbient;
 
 	GraphicLabel labelVolumeMusic;
 	GraphicListBox listBoxVolumeMusic;
 
+	GraphicLine lineHorizontal1;
+	GraphicLine lineHorizontal2;
+	GraphicLine lineHorizontal3;
+	GraphicLine lineHorizontal4;
+	GraphicLine lineHorizontal5;
+
 	GraphicMessageBox mainMessageBox;
 	int mainMessageBoxState;
 
 	ProgramState **parentUI;
 
 public:
Index: source/glest_game/menu/menu_state_root.cpp
===================================================================
--- source/glest_game/menu/menu_state_root.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_root.cpp	(kopia robocza)
@@ -37,58 +37,68 @@
 MenuStateRoot::MenuStateRoot(Program *program, MainMenu *mainMenu):
 	MenuState(program, mainMenu, "root")
 {
 	containerName = "MainMenu";
 	Lang &lang= Lang::getInstance();
 	int yPos=440;
-
+	int buttonWidth=225;
+	int xPos=(1000-buttonWidth)/2;
+	int CyPos=40;
 
 	labelVersion.registerGraphicComponent(containerName,"labelVersion");
 	if(EndsWith(glestVersionString, "-dev") == false){
 		labelVersion.init(525, yPos);
 		labelVersion.setText(glestVersionString);
 	}
 	else {
-		labelVersion.init(405, yPos);
-		labelVersion.setText(glestVersionString + " [" + getCompileDateTime() + ", " + getSVNRevisionString() + "]");
+		labelVersion.init(525-90, yPos);
+		//labelVersion.setText(glestVersionString + " [" + getCompileDateTime() + ", " + getSVNRevisionString() + "]");
+		labelVersion.setText(glestVersionString + "  [" + getSVNRevisionString() + "]");
 	}
 
 	yPos-=55;
 	buttonNewGame.registerGraphicComponent(containerName,"buttonNewGame");
-	buttonNewGame.init(425, yPos, 150);
-    yPos-=40;
+	buttonNewGame.init(xPos, yPos, buttonWidth);
+    yPos-=CyPos;
     buttonLoadGame.registerGraphicComponent(containerName,"buttonLoadGame");
-    buttonLoadGame.init(425, yPos, 150);
-    yPos-=40;
+    buttonLoadGame.init(xPos, yPos, buttonWidth);
+    yPos-=CyPos;
     buttonMods.registerGraphicComponent(containerName,"buttonMods");
-    buttonMods.init(425, yPos, 150);
-    yPos-=40;
+    buttonMods.init(xPos, yPos, buttonWidth);
+    yPos-=CyPos;
     buttonOptions.registerGraphicComponent(containerName,"buttonOptions");
-    buttonOptions.init(425, yPos, 150);
-    yPos-=40;
+    buttonOptions.init(xPos, yPos, buttonWidth);
+    yPos-=CyPos;
     buttonAbout.registerGraphicComponent(containerName,"buttonAbout");
-    buttonAbout.init(425, yPos , 150);
-    yPos-=40;
+    buttonAbout.init(xPos, yPos , buttonWidth);
+    yPos-=CyPos;
     buttonExit.registerGraphicComponent(containerName,"buttonExit");
-    buttonExit.init(425, yPos, 150);
+    buttonExit.init(xPos, yPos, buttonWidth);
 
 	buttonNewGame.setText(lang.get("NewGame"));
 	buttonLoadGame.setText(lang.get("LoadGame"));
 	buttonMods.setText(lang.get("Mods"));
 	buttonOptions.setText(lang.get("Options"));
 	buttonAbout.setText(lang.get("About"));
 	buttonExit.setText(lang.get("Exit"));
 	
-	//mesage box
+	//error mesage box
 	mainMessageBox.registerGraphicComponent(containerName,"mainMessageBox");
 	mainMessageBox.init(lang.get("Yes"), lang.get("No"));
 	mainMessageBox.setEnabled(false);
 
 	errorMessageBox.registerGraphicComponent(containerName,"errorMessageBox");
 	errorMessageBox.init(lang.get("Ok"));
 	errorMessageBox.setEnabled(false);
+	errorMessageBox.setW(mainMessageBox.getW() * 1.3);
+	if(errorMessageBox.getW() > 950) {
+		errorMessageBox.setW(950);
+	}
+	errorMessageBox.setX((1000 - errorMessageBox.getW()) / 2);
+	errorMessageBox.setH(750 - (errorMessageBox.getX() * 2));
+	errorMessageBox.setY((750 - errorMessageBox.getH()) / 2);
 
 	//PopupMenu popupMenu;
 	std::vector<string> menuItems;
 	menuItems.push_back("1");
 	menuItems.push_back("2");
 	menuItems.push_back("3");
@@ -107,24 +117,25 @@
 	console.resetFonts();
 
 	if(EndsWith(glestVersionString, "-dev") == false){
 		labelVersion.setText(glestVersionString);
 	}
 	else {
-		labelVersion.setText(glestVersionString + " [" + getCompileDateTime() + ", " + getSVNRevisionString() + "]");
+		//labelVersion.setText(glestVersionString + " [" + getCompileDateTime() + ", " + getSVNRevisionString() + "]");
+		labelVersion.setText(glestVersionString + "  [" + getSVNRevisionString() + "]");
 	}
 
 	buttonNewGame.setText(lang.get("NewGame"));
 	buttonLoadGame.setText(lang.get("LoadGame"));
 	buttonMods.setText(lang.get("Mods"));
 	buttonOptions.setText(lang.get("Options"));
 	buttonAbout.setText(lang.get("About"));
 	buttonExit.setText(lang.get("Exit"));
 
-	mainMessageBox.init(lang.get("Yes"), lang.get("No"));
 	errorMessageBox.init(lang.get("Ok"));
+	mainMessageBox.init(lang.get("Yes"), lang.get("No"));
 	console.resetFonts();
 
 	GraphicComponent::reloadFontsForRegisterGraphicComponents(containerName);
 }
 
 void MenuStateRoot::mouseClick(int x, int y, MouseButton mouseButton){
@@ -221,15 +232,15 @@
 		return;
 	}
 	Renderer &renderer= Renderer::getInstance();
 	CoreData &coreData= CoreData::getInstance();
 	const Metrics &metrics= Metrics::getInstance();
 
-	int w= 300;
-	int h= 150;
-	int yPos=495;
+	int w= 400;
+	int h= 200;
+	int yPos=515;
 
 	int logoMainX = (metrics.getVirtualW()-w)/2;
 	int logoMainY = yPos-h/2;
 	int logoMainW = w;
 	int logoMainH = h;
 	logoMainX = Config::getInstance().getInt(string(containerName) + "_MainLogo_x",intToStr(logoMainX).c_str());
@@ -244,13 +255,14 @@
 	int maxLogoWidth=0;
 	for(int idx = 0; idx < coreData.getLogoTextureExtraCount(); ++idx) {
 		Texture2D *extraLogo = coreData.getLogoTextureExtra(idx);
 		maxLogoWidth += extraLogo->getPixmap()->getW();
 	}
 
-	int currentX = (metrics.getVirtualW()-maxLogoWidth)/2;
+	int SpaceW = 10;
+	int currentX = (metrics.getVirtualW()-maxLogoWidth-SpaceW)/2;
 	int currentY = 50;
 	for(int idx = 0; idx < coreData.getLogoTextureExtraCount(); ++idx) {
 		Texture2D *extraLogo = coreData.getLogoTextureExtra(idx);
 
 		logoMainX = currentX;
 		logoMainY = currentY;
@@ -265,13 +277,13 @@
 
 		renderer.renderTextureQuad(
 				logoMainX, logoMainY,
 				logoMainW, logoMainH,
 				extraLogo, GraphicComponent::getFade());
 
-		currentX += extraLogo->getPixmap()->getW();
+		currentX += extraLogo->getPixmap()->getW() + SpaceW;
 	}
 
 	renderer.renderButton(&buttonNewGame);
 	renderer.renderButton(&buttonLoadGame);
 	renderer.renderButton(&buttonMods);
 	renderer.renderButton(&buttonOptions);
@@ -281,18 +293,18 @@
 
 	renderer.renderConsole(&console,false,true);
 
 	renderer.renderPopupMenu(&popupMenu);
 
 	//exit message box
-	if(mainMessageBox.getEnabled()) {
-		renderer.renderMessageBox(&mainMessageBox);
-	}
 	if(errorMessageBox.getEnabled()) {
 		renderer.renderMessageBox(&errorMessageBox);
 	}
+	if(mainMessageBox.getEnabled()) {
+		renderer.renderMessageBox(&mainMessageBox);
+	}
 
 	if(program != NULL) program->renderProgramMsgBox();
 }
 
 void MenuStateRoot::update() {
 	if(Config::getInstance().getBool("AutoTest")) {
@@ -316,13 +328,13 @@
 
 	Config &configKeys = Config::getInstance(std::pair<ConfigType,ConfigType>(cfgMainKeys,cfgUserKeys));
 	//exit
 	//if(key == configKeys.getCharKey("ExitKey")) {
 	if(isKeyPressed(configKeys.getSDLKey("ExitKey"),key) == true) {
 		Lang &lang= Lang::getInstance();
-		showMessageBox(lang.get("ExitGame?"), "", true);
+		showMessageBox(lang.get("ExitGameQ"), "", true);
 	}
 	//else if(mainMessageBox.getEnabled() == true && key == vkReturn) {
 	else if(mainMessageBox.getEnabled() == true && isKeyPressed(SDLK_RETURN,key) == true) {
 		//SDL_keysym keystate = Window::getKeystate();
 		SDL_keysym keystate = key.keysym;
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d] keystate.mod [%d]\n",__FILE__,__FUNCTION__,__LINE__,keystate.mod);
Index: source/glest_game/menu/menu_state_scenario.cpp
===================================================================
--- source/glest_game/menu/menu_state_scenario.cpp	(wersja 4583)
+++ source/glest_game/menu/menu_state_scenario.cpp	(kopia robocza)
@@ -51,14 +51,14 @@
 	catch(const std::exception &ex) {
 		char szBuf[8096]="";
 		snprintf(szBuf,8096,"In [%s::%s %d] Error detected:\n%s\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,ex.what());
 		SystemFlags::OutputDebug(SystemFlags::debugError,szBuf);
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"%s",szBuf);
 
-        mainMessageBoxState=1;
-        showMessageBox( "Error: " + string(ex.what()), "Error detected", false);
+		mainMessageBoxState=1;
+		showMessageBox( "Error: " + string(ex.what()), Lang::getInstance().get("ErrorDetected"), false);
 	}
 
 	mainMessageBox.registerGraphicComponent(containerName,"mainMessageBox");
 	mainMessageBox.init(lang.get("Ok"));
 	mainMessageBox.setEnabled(false);
 	mainMessageBoxState=0;
@@ -66,30 +66,32 @@
 	this->autoloadScenarioName = autoloadScenarioName;
     vector<string> results;
 
 	this->dirList = dirList;
 
 	int startY=100;
-	int startX=350;
+	int startX=362;
+	int startX2=(950-(135+175))/2;
 
 	labelInfo.registerGraphicComponent(containerName,"labelInfo");
-    labelInfo.init(startX, startY+330);
+    labelInfo.init(startX-170, startY+355);
 	labelInfo.setFont(CoreData::getInstance().getMenuFontNormal());
 	labelInfo.setFont3D(CoreData::getInstance().getMenuFontNormal3D());
 
 	buttonReturn.registerGraphicComponent(containerName,"buttonReturn");
-    buttonReturn.init(startX, startY, 125);
+    buttonReturn.init(startX2, startY, 135);
 
     buttonPlayNow.registerGraphicComponent(containerName,"buttonPlayNow");
-	buttonPlayNow.init(startX+175, startY, 125);
+	buttonPlayNow.init(startX2+135+50, startY, 175);
 
 	listBoxScenario.registerGraphicComponent(containerName,"listBoxScenario");
-    listBoxScenario.init(startX, startY+360, 190);
+    listBoxScenario.init(startX, startY+390, 265);
+	lineHorizontal.init(startX+22, startY+390,265-44,2);
 
     labelScenario.registerGraphicComponent(containerName,"labelScenario");
-	labelScenario.init(startX, startY+390);
+	labelScenario.init(startX, startY+420);
 
 	buttonReturn.setText(lang.get("Return"));
 	buttonPlayNow.setText(lang.get("PlayNow"));
 
 	if(this->isTutorialMode == true) {
 		labelScenario.setText(lang.get("Tutorial"));
@@ -104,16 +106,16 @@
     //printf("scenarioFiles[0] [%s]\n",scenarioFiles[0].c_str());
 
 	if(results.empty() == true) {
         //throw megaglest_runtime_error("There are no scenarios found to load");
         mainMessageBoxState=1;
         if(this->isTutorialMode == true) {
-        	showMessageBox( "Error: There are no tutorials found to load", "Error detected", false);
+		showMessageBox( "Error: There are no tutorials found to load", Lang::getInstance().get("ErrorDetected"), false);
         }
         else {
-        	showMessageBox( "Error: There are no scenarios found to load", "Error detected", false);
+		showMessageBox( "Error: There are no scenarios found to load", Lang::getInstance().get("ErrorDetected"), false);
         }
 	}
 
 	std::map<string,string> scenarioErrors;
 	for(unsigned int i = 0; i < results.size(); ++i) {
 		bool foundTranslatedName = false;
@@ -161,25 +163,25 @@
 	catch(const std::exception &ex) {
 		char szBuf[8096]="";
 		snprintf(szBuf,8096,"In [%s::%s %d] Error detected:\n%s\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,ex.what());
 		SystemFlags::OutputDebug(SystemFlags::debugError,szBuf);
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"%s",szBuf);
 
-        mainMessageBoxState=1;
-        showMessageBox( "Error: " + string(ex.what()), "Error detected", false);
+		mainMessageBoxState=1;
+		showMessageBox( "Error: " + string(ex.what()), Lang::getInstance().get("ErrorDetected"), false);
 	}
 
 	if(scenarioErrors.empty() == false) {
         mainMessageBoxState=1;
 
         string errorMsg = "";
         for(std::map<string,string>::iterator iterMap = scenarioErrors.begin();
         		iterMap != scenarioErrors.end(); ++iterMap) {
         	errorMsg += "scenario: " + iterMap->first + " error text: " + iterMap->second.substr(0,400) + "\n";
         }
-        showMessageBox( "Error loading scenario(s): " + errorMsg, "Error detected", false);
+        showMessageBox( "Error loading scenario(s): " + errorMsg, Lang::getInstance().get("ErrorDetected"), false);
 	}
 }
 
 void MenuStateScenario::reloadUI() {
 	Lang &lang= Lang::getInstance();
 
@@ -250,13 +252,13 @@
             char szBuf[8096]="";
             snprintf(szBuf,8096,"In [%s::%s %d] Error detected:\n%s\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,ex.what());
             SystemFlags::OutputDebug(SystemFlags::debugError,szBuf);
             if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"%s",szBuf);
 
             mainMessageBoxState=1;
-            showMessageBox( "Error: " + string(ex.what()), "Error detected", false);
+	    showMessageBox( "Error: " + string(ex.what()), Lang::getInstance().get("ErrorDetected"), false);
         }
 	}
 }
 
 void MenuStateScenario::mouseMove(int x, int y, const MouseState *ms){
 
@@ -283,12 +285,13 @@
 		renderer.renderMessageBox(&mainMessageBox);
 	}
 	else {
 		renderer.renderLabel(&labelInfo);
 		renderer.renderLabel(&labelScenario);
 		renderer.renderListBox(&listBoxScenario);
+		renderer.renderLine(&lineHorizontal);
 
 		renderer.renderButton(&buttonReturn);
 		renderer.renderButton(&buttonPlayNow);
 	}
 	renderer.renderConsole(&console,false,true);
 	if(program != NULL) program->renderProgramMsgBox();
@@ -333,13 +336,13 @@
 				char szBuf[8096]="";
 				snprintf(szBuf,8096,"In [%s::%s %d] Error detected:\n%s\n",extractFileFromDirectoryPath(__FILE__).c_str(),__FUNCTION__,__LINE__,ex.what());
 				SystemFlags::OutputDebug(SystemFlags::debugError,szBuf);
 				if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"%s",szBuf);
 
 				mainMessageBoxState=1;
-				showMessageBox( "Error: " + string(ex.what()), "Error detected", false);
+				showMessageBox( "Error: " + string(ex.what()), Lang::getInstance().get("ErrorDetected"), false);
 			}
 		}
 	}
 
 	if(needToLoadTextures) {
 		// this delay is done to make it possible to switch faster
Index: source/glest_game/menu/menu_state_scenario.h
===================================================================
--- source/glest_game/menu/menu_state_scenario.h	(wersja 4583)
+++ source/glest_game/menu/menu_state_scenario.h	(kopia robocza)
@@ -27,12 +27,13 @@
 	GraphicButton buttonReturn;
 	GraphicButton buttonPlayNow;
 
 	GraphicLabel labelInfo;
 	GraphicLabel labelScenario;
 	GraphicListBox listBoxScenario;
+	GraphicLine lineHorizontal;
 
 	vector<string> scenarioFiles;
 
     ScenarioInfo scenarioInfo;
 	vector<string> dirList;
 
Index: source/glest_game/menu/server_line.cpp
===================================================================
--- source/glest_game/menu/server_line.cpp	(wersja 4583)
+++ source/glest_game/menu/server_line.cpp	(kopia robocza)
@@ -34,13 +34,13 @@
 	this->countryTexture= NULL;
 	Lang &lang= Lang::getInstance();
 
 	this->lineHeight= lineHeight;
 	int lineOffset= lineHeight * lineIndex;
 	masterServerInfo= *mServerInfo;
-	int i= 7;
+	int i=2;
 	this->baseY= baseY;
 	Vec3f color=Vec3f(1.0f,1.0f,1.0f);
 
 	if(masterServerInfo.getConnectedClients()==0){
 		color=Vec3f(0.6f,0.7f,1.0f);
 	}
@@ -51,13 +51,13 @@
 	glestVersionLabel.init(i, baseY - lineOffset);
 	glestVersionLabel.setTextColor(color);
 	glestVersionLabel.setText(masterServerInfo.getGlestVersion());
 	glestVersionLabel.setFont(CoreData::getInstance().getDisplayFontSmall());
 	glestVersionLabel.setFont3D(CoreData::getInstance().getDisplayFontSmall3D());
 
-	i+= 70;
+	i+= 75;
 	platformLabel.init(i, baseY - lineOffset);
 	platformLabel.setTextColor(color);
 	platformLabel.setText(masterServerInfo.getPlatform());
 	platformLabel.setFont(CoreData::getInstance().getDisplayFontSmall());
 	platformLabel.setFont3D(CoreData::getInstance().getDisplayFontSmall3D());
 
@@ -65,21 +65,22 @@
 	//	registeredObjNameList.push_back("binaryCompileDateLabel" + intToStr(lineIndex));
 	//	binaryCompileDateLabel.registerGraphicComponent(containerName,"binaryCompileDateLabel" + intToStr(lineIndex));
 	//	binaryCompileDateLabel.init(i,baseY-lineOffset);
 	//	binaryCompileDateLabel.setText(masterServerInfo.getBinaryCompileDate());
 
 	//game info:
-	i+= 130;
+	i+= 140;
 	serverTitleLabel.init(i, baseY - lineOffset);
 	serverTitleLabel.setTextColor(color);
 	serverTitleLabel.setText(masterServerInfo.getServerTitle());
 
-	i+= 150;
+	i+= 178;
 	country.init(i, baseY - lineOffset);
 	country.setTextColor(color);
 	country.setText(masterServerInfo.getCountry());
+	if(masterServerInfo.getCountry() == "??"){ country.setText("***"); }
 
 	string data_path= getGameReadWritePath(GameConstants::path_data_CacheLookupKey);
 	string countryLogoPath= data_path + "data/core/misc_textures/flags";
 
 	Config &config= Config::getInstance();
 	if(config.getString("CountryTexturePath", "") != ""){
@@ -101,13 +102,13 @@
 		if(SystemFlags::getSystemSettingType(SystemFlags::debugSystem).enabled) SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d]\n",__FILE__,__FUNCTION__,__LINE__);
 
 		Renderer &renderer= Renderer::getInstance();
 		renderer.initTexture(rsGlobal, countryTexture);
 	}
 
-	i+= 65;
+	i+= 34;
 	//	ipAddressLabel.init(i,baseY-lineOffset);
 	//	ipAddressLabel.setText(masterServerInfo.getIpAddress());
 	//	i+=100;
 
 	wrongVersionLabel.init(i, baseY - lineOffset);
 	wrongVersionLabel.setTextColor(Vec3f(1.0f,0.0f,0.0f));
@@ -115,40 +116,40 @@
 
 	//game setup info:
 	techLabel.init(i, baseY - lineOffset);
 	techLabel.setTextColor(color);
 	techLabel.setText(masterServerInfo.getTech());
 
-	i+= 120;
+	i+= 135;
 	mapLabel.init(i, baseY - lineOffset);
 	mapLabel.setTextColor(color);
 	mapLabel.setText(masterServerInfo.getMap());
-	i+= 120;
+	i+= 162;
 
 	//	tilesetLabel.init(i,baseY-lineOffset);
 	//	tilesetLabel.setText(masterServerInfo.getTileset());
 	//	i+=100;
 
 	activeSlotsLabel.init(i, baseY - lineOffset);
 	activeSlotsLabel.setTextColor(color);
 	activeSlotsLabel.setText(intToStr(masterServerInfo.getActiveSlots()) + "/" + intToStr(
 	        masterServerInfo.getNetworkSlots()) + "/" + intToStr(masterServerInfo.getConnectedClients()));
 
-	i+= 50;
-	externalConnectPort.init(i, baseY - lineOffset);
-	externalConnectPort.setTextColor(color);
-	externalConnectPort.setText(intToStr(masterServerInfo.getExternalConnectPort()));
+	//i+= 50;
+	//externalConnectPort.init(i, baseY - lineOffset);
+	//externalConnectPort.setTextColor(color);
+	//externalConnectPort.setText(intToStr(masterServerInfo.getExternalConnectPort()));
 
-	i+= 60;
+	i+= 42;
 	status.init(i, baseY - lineOffset);
 	status.setTextColor(color);
 	status.setText(lang.get("MGGameStatus" + intToStr(masterServerInfo.getStatus())));
 
-	i+= 130;
-	selectButton.init(i, baseY - lineOffset, 30);
-	selectButton.setText(">");
+	//i+= 110;
+	selectButton.init(1000-20-50, baseY - lineOffset, 50);
+	selectButton.setText("> || <");
 
 	//printf("glestVersionString [%s] masterServerInfo->getGlestVersion() [%s]\n",glestVersionString.c_str(),masterServerInfo->getGlestVersion().c_str());
 	compatible= checkVersionComptability(glestVersionString, masterServerInfo.getGlestVersion());
 	selectButton.setEnabled(compatible);
 	selectButton.setEditable(compatible);
 
@@ -226,13 +227,13 @@
 	//renderer.renderLabel(&binaryCompileDateLabel);
 
 
 	//game info:
 	renderer.renderLabel(&serverTitleLabel);
 	if(countryTexture != NULL){
-		renderer.renderTextureQuad(country.getX() + 20, country.getY(), countryTexture->getTextureWidth(),
+		renderer.renderTextureQuad(country.getX(), country.getY() + 3, countryTexture->getTextureWidth(),
 		        countryTexture->getTextureHeight(), countryTexture, 0.7f);
 	}
 	else{
 		renderer.renderLabel(&country);
 	}
 	if(compatible){
@@ -240,13 +241,13 @@
 			//renderer.renderLabel(&ipAddressLabel);
 			//game setup info:
 			renderer.renderLabel(&techLabel);
 			renderer.renderLabel(&mapLabel);
 			//renderer.renderLabel(&tilesetLabel);
 			renderer.renderLabel(&activeSlotsLabel);
-			renderer.renderLabel(&externalConnectPort);
+			//renderer.renderLabel(&externalConnectPort);
 			renderer.renderLabel(&status);
 		}
 	}
 	else{
 		renderer.renderLabel(&wrongVersionLabel);
 	}
@@ -271,12 +272,12 @@
 	//game setup info:
 	techLabel.setY(y);
 	mapLabel.setY(y);
 	//tilesetLabel.setY(y);
 	activeSlotsLabel.setY(y);
 
-	externalConnectPort.setY(y);
+	//externalConnectPort.setY(y);
 
 }
 
 }
 }//end namespace
Index: source/glest_game/network/client_interface.cpp
===================================================================
--- source/glest_game/network/client_interface.cpp	(wersja 4583)
+++ source/glest_game/network/client_interface.cpp	(kopia robocza)
@@ -1646,15 +1646,15 @@
 				else {
 					//if(chrono.getMillis() / 1000 > lastMillisCheck) {
 					if(chrono.getMillis() % 100 == 0) {
 						lastMillisCheck = (chrono.getMillis() / 1000);
 
 						char szBuf[8096]="";
-						string updateTextFormat = "Waiting for network: %lld seconds elapsed (maximum wait time: %d seconds)";
+						string updateTextFormat = "\nWaiting for network: %lld seconds elapsed (maximum wait time: %d seconds)";
 						if(lang.hasString("NetworkGameClientLoadStatus") == true) {
-							updateTextFormat =  lang.get("NetworkGameClientLoadStatus");
+							updateTextFormat =  "\n" + lang.get("NetworkGameClientLoadStatus");
 						}
 
 						string waitForHosts = "";
 						if((networkMessageLoadingStatus.getStatus() & nmls_PLAYER1_CONNECTED) == nmls_PLAYER1_CONNECTED) {
 							if((networkMessageLoadingStatus.getStatus() & nmls_PLAYER1_READY) != nmls_PLAYER1_READY) {
 								if(waitForHosts != "") {
@@ -1723,15 +1723,15 @@
 						if(waitForHosts == "") {
 							waitForHosts = lang.get("Server");
 						}
 						snprintf(szBuf,8096,updateTextFormat.c_str(),(long long int)lastMillisCheck,int(readyWaitTimeout / 1000));
 
 						char szBuf1[8096]="";
-						string statusTextFormat =  "Waiting for players: %s";
+						string statusTextFormat =  "\nWaiting for players: %s";
 						if(lang.hasString("NetworkGameStatusWaiting") == true) {
-							statusTextFormat = lang.get("NetworkGameStatusWaiting");
+							statusTextFormat = "\n" + lang.get("NetworkGameStatusWaiting");
 						}
 						snprintf(szBuf1,8096,statusTextFormat.c_str(),waitForHosts.c_str());
 
 						logger.add(szBuf, true, szBuf1);
 
 						sleep(0);
Index: source/glest_game/network/connection_slot.cpp
===================================================================
--- source/glest_game/network/connection_slot.cpp	(wersja 4583)
+++ source/glest_game/network/connection_slot.cpp	(kopia robocza)
@@ -1471,13 +1471,13 @@
 								if((maxFrameCountLagAllowed > 0 && clientLagCount > maxFrameCountLagAllowed) ||
 									(maxClientLagTimeAllowed > 0 && clientLagTime > maxClientLagTimeAllowed)) {
 
 									waitForLaggingClient = true;
 									if(waitedForLaggingClient == false) {
 										waitedForLaggingClient = true;
-										printf("*TESTING*: START Waiting for lagging client playerIndex = %d [%s] clientLagCount = %f [%f]\n",playerIndex,name.c_str(),clientLagCount,clientLagTime);
+										printf("START Waiting for lagging client playerIndex = %d [%s] clientLagCount = %f [%f]\n",playerIndex,name.c_str(),clientLagCount,clientLagTime);
 									}
 								}
 							}
 						}
 
 						//printf("#5 Server slot got currentFrameCount = %d\n",currentFrameCount);
@@ -1485,13 +1485,13 @@
 					//printf("#5a Server slot got currentFrameCount = %d\n",currentFrameCount);
 				}
 
 				//printf("#6 Server slot got currentFrameCount = %d\n",currentFrameCount);
 
 				if(waitedForLaggingClient == true) {
-					printf("*TESTING*: FINISHED Waiting for lagging client playerIndex = %d [%s]\n",playerIndex,name.c_str());
+					printf("FINISHED Waiting for lagging client playerIndex = %d [%s]\n",playerIndex,name.c_str());
 				}
 
 				//if(chrono.getMillis() > 1) printf("In [%s::%s Line: %d] action running for msecs: %lld\n",__FILE__,__FUNCTION__,__LINE__,(long long int)chrono.getMillis());
 
 				validateConnection();
 
Index: source/glest_game/network/server_interface.cpp
===================================================================
--- source/glest_game/network/server_interface.cpp	(wersja 4583)
+++ source/glest_game/network/server_interface.cpp	(kopia robocza)
@@ -1906,22 +1906,22 @@
 							waitForHosts += ", ";
 						}
 						waitForHosts += waitingForHosts[i];
 					}
 
 					char szBuf[8096]="";
-					string updateTextFormat = lang.get("NetworkGameServerLoadStatus");
+					string updateTextFormat = "\n" + lang.get("NetworkGameServerLoadStatus");
 					if(updateTextFormat == "" || updateTextFormat[0] == '?') {
-						updateTextFormat =  "Waiting for network: %lld seconds elapsed (maximum wait time: %d seconds)";
+						updateTextFormat =  "\nWaiting for network: %lld seconds elapsed (maximum wait time: %d seconds)";
 					}
 					snprintf(szBuf,8096,updateTextFormat.c_str(),(long long int)(chrono.getMillis() / 1000),int(readyWaitTimeout / 1000));
 
 					char szBuf1[8096]="";
-					string statusTextFormat = lang.get("NetworkGameStatusWaiting");
+					string statusTextFormat = "\n" + lang.get("NetworkGameStatusWaiting");
 					if(statusTextFormat == "" || statusTextFormat[0] == '?') {
-						statusTextFormat =  "Waiting for players: %s";
+						statusTextFormat =  "\nWaiting for players: %s";
 					}
 					snprintf(szBuf1,8096,statusTextFormat.c_str(),waitForHosts.c_str());
 
 					logger.add(szBuf, true, szBuf1);
 
 					uint32 loadingStatus = nmls_NONE;
Index: source/glest_game/type_instances/unit.cpp
===================================================================
--- source/glest_game/type_instances/unit.cpp	(wersja 4583)
+++ source/glest_game/type_instances/unit.cpp	(kopia robocza)
@@ -3064,20 +3064,20 @@
     }
     return false;
 }
 
 string Unit::getDescExtension(bool translatedValue) const{
 	Lang &lang= Lang::getInstance();
-	string str= "\n";
+	string str= "";
 
 	if(commands.empty() == false && commands.size() > 1 ){
 		Commands::const_iterator it= commands.begin();
 		for(unsigned int i= 0; i < min((size_t) maxQueuedCommandDisplayCount, commands.size()); ++i){
 			const CommandType *ct= (*it)->getCommandType();
 			if(i == 0){
-				str+= "\n" + lang.get("OrdersOnQueue") + ": ";
+				str+= lang.get("OrdersOnQueue") + ": ";
 			}
 			str+= "\n#" + intToStr(i + 1) + " " + ct->getName(translatedValue);
 			++it;
 		}
 	}
 
@@ -3086,17 +3086,17 @@
 
 string Unit::getDesc(bool translatedValue) const {
 
     Lang &lang= Lang::getInstance();
 
 	//hp
-	string str= "\n";
+	string str= "";
 
 	//maxUnitCount
 	if(type->getMaxUnitCount()>0){
-		str += lang.get("MaxUnitCount")+ ": " + intToStr(faction->getCountForMaxUnitCount(type)) + "/" + intToStr(type->getMaxUnitCount());
+		str += "\n" + lang.get("MaxUnitCount")+ ": " + intToStr(faction->getCountForMaxUnitCount(type)) + "/" + intToStr(type->getMaxUnitCount());
 	}
 
 	str += "\n"+lang.get("Hp")+ ": " + intToStr(hp) + "/" + intToStr(type->getTotalMaxHp(&totalUpgrade));
 	if(type->getHpRegeneration() != 0 || totalUpgrade.getMaxHpRegeneration() != 0) {
 		str+= " (" + lang.get("Regeneration") + ": " + intToStr(type->getHpRegeneration());
 		if(totalUpgrade.getMaxHpRegeneration() != 0) {
Index: source/glest_game/world/scenario.cpp
===================================================================
--- source/glest_game/world/scenario.cpp	(wersja 4583)
+++ source/glest_game/world/scenario.cpp	(kopia robocza)
@@ -324,28 +324,28 @@
         scenarioInfo->defaultUnits = scenarioNode->getChild("default-units")->getAttribute("value")->getBoolValue();
         scenarioInfo->defaultResources = scenarioNode->getChild("default-resources")->getAttribute("value")->getBoolValue();
         scenarioInfo->defaultVictoryConditions = scenarioNode->getChild("default-victory-conditions")->getAttribute("value")->getBoolValue();
     }
 
 	//add player info
-    scenarioInfo->desc= lang.get("PlayerFaction") + ": ";
+	
+    scenarioInfo->desc= "\t\t\t  " + lang.get("PlayerFaction") + "  ";
 	for(int i=0; i<GameConstants::maxPlayers; ++i) {
 		if(scenarioInfo->factionControls[i] == ctHuman) {
 			scenarioInfo->desc+= formatString(scenarioInfo->factionTypeNames[i]);
 			break;
 		}
 	}
 
 	//add misc info
 	string difficultyString = "Difficulty" + intToStr(scenarioInfo->difficulty);
 
-	scenarioInfo->desc+= "\n";
-    scenarioInfo->desc+= lang.get("Difficulty") + ": " + lang.get(difficultyString) +"\n";
-    scenarioInfo->desc+= lang.get("Map") + ": " + formatString(scenarioInfo->mapName) + "\n";
-    scenarioInfo->desc+= lang.get("Tileset") + ": " + formatString(scenarioInfo->tilesetName) + "\n";
-	scenarioInfo->desc+= lang.get("TechTree") + ": " + formatString(scenarioInfo->techTreeName) + "\n";
+	scenarioInfo->desc+= "\n\t\t\t  " + lang.get("Difficulty") + "  " + lang.get(difficultyString) +"\n";
+	scenarioInfo->desc+= "\t\t\t  " + lang.get("Map") + "  " + formatString(scenarioInfo->mapName) + "\n";
+	scenarioInfo->desc+= "\t\t\t  " + lang.get("Tileset") + "  " + formatString(scenarioInfo->tilesetName) + "\n";
+	scenarioInfo->desc+= "\t\t\t  " + lang.get("TechTree") + "  " + formatString(scenarioInfo->techTreeName) + "\n\n";
 
 	
 	//look for description and append it
 	lang.loadScenarioStrings(scenarioDir,scenarioName.c_str(),isTutorial);
 	//string tmp_description = lang.getScenarioString("DESCRIPTION");
 	string tmp_description = "";
Index: source/shared_lib/CMakeLists.txt
===================================================================
--- source/shared_lib/CMakeLists.txt	(wersja 4583)
+++ source/shared_lib/CMakeLists.txt	(kopia robocza)
@@ -321,27 +321,27 @@
 		MESSAGE(STATUS "*** Using miniupnpc lib found in [${MINIUPNP_INCLUDE_DIR}] MINIUPNP_FOUND [${MINIUPNP_FOUND}] MINIUPNP_LIBRARY [${MINIUPNP_LIBRARY}]")
 
 		INCLUDE_DIRECTORIES(${MINIUPNP_INCLUDE_DIR})
 		SET(EXTERNAL_LIBS ${EXTERNAL_LIBS} ${MINIUPNP_LIBRARY})
 	endif()
 
-	IF(MINIUPNPC_VERSION_PRE1_5)
+	IF(MINIUPNPC_VERSION_1_7_OR_HIGHER)
+		message(STATUS "**No macros required for miniupnpc version")
+	ELSEIF(MINIUPNPC_VERSION_PRE1_7)
+		ADD_DEFINITIONS(-DMINIUPNPC_VERSION_PRE1_7)
+		message(STATUS "Adding macro for miniupnpc version: pre v1.7")
+	ELSEIF(MINIUPNPC_VERSION_PRE1_6)
+		ADD_DEFINITIONS(-DMINIUPNPC_VERSION_PRE1_6)
+		message(STATUS "Adding macro for miniupnpc version: pre v1.6")
+	ELSEIF(MINIUPNPC_VERSION_PRE1_5)
 	        ADD_DEFINITIONS(-DMINIUPNPC_VERSION_PRE1_5)
                 message(STATUS "Adding macro for miniupnpc version: pre v1.5")
-	ENDIF()
-	IF(MINIUPNPC_VERSION_PRE1_6)
-		ADD_DEFINITIONS(-DMINIUPNPC_VERSION_PRE1_6)
-                message(STATUS "Adding macro for miniupnpc version: pre v1.6")
-	ENDIF()
-	IF(MINIUPNPC_VERSION_PRE1_7)
-		ADD_DEFINITIONS(-DMINIUPNPC_VERSION_PRE1_7)
-                message(STATUS "Adding macro for miniupnpc version: pre v1.7")
-	ENDIF()
-
-        IF(NOT MINIUPNPC_VERSION_PRE1_5 AND NOT MINIUPNPC_VERSION_PRE1_6 AND NOT MINIUPNPC_VERSION_PRE1_7)
-                message(STATUS "**No macros required for miniupnpc version")
+	ELSE()
+		if(MINIUPNP_FOUND)
+			message(STATUS "Unknown miniupnpc version")
+		endif()
         ENDIF()
 
 	IF(APPLE)
 		SET(DIRS_WITH_SRC ${DIRS_WITH_SRC} platform/sdl)
 		SET(DIRS_WITH_SRC ${DIRS_WITH_SRC} platform/posix)
 		SET(DIRS_WITH_SRC ${DIRS_WITH_SRC} platform/macosx)
@@ -364,13 +364,14 @@
         INCLUDE_DIRECTORIES("sources/")
 
         option(DISABLE_IRCCLIENT "Disable libircclient support" OFF)
 
         IF(NOT DISABLE_IRCCLIENT)
 	        #IF(NOT WANT_STATIC_LIBS)
-		        MESSAGE(STATUS "*** Searching for libircclient since WANT_STATIC_LIBS is: ${WANT_STATIC_LIBS} ...")
+		        MESSAGE(STATUS "*** Searching for libircclient ...")
+			#MESSAGE(STATUS "*** Searching for libircclient since WANT_STATIC_LIBS is: ${WANT_STATIC_LIBS} ...")
 		        FIND_PACKAGE(Ircclient)
 	        #ENDIF()
 
 	        if(NOT IRCCLIENT_FOUND)
 		        MESSAGE(STATUS "*** Using EMBEDDED libircclient since this system does not have it... IRCCLIENT_FOUND [${IRCCLIENT_FOUND}]")
 
@@ -380,37 +381,39 @@
 		        MESSAGE(STATUS "*** Using libircclient found in [${IRCCLIENT_INCLUDE_DIR}] IRCCLIENT_FOUND [${IRCCLIENT_FOUND}] IRCCLIENT_LIBRARY [${IRCCLIENT_LIBRARY}]")
 
 		        INCLUDE_DIRECTORIES(${IRCCLIENT_INCLUDE_DIR})
 		        SET(EXTERNAL_LIBS ${EXTERNAL_LIBS} ${IRCCLIENT_LIBRARY})
 	        endif()
 
-                set(CMAKE_REQUIRED_INCLUDES "${IRCCLIENT_INCLUDE_DIR}")
-                set(CMAKE_REQUIRED_LIBRARIES "${IRCCLIENT_LIBRARY}")
-                include(CheckCXXSourceRuns)
-
-                check_cxx_source_runs("
-                #include <stdio.h>
-                #include <stdlib.h>
-                #include <libircclient.h>
-                int main()
-                {
-                unsigned int high = 0;
-                unsigned int low = 0;
-                irc_get_version(&high,&low);
-                if( (high == 1 && low >= 6) || (high > 1)) {
-                  return 0;
-                }
-                throw 1;
-                }"
-                HAS_LIBIRCCLIENT_1_6)
-
-                IF(HAS_LIBIRCCLIENT_1_6)
-                        message(STATUS "Found HAS_LIBIRCCLIENT_1_6: ${HAS_LIBIRCCLIENT_1_6}")
-                ELSE()
-                        ADD_DEFINITIONS(-DLIBIRCCLIENT_PRE1_6)
-                ENDIF()
+                if(IRCCLIENT_FOUND)
+			set(CMAKE_REQUIRED_INCLUDES "${IRCCLIENT_INCLUDE_DIR}")
+			set(CMAKE_REQUIRED_LIBRARIES "${IRCCLIENT_LIBRARY}")
+			include(CheckCXXSourceRuns)
+			
+			check_cxx_source_runs("
+			#include <stdio.h>
+			#include <stdlib.h>
+			#include <libircclient.h>
+			int main()
+			{
+			unsigned int high = 0;
+			unsigned int low = 0;
+			irc_get_version(&high,&low);
+			if( (high == 1 && low >= 6) || (high > 1)) {
+			return 0;
+			}
+			throw 1;
+			}"
+			HAS_LIBIRCCLIENT_1_6)
+
+			IF(HAS_LIBIRCCLIENT_1_6)
+				message(STATUS "Found HAS_LIBIRCCLIENT_1_6: ${HAS_LIBIRCCLIENT_1_6}")
+			ELSE()
+				ADD_DEFINITIONS(-DLIBIRCCLIENT_PRE1_6)
+			ENDIF()
+		endif()	
         else()
                 message(STATUS "****WARNING DISABLING libircclient!!")
                 ADD_DEFINITIONS(-DDISABLE_IRCCLIENT)
         endif()
 
 	IF(WIN32)
@@ -471,17 +474,17 @@
 
 	SET_SOURCE_FILES_PROPERTIES(${MG_SOURCE_FILES} PROPERTIES COMPILE_FLAGS 
 		"${PLATFORM_SPECIFIC_DEFINES} ${STREFLOP_PROPERTIES} ${CXXFLAGS}")
 	
 	SET_SOURCE_FILES_PROPERTIES(${MG_INCLUDE_FILES} PROPERTIES HEADER_FILE_ONLY 1)
 
+	SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/data/glest_game)
 	IF(NOT WIN32)
 		ADD_LIBRARY(${TARGET_NAME} STATIC ${MG_SOURCE_FILES} ${MG_INCLUDE_FILES})
 		MESSAGE(STATUS "Building shared game library as a STATIC library and saving to [${LIBRARY_OUTPUT_PATH}]")
 	ELSE()
-		SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/data/glest_game)
 		ADD_LIBRARY(${TARGET_NAME} STATIC ${MG_SOURCE_FILES} ${MG_INCLUDE_FILES})
 		MESSAGE(STATUS "Building shared game library as a SHARED library and saving to [${LIBRARY_OUTPUT_PATH}]")
 	ENDIF()
 
 	# ADD_LIBRARY(libmegaglest SHARED ${MG_SOURCE_FILES} ${MG_INCLUDE_FILES})
 	# ADD_LIBRARY(libmegaglest STATIC ${MG_SOURCE_FILES} ${MG_INCLUDE_FILES})
Index: source/shared_lib/include/platform/posix/socket.h
===================================================================
--- source/shared_lib/include/platform/posix/socket.h	(wersja 4583)
+++ source/shared_lib/include/platform/posix/socket.h	(kopia robocza)
@@ -125,12 +125,13 @@
 
 protected:
 #ifdef WIN32
 	static SocketManager wsaManager;
 #endif
 	PLATFORM_SOCKET sock;
+	PLATFORM_SOCKET PrevSock;
 	time_t lastDebugEvent;
 	static int broadcast_portno;
 	std::string ipAddress;
 	std::string connectedIpAddress;
 
 	//SimpleTaskThread *pingThread;
Index: source/shared_lib/sources/miniz/miniz.c
===================================================================
--- source/shared_lib/sources/miniz/miniz.c	(wersja 4583)
+++ source/shared_lib/sources/miniz/miniz.c	(kopia robocza)
@@ -1,15 +1,16 @@
-/* miniz.c v1.14 - public domain deflate/inflate, zlib-subset, ZIP reading/writing/appending, PNG writing
+/* miniz.c v1.14.1 - public domain deflate/inflate, zlib-subset, ZIP reading/writing/appending, PNG writing
    See "unlicense" statement at the end of this file.
    Rich Geldreich <richgel99@gmail.com>, last updated May 20, 2012
    Implements RFC 1950: http://www.ietf.org/rfc/rfc1950.txt and RFC 1951: http://www.ietf.org/rfc/rfc1951.txt
 
    Most API's defined in miniz.c are optional. For example, to disable the archive related functions just define
    MINIZ_NO_ARCHIVE_APIS, or to get rid of all stdio usage define MINIZ_NO_STDIO (see the list below for more macros).
 
    * Change History
+    17/08/13 v1.14.1 - unofficial version for MegaGlest from r.55 (by filux). Fixed problem on "GNU C" with: "warning: always_inline function might not be inlinable [-Wattributes]".
      5/20/12 v1.14 - MinGW32/64 GCC 4.6.1 compiler fixes: added MZ_FORCEINLINE, #include <time.h> (thanks fermtect).
      5/19/12 v1.13 - From jason@cornsyrup.org and kelwert@mtu.edu - Fix mz_crc32() so it doesn't compute the wrong CRC-32's when mz_ulong is 64-bit.
        Temporarily/locally slammed in "typedef unsigned long mz_ulong" and re-ran a randomized regression test on ~500k files.
        Eliminated a bunch of warnings when compiling with GCC 32-bit/64.
        Ran all examples, miniz.c, and tinfl.c through MSVC 2008's /analyze (static analysis) option and fixed all warnings (except for the silly
        "Use of the comma-operator in a tested expression.." analysis warning, which I purposely use to work around a MSVC compiler warning).
@@ -925,13 +926,13 @@
   #define MZ_READ_LE32(p) ((mz_uint32)(((const mz_uint8 *)(p))[0]) | ((mz_uint32)(((const mz_uint8 *)(p))[1]) << 8U) | ((mz_uint32)(((const mz_uint8 *)(p))[2]) << 16U) | ((mz_uint32)(((const mz_uint8 *)(p))[3]) << 24U))
 #endif
 
 #ifdef _MSC_VER
   #define MZ_FORCEINLINE __forceinline
 #elif defined(__GNUC__)
-  #define MZ_FORCEINLINE __attribute__((__always_inline__))
+  #define MZ_FORCEINLINE inline __attribute__((__always_inline__))
 #else
   #define MZ_FORCEINLINE
 #endif
 
 #ifdef __cplusplus
   extern "C" {
Index: source/shared_lib/sources/platform/posix/ircclient.cpp
===================================================================
--- source/shared_lib/sources/platform/posix/ircclient.cpp	(wersja 4583)
+++ source/shared_lib/sources/platform/posix/ircclient.cpp	(kopia robocza)
@@ -808,15 +808,13 @@
                 this->getQuitStatus() == false && iAttempts <= 7; ++iAttempts) {
                 //if(irc_run(ircSession)) {
 
             	int run_result = irc_run_session(ircSession);
             	if(run_result && this->getQuitStatus() == false) {
 					//printf("In ~IRCThread Line: %d [%p]\n",__LINE__,this);
-
-                    if(SystemFlags::VERBOSE_MODE_ENABLED || IRCThread::debugEnabled) printf ("===> IRC Could not run the session: %s run_result = %d\n", irc_strerror (irc_errno(ircSession)), run_result);
-                    printf ("===> IRC Could not run the session: %s run_result = %d\n", irc_strerror (irc_errno(ircSession)), run_result);
+			if(SystemFlags::VERBOSE_MODE_ENABLED || IRCThread::debugEnabled) printf ("===> IRC Could not run the session: %s run_result = %d\n", irc_strerror (irc_errno(ircSession)), run_result);
                 }
             }
 
 			//printf("In ~IRCThread Line: %d [%p]\n",__LINE__,this);
 #else
             for(;this->getQuitStatus() == false;) {
Index: source/shared_lib/sources/platform/posix/socket.cpp
===================================================================
--- source/shared_lib/sources/platform/posix/socket.cpp	(wersja 4583)
+++ source/shared_lib/sources/platform/posix/socket.cpp	(kopia robocza)
@@ -1750,13 +1750,22 @@
 		SystemFlags::OutputDebug(SystemFlags::debugError,"SOCKET DISCONNECTED In [%s::%s Line: %d] error while selecting socket data, err = %d, error = %s\n",__FILE__,__FUNCTION__,__LINE__,i,getLastSocketErrorFormattedText().c_str());
 	}
 	else if(i == 0) {
 		//SystemFlags::OutputDebug(SystemFlags::debugNetwork,"[%s::%s Line: %d] TIMEOUT while selecting socket data, err = %d, error = %s\n",__FILE__,__FUNCTION__,__LINE__,i,getLastSocketErrorFormattedText().c_str());
 		// Assume we are still connected, write buffer could be very busy
 		result = true;
-		SystemFlags::OutputDebug(SystemFlags::debugError,"SOCKET WRITE TIMEOUT In [%s::%s Line: %d] i = %d sock = %d\n",__FILE__,__FUNCTION__,__LINE__,i,sock);
+		
+		if(SystemFlags::VERBOSE_MODE_ENABLED) {
+			SystemFlags::OutputDebug(SystemFlags::debugError,"SOCKET WRITE TIMEOUT In [%s::%s Line: %d] i = %d sock = %d\n",__FILE__,__FUNCTION__,__LINE__,i,sock);
+		}
+		else {
+			if(!PrevSock || sock > PrevSock) {
+				SystemFlags::OutputDebug(SystemFlags::debugError,"SOCKET WRITE TIMEOUT In [%s::%s Line: %d] i = %d sock = %d\n",__FILE__,__FUNCTION__,__LINE__,i,sock);
+				PrevSock = sock;
+			}
+		}	
 	}
 	else {
 		result = true;
 	}
 
 	//return (i == 1 && FD_ISSET(sock, &set));
Index: source/tools/support/linux/system_report
===================================================================
--- source/tools/support/linux/system_report	(wersja 4583)
+++ source/tools/support/linux/system_report	(kopia robocza)
@@ -26,13 +26,13 @@
 # End of configuration section
 #
 # -----------------------------------------------------------------------------
 #
 
 LANG=C
-VERSION='0.3.4'
+VERSION='0.3.5'
 MYNAME=`basename $0`
 DEFAULT_REPORT_FILENAME=system_report.log
 
 if [ "$1"'x' = '-vx' -o "$1"'x' = '--versionx' ]
 then
 	echo 'MegaGlest System Report '"$VERSION"
@@ -223,21 +223,25 @@
 echo '' >> $REPORT_LOCATION
 echo '' >> $REPORT_LOCATION
 echo '***** Operating system *********************************************************' >> $REPORT_LOCATION
 echo '' >> $REPORT_LOCATION
 if [ `which lsb_release`'x' = 'x' ]
 then # no lsb_release in path
-	lsb=0
-	if [ -e /etc/debian_version ];   then distribution='Debian';   release='unknown release version'; codename=`cat /etc/debian_version`;   fi
-	if [ -e /etc/SuSE-release ];     then distribution='SuSE';     release='unknown release version'; codename=`cat /etc/SuSE-release`;     fi
-	if [ -e /etc/fedora-release ];   then distribution='Fedora';   release='unknown release version'; codename=`cat /etc/fedora-release`;   fi
-	if [ -e /etc/redhat-release ];   then distribution='Redhat';   release='unknown release version'; codename=`cat /etc/redhat-release`;   fi
-	if [ -e /etc/mandrake-release ]; then distribution='Mandrake'; release='unknown release version'; codename=`cat /etc/mandrake-release`; fi
+	lsb='false'
+	
+	if [ -e "/etc/os-release" ]; then
+		distribution=`awk -F "=" '/^ID/ {print $2}' /etc/os-release | awk '{ gsub("\"|\t",""); print }' | awk '{ gsub(" |\t","_"); print }'`
+		codename=`awk -F "=" '/PRETTY_NAME/ {print $2}' /etc/os-release | awk '{ gsub("\"|\t",""); print }'`
+		release_ver=`awk -F "=" '/VERSION_ID/ {print $2}' /etc/os-release | awk '{ gsub("\"|\t",""); print }'`
+		if [ "$release_ver" != "" ]; then release="$release_ver"; else release="unknown"; fi
+	else
+		distribution='unknown'; codename='unknown'; release='unknown'
+	fi
 else
-	lsb=1
-	distribution=`lsb_release -i | awk -F':' '{ gsub(/^[ \t]*/,"",$2); print $2 }'`
+	lsb='true'
+	distribution=`lsb_release -i | awk -F':' '{ gsub(/^[ \t]*/,"",$2); print $2 }' | awk '{ gsub(" |\t","_"); print }'`
 	release=`lsb_release -r | awk -F':' '{ gsub(/^[  \t]*/,"",$2); print $2 }'`
 	codename=`lsb_release -c | awk -F':' '{ gsub(/^[ \t]*/,"",$2); print $2 }'`
 fi
 architecture=`uname -m`
 echo '* Distribution: '"$distribution" >> $REPORT_LOCATION
 echo '* Release:      '"$release" >> $REPORT_LOCATION
@@ -262,24 +266,24 @@
 echo '' >> $REPORT_LOCATION
 
 if [ "$ERROR_RUNNING_MEGAGLEST"'x' = '0x' -o  "$ERROR_RUNNING_MEGAGLEST"'x' = 'x' ]
 then # Only run this if MegaGlest didn't already fail last time it was run
 	echo '    (I will now try to run MegaGlest, but it should quit automatically.)'
 	echo '' >> $REPORT_LOCATION
-	echo '>>> ./start_megaglest --use-language=en --version' >> $REPORT_LOCATION
-	$INSTALLATION_LOCATION/start_megaglest --use-language=en --version >> $REPORT_LOCATION 2>&1
+	echo '>>> ./megaglest --use-language=en --version' >> $REPORT_LOCATION
+	$INSTALLATION_LOCATION/megaglest --use-language=en --version >> $REPORT_LOCATION 2>&1
 	if [ "$?"'x' = '0x' ]
 	then # all cool
 		ERROR_RUNNING_MEGAGLEST=0
 	else # an error occurred
 		ERROR_RUNNING_MEGAGLEST=1
 	fi
 	sleep 1
 else
 	echo 'WARNING: A previous run of MegaGlest failed. Skipping test.' >&2
-	echo '>>> SKIPPED: ./start_megaglest --use-language=en --version' >> $REPORT_LOCATION
+	echo '>>> SKIPPED: ./megaglest --use-language=en --version' >> $REPORT_LOCATION
 fi
 
 echo ' →  CPU'
 echo '' >> $REPORT_LOCATION
 echo '' >> $REPORT_LOCATION
 echo '***** CPU **********************************************************************' >> $REPORT_LOCATION
@@ -356,24 +360,24 @@
 
 # Currently commented out due to http://glest.org/glest_board/?topic=8482
 #if [ "$ERROR_RUNNING_MEGAGLEST"'x' = '0x' -o  "$ERROR_RUNNING_MEGAGLEST"'x' = 'x' ]
 #then # Only run this if MegaGlest didn't already fail last time it was run
 	echo '    (I will now try to run MegaGlest, but it should quit automatically.)'
 	echo '' >> $REPORT_LOCATION
-	echo '>>> ./start_megaglest --use-language=en --opengl-info' >> $REPORT_LOCATION
-	$INSTALLATION_LOCATION/start_megaglest --use-language=en --opengl-info >> $REPORT_LOCATION 2>&1
+	echo '>>> ./megaglest --use-language=en --opengl-info' >> $REPORT_LOCATION
+	$INSTALLATION_LOCATION/megaglest --use-language=en --opengl-info >> $REPORT_LOCATION 2>&1
 	if [ "$?"'x' = '0x' ]
 	then # all cool
 		ERROR_RUNNING_MEGAGLEST=0
 	else # an error occurred
 		ERROR_RUNNING_MEGAGLEST=1
 	fi
 	sleep 1
 #else
 #	echo 'WARNING: A previous run of MegaGlest failed. Skipping test.' >&2
-#	echo '>>> SKIPPED: ./start_megaglest --use-language=en --opengl-info' >> $REPORT_LOCATION
+#	echo '>>> SKIPPED: ./megaglest --use-language=en --opengl-info' >> $REPORT_LOCATION
 #fi	
 
 if [ "`which glxinfo`"'x' = 'x' ]
 then # not available in search path
 	echo 'WARNING: "glxinfo" utility is not available.' >&2
 	echo '         Consider installing it to provide more useful information on your system.' >&2
@@ -417,8 +421,8 @@
 
 if [ "$PAUSE"'x' = '1x' -o "$PAUSE"'x' = 'truex' ]
 then
 	echo '________________________________________________________________________________'
 	echo ''
 	echo '           Please read all of the above, then press return to exit.'
-	read input >/dev/null
+	read -t600 input >/dev/null
 fi
